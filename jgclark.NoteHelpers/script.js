var exports=function(t){"use strict";async function o(t,o,n){var e,l;const{index:i}=await CommandBar.showOptions(o.map((t=>t.label)),t);return null!==(e=null===(l=o[i])||void 0===l?void 0:l.value)&&void 0!==e?e:n}(new Date).toISOString().slice(0,10);const n=(new Date).toISOString().slice(0,16);async function e(t){let n;const e=DataStore.folders;if(e.length>0){const l=[];for(const t of e)if("/"!==t){const o=t.split("/");for(let t=0;t<o.length-1;t++)o[t]="     ";o[o.length-1]="📁 ".concat(o[o.length-1]);const n=o.join("");console.log(n),l.push({label:n,value:t})}else l.push({label:"📁 /",value:"/"});n=await o(t,l,"/")}else n="/";return console.log("\tfolder=".concat(n)),n}async function l(){var t;const o=null===(t=Editor)||void 0===t?void 0:t.paragraphs;if(null==o)return;const n=o.filter((t=>"title"===t.type)),e=n.map((t=>{let o="";for(let n=1;n<t.headingLevel;n++)o+="    ";return"".concat(o).concat(t.content)}));if(e.length>0){var l,i;const t=null!==(l=null===(i=n[(await CommandBar.showOptions(e,"Select heading to jump to:")).index].contentRange)||void 0===i?void 0:i.start)&&void 0!==l?l:0;Editor.renderedSelect(t,0),CommandBar.hide()}else console.log("Warning: No headings found in this note")}function i(t){const o=t.split("/");return o.slice(0,o.length-1).join("/")}function a(t){var o;return void 0!==t.title?"[[".concat(null!==(o=t.title)&&void 0!==o?o:"","]]"):"(error)"}function c(t){let o;o=""!==t?DataStore.projectNotes.slice().filter((o=>i(o.filename)===t)):DataStore.projectNotes.slice();return o.sort(((t,o)=>{var n,e;return(null!==(n=t.title)&&void 0!==n?n:"").localeCompare(null!==(e=o.title)&&void 0!==e?e:"")}))}function r(t,o){console.log("\nmakeFolderIndex for '".concat(t,"' (").concat(o?"with":"without"," subfolders)"));let e=0;const l=[];let i=[];i=o?DataStore.folders.filter((o=>o.startsWith(t))):[t],console.log("\tFound ".concat(i.length," matching folder(s)"));for(const t of i){const o=c(t);if(o.length>0){l.push(e>0?"### ".concat(t," Index"):"".concat(t," Index")),l.push("(".concat(o.length," notes, last updated: ").concat(n,")"));for(const t of o)l.push(a(t));l.push(""),e+=o.length}}return l}return t.indexFolders=async function(){var t;const n=null!==(t=Editor.filename)&&void 0!==t?t:void 0;let l,a=[];void 0===n?(console.log("  Info: No current filename (and therefore folder) found, so will ask instead."),l=await e("Please pick folder to index")):l=i(n),console.log("\nindexFolders from folder ".concat(l));const c=await o("Create index for which folder(s)?",[{label:"This folder only (insert into current note)",value:"one-to-current"},{label:"This folder only (add/update to _index note)",value:"one-to-index"},{label:"This folder and sub-folders (add/update to single _index note)",value:"all-to-one-index"},{label:"(NOT YET WORKING) This folder and sub-folders (add/update to _index notes)",value:"all-to-many-index"},{label:"❌ Cancel",value:!1}],!1);if(!c)return;console.log("  option: ".concat(c)),c.startsWith("one")?a=r(l,!1):c.startsWith("all")&&(a=r(l,!0));const s=a.join("\n");if(console.log("  -> ".concat(s)),c.endsWith("index")){let t="".concat(l,"/_index.md"),o=DataStore.projectNoteByFilename(t);if(null==o&&(t=await DataStore.newNote("_index",l),console.log("\tnewNote filename: ".concat(String(t))),o=await DataStore.projectNoteByFilename(t),console.log("\twriting results to the new note '".concat(t,"'"))),null==o)return void console.log("error after newNote(): no valid note to write to");o.content="# ".concat(s)}else c.endsWith("current")&&Editor.insertTextAtCursor("".concat(s));console.log("\nFinished indexFolders.")},t.jumpToDone=function(){var t;const o=null===(t=Editor)||void 0===t?void 0:t.paragraphs;if(null==o)return;const n=o.filter((t=>2===t.headingLevel)).filter((t=>t.content.startsWith("Done")));if(null!=n){var e,l;const t=null!==(e=null===(l=n[0].contentRange)||void 0===l?void 0:l.start)&&void 0!==e?e:0;Editor.renderedSelect(t,0)}else console.log("Warning: Couldn't find a '## Done' section")},t.jumpToHeading=l,t.jumpToNoteHeading=async function(){const t=DataStore.projectNotes.slice().sort(((t,o)=>o.changedDate-t.changedDate)),o=await CommandBar.showOptions(t.map((t=>{var o;return null!==(o=t.title)&&void 0!==o?o:"untitled"})),"Select note to jump to"),n=t[o.index];null!=n&&null!=n.title?(await Editor.openNoteByTitle(n.title),await l()):console.log("\terror: couldn't open selected note")},t.moveNote=async function(){const{title:t,filename:o}=Editor;if(null==t||null==o)return void console.log("moveNote: warning: No note open.");const n=await e("Select a folder for '".concat(t,"'"));console.log("move ".concat(t," (filename = ").concat(o,") to ").concat(n));const l=DataStore.moveNote(o,n);null!=l?(Editor.openNoteByFilename(l),console.log("\tmoving note was successful")):console.log("\tmoving note was NOT successful")},t.setTitleFromYAML=function(){var t;const{note:o,content:n}=Editor;if(null==o||null==n)return;console.log("setTitleFromYAML:\n\told title = ".concat(null!==(t=o.title)&&void 0!==t?t:""));const e=n.split("\n");let l=0,i="";for(;l<e.length;){if(e[l].match(/^[Tt]itle:\s*.*/)){var a;const t=e[l].match(/^[Tt]itle:\s*(.*)/);i=null!==(a=null==t?void 0:t[1])&&void 0!==a?a:""}if(""===e[l]||"..."===e[l])break;l+=1}console.log("\tnew title = ".concat(i)),""!==i&&(o.title=i),function(t){var o,n,e,l,i,a,c,r,s,d,u,f,v,g,h;null!=t?"Notes"===t.type?console.log("title: ".concat(null!==(o=t.title)&&void 0!==o?o:"","\n\tfilename: ").concat(null!==(n=t.filename)&&void 0!==n?n:"","\n\tcreated: ").concat(null!==(e=String(t.createdDate))&&void 0!==e?e:"","\n\tchanged: ").concat(null!==(l=String(t.changedDate))&&void 0!==l?l:"","\n\thashtags: ").concat(null!==(i=null===(a=t.hashtags)||void 0===a?void 0:a.join(","))&&void 0!==i?i:"","\n\tmentions: ").concat(null!==(c=null===(r=t.mentions)||void 0===r?void 0:r.join(","))&&void 0!==c?c:"")):console.log("filename: ".concat(null!==(s=t.filename)&&void 0!==s?s:"","\n\tcreated: ").concat(null!==(d=String(t.createdDate))&&void 0!==d?d:"","\n\tchanged: ").concat(null!==(u=String(t.changedDate))&&void 0!==u?u:"","\n\thashtags: ").concat(null!==(f=null===(v=t.hashtags)||void 0===v?void 0:v.join(","))&&void 0!==f?f:"","\n\tmentions: ").concat(null!==(g=null===(h=t.mentions)||void 0===h?void 0:h.join(","))&&void 0!==g?g:"")):console.log("Note not found!")}(o)},Object.defineProperty(t,"__esModule",{value:!0}),t}({});Object.assign(globalThis,exports);
