# Run tests on push or pull_request
# per: https://joelhooks.com/jest-and-github-actions/
# also uses github-actions-reporter.js for reporting
#
# LOCAL ACTIONS TESTING NOTES:
# (this doesn't work because there is no local macos docker image i have found yet)
# test github actions locally using act https://github.com/nektos/act
# first time install: brew install act
# then just run `act` from the command line to test a push action
# 
# REMOTE NOTES (e.g. for after a push has been done and failed):
# to see the results of the last github actions run (e.g. on push)
# gh run view
#   ... and select the latest run (and at the end it tells you how to see the detailed errors)

name: Node.js CI

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: macos-latest
    strategy:
      matrix:
        # [16.19.1, 18.x, 19.x] -- may want to test all 3, but for speed, let's limit to one for now
        node-version: [16.19.1]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci --legacy-peer-deps
      - run: node --max-old-space-size=8192 scripts/rollup.js -b -ci
      - run: npm run test:ci

      - name: Check for Test Passes âœ…
        if: ${{ success() }}
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "context": "tests",
            "state": "success",
            "description": "Tests passed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'

      - name: Check for Test Fails ðŸš¨
        if: ${{ failure() }}
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "context": "tests",
            "state": "failure",
            "description": "Tests failed",
            "target_url": "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          }'