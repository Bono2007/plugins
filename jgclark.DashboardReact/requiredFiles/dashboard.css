/* CSS specific to showDashboard() from jgclark.Dashboard plugin */
/* Last updated 9.3.2024 for v1.0.0 by @jgclark */

:root {
	/* FIXME: not working */
	--minBreakPoint: 500px;
}

body {
	margin: 0px;
	width: 90vw;
}

/* ------------------------------------------------------------------ */
/* New settings for Grid-based layout */
.header {
	display: grid;
	/* Define grid-template-areas for better control */
	/* TODO: improve spacing here */
	grid-template-areas: "lastUpdated refresh counts filter settings";
	grid-template-columns: auto auto 1fr auto; /* Allocate space for each area */
	align-items: center; /* Vertical alignment */
	gap: 20px; /* Space between grid items */
	padding: 10px; /* Padding around the header content */
	background-color: var(--bg-alt-color);
	width: 100%; /* Ensure the header uses the full width */
	position: sticky;
	top: 0px;
	z-index: 1000;
	border-bottom: solid 1px var(--tint-color);
}

.lastUpdated {
	grid-area: lastUpdated; /* Assign the area */
	align-items: center; /* This ensures that the content of these divs is also centered */
}

.refreshButton {
	grid-area: refresh; /* Assign the area */
}

.totalCounts {
	grid-area: counts; /* Assign the area */
	/* Note: turned off given reduction in what needs to be shown in 2.0.0.a9 */
	/* Make sure totalCounts only shows when necessary */
	/* @media screen and (max-width: 500px) { */
	/* Unless the screen size is 500px wide or less, hide the element */
			/* display: none; Hide on small screens */
	/* } */
}

.filter {
	grid-area: filter; /* Assign the area */
	justify-self: end; /* Align to the right edge */
	margin-right: 20px;
} 

.settings {
	grid-area: settings; /* Assign the area */
	justify-self: end; /* Align to the right edge */
	margin-right: 20px;
} 

/* Large rows on page */
.sections {
	display: block;
	padding-right: 10px;
	margin-right: 10px;
}

/* Specific alignment fixes for icons inside buttons or links */
.fa-regular, .fa-solid {
    align-self: center;
    margin: auto; /* Centers icon within its container, vertically and horizontally */
}

.section {
	display: grid;
  grid-template-columns: [info] minmax(6rem,11rem) [items] auto;
  grid-template-rows: min-content;
	/* grid-auto-flow: column; */
  
	/* a little extra gap between first 2 cols */
	grid-column-gap: 4px;
	column-rule: 1px dotted var(--tint-color);

	/* a little spacing at top and bottom of section */
	/* padding: 2px 2px; */
	/* turn on top border (from theme CSS) */
	border-bottom: solid 1px var(--tint-color);
}

.sectionInfo {
	display: block;
	padding-block-start: 0.3rem;
	padding-block-end: 0.2rem;
	padding-inline-start: 0.5rem;
	padding-inline-end: 0.5rem;
	background-color: var(--bg-alt-color);
}
.sectionIcon {
	font-size: 1.2rem;
	font-weight: 400;
	text-align: center;
	padding-right: 0.3rem;
	padding-top: 1px;
}
.sectionName  {
	font-size: 1.0rem;
	/* make noteTitles bold */
	font-weight: 700;
	margin: unset;
	padding-top: 0px;
	padding-bottom: 0.2rem;
}
.sectionDescription {
	/* a bit smaller */
	font-size: 0.9rem;
	margin: unset;
	padding-top: 0px;
	align-self: self-end;
}

/* If rather narrow, slide [items] slides under [info] */
/* This needs to come after the earlier definitions to take priority */
@media screen and (width <= 600px) {
  .section {
    grid-template-columns: 1fr;
  }
	.sectionInfo {
		border-bottom: solid 0.5px var(--tint-color);
		display: grid;
		/* now make this area grid column-based not row-based */
		grid-template-columns: max-content auto;
		padding-top: 0.4rem;
	}
	.sectionName {
		/* turn off padding under section name */
		padding-top: 0.1rem;
		padding-bottom: 0rem;
		padding-left: 1px;
		/* some padding to right */
		padding-right: 0.5rem;
	}
}

/* turn on bottom border of last item (from theme CSS) */
/* .section:last-child {
	border-bottom: solid 1px var(--tint-color);
} */

/* Inner grid for details of a section */
.sectionItemsGrid {
	padding-inline-start: 0.3rem;
	font-size: 1.0rem;
	/* allow multi-column flow: set max columns and min width, and some other bits and pieces. Reference: https://drafts.csswg.org/css-multicol/#the-multi-column-model */
	column-count: 3;
	column-fill: balance;
	column-width: 25rem;
	/* column-gap: 1rem; */
	column-rule: 1px dotted var(--tint-color);
	column-fill: auto;
	padding-block-start: 4px;
	padding-block-end: 4px;
}

.sectionItemRow {
	/* The important trick to avoiding bad wrapping at end of columns */
	break-inside: avoid;
	display: grid;
	grid-template-columns: [icon] 1rem [item-details] auto; /* was: minmax(20rem, 30rem); */
	padding: 3px 4px 0px 4px; /* no bottom padding */
	border: 0px none;
	column-gap: 6px;
	/* vertical in containing block */
	align-self: start;
	/* horizontal in containing block */
	justify-self: right;
	/* border-collapse: collapse; */
	/* vertical for all items this contains */
	align-items: start;
	/* horizontal for all items this contains */
	justify-items: start;
	/*
	opacity: 1; 
	transition: opacity 500ms ease-in-out;
	*/
}

/* General item icon details */
.itemIcon {
	margin-bottom: unset !important;
	line-height: unset !important;
	font-size: 1.2rem;
	font-weight: 400;
	text-align: center;
}
/* Specific item icon details */
.review {
	color: var(--tint-color);
}
.dialogTrigger {
  color: var(--fg-main-color);
  opacity: 0.8;
	cursor: pointer;
}
/* The actual item's details (was col4) */
.sectionItem {
	/* reduce vertical spacing and line below */
	font-size: 1.0rem;
	font-weight: 400;
	padding: 1px 4px;
	border-bottom: 0px;
	break-inside: avoid;
	line-height: 1.2rem; /* get from a variable */
}

/* -------------------------------------------------------------- */

.dropdown-content {
    position: absolute;
    right: 30px;
    padding-right: 5px;
    padding-top: 5px;
    padding-bottom: 10px;
    background-color: var(--bg-alt-color);
    min-width: 160px;
    /* box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2); */
    box-shadow:  1px 1px 1px 0px rgb(from var(--fg-main-color) r g b / 0.3);
    z-index: 1;
	display: none;
}

.dropdown .dropdown-content {
	display: block;
}

.dropdown-content.show {
	display: block;
}

.switch-line {
    display: flex;
    justify-content: flex-end; /* Aligns content to the right */
    align-items: center; /* Center alignment of the checkbox and label */
    width: 100%; /* Ensures the flex container takes full width */
    padding-top: 0.3rem; /*5px;*/
}

.switch-label {
    padding-left: 10px; /* Space between label and switch */
    padding-right: 5px; /* Additional spacing if needed */
}

.apple-switch {
    margin-left: 10px; /* Ensures spacing between the label and the switch */
}
 
/* --------------------------------------------------------------- */

@layer A { /* all buttons, but at lower priority */
button, input {
	background-color: var(--bg-main-color);
	color: var(--fg-main-color);
	border: 1px solid rgb(from var(--fg-main-color) r g b / 0.7);
	box-shadow: 1px 1px 1px 0px rgb(from var(--fg-main-color) r g b / 0.3);
}
}

/* For buttons that trigger callbacks */
.PCButton {
	font-weight: 500;
	border-style: none;
	border-radius: 4px;
	padding: 2px 3px 0px 3px;
	margin: 2px 2px; /* a little all round */
	white-space: nowrap;
	cursor: pointer;
	font-size: 0.85rem;
	align-self: center; /* Center the button vertically if it's not aligning properly */
}
/* Set link text to plain (again) TODO: if internal calls used this can be removed */
.PCButton a {
	font-size: 0.85rem;
	text-decoration: none;
	color: var(--fg-main-color);
}


/* Show click pointer over buttons and equivalent */
button, .fake-button, .clickTarget {
	cursor: pointer;
}

/* --------------------------------------------------------------- */

/* Add tooltips to these buttons, thanks to CSS-only technique at https://www.youtube.com/watch?v=M4lQwiUvGlY&t=157s */
.tooltip {
	position: relative;
	z-index: 1001; /* float above everything, including the header */
	/* cursor: help; */
}
.tooltip::before, .tooltip::after {
	position: absolute;
	left: 50%;
	/* opacity:0;  -- problem is that this interferes with cursor selection because it still grabs cursor -- so switching to display: instead */
	display: none;
	transition: all ease 0.3s;
	transition-delay: 0.8;
}
/* Set tooltip little bit*/
.tooltip::before {
	content: "";
	border-width: 10px 8px 0 8px;
	border-style: solid;
	border-color: var(--bg-main-color) transparent transparent transparent;
	margin-left: -8px;
	top: -12px;
}
.tooltip::after {
	content: attr(data-tooltip);
	margin-left: -10px;
	padding: 0.3rem;
	top: -12px;
	font-size: 0.85rem;
	color: var(--fg-main-color);
	background: var(--bg-main-color);
	border: 1px solid var(--tint-color);
	border-radius: 6px;
	transform: translateY(-100%);
}

.tooltip:hover::before, .tooltip:hover::after {
	/* opacity: 1; */
	display: block;
}

/* ------------------------------------------------------------------ */

.commentLine { /* show as italic */
	font-weight: 400;
	font-style: italic;
}
.clickTarget { /* change cursor for icons which can be clicked on */
	cursor: pointer;
}
.pad-left { /* add space before something (normally an icon) */
	padding-left: 0.3rem;
}
.pad-right { /* add space after something (normally an icon) */
	padding-right: 0.3em;
}
.space-under {	/* add space under item */
	padding-bottom: 0.3em;
}
.scheduledDate {
	color: var(--tint-color);
}
.content, .content:visited, .content:active { /* all links turn off text color and underlining by default */
	color: inherit;
	text-decoration: none;
	cursor: pointer;
}
.content:hover, .noteTitle:hover { /* except when hovering over a content item */
	text-decoration: underline;
	/* text-decoration-color: var(--tint-color); */
}
.externalLink {
	text-decoration: underline;
	cursor: pointer;
	color: var(--tint-color);
}
.event-link {
	font-weight: 400;
	border-color: var(--bg-alt-color);
	border-radius: 3px;
	border-width: 1px;
	border-style: solid;
	padding: 0px 3px;
}
/* add space after icons: 'i.fa-solid, i.fa-light, i.fa-regular { padding-right: 6px; }',  */
.noteTitle { /* add "font-weight: 700;" to make noteTitles bold */
	color: var(--tint-color) !important;
}
/* .multi-cols { /* allow multi-column flow: set max columns and min width, and some other bits and pieces. Reference: https://drafts.csswg.org/css-multicol/#the-multi-column-model */
/*	column-count: 3;
	column-fill: balance;
	column-width: 25rem;
	column-gap: 1rem;
	column-rule: 1px dotted var(--tint-color);
} */
.avoidColumnBreakHere { /* apply to a <div> to avoid column break part-way through item */
	break-inside: avoid;
}
.fadeOutAndHide {
	transition: opacity 500ms ease-out;
	opacity: 0;  /* Start from fully visible */
  }

/* Some headings specified from measuring the colour of NP sidebar elements */
.sidebarDaily { font-size: 1.0rem; color: #d0703c; }
.sidebarWeekly { font-size: 1.0rem; color: #be23b6; }
.sidebarMonthly { font-size: 1.0rem; color: #f5528b; }
.sidebarQuarterly { font-size: 1.0rem; color: #e08008; }
.sidebarYearly { font-size: 1.0rem; color: #efba13; }
.sidebarHashtag { font-size: 1.0rem; color: var(--hashtag-color); }
.sidebarMention { font-size: 1.0rem; color: var(--attag-color); }

#error {
	background-color: red;
	padding-left: 10px;
}

/* --------------------------------------------------------------- */

/* For fancy toggle as checkbox */
/* from [Pure CSS3 iOS switch checkbox. A switch allows the user to quickly… | by Pedro M. S. Duarte | codeburst](https://codeburst.io/pure-css3-input-as-the-ios-checkbox-8b6347d5cefb)
 */
input.apple-switch {
  position: relative;
  appearance: none;
	vertical-align: top;
  outline: none;
  width: 2.0rem; /* 50px; */
  height: 1.1rem; /* 30px; */
  background-color: #EEE;
  border: 1px solid #DDD;
  border-radius: 2.0rem; /* 50px; */
  /* box-shadow: inset -0.8rem 0 0 0 #fff; /* -20px */
	margin-top: 0px;
	margin-right: 4px;
}

input.apple-switch:after {
  content: "";
	vertical-align: top;
  position: absolute;
  top: 0px;
  left: 1px;
  background: #FFF;
  width: 1.0rem; /* 26px; */
  height: 1.0rem; /* 26px; */
  border-radius: 50%;
  box-shadow: 1px 0px 1px rgba(0,0,0,0.3);
	margin-right: 1.0rem;
}

input.apple-switch:checked {
	vertical-align: top;
  box-shadow: inset 0.8rem 0 0 0 var(--tint-color); /* 20px; */
  border-color: var(--tint-color);
}

input.apple-switch:checked:after {
	vertical-align: top;
  left: 0.8rem; /* 20px; */
  box-shadow: -2px 4px 3px rgba(0,0,0,0.1); /* 0.05;*/
}

/* Header waiting spinner */

.fa-spin {
	color: var(--tint-color);
    animation: spin 1s infinite linear;
}