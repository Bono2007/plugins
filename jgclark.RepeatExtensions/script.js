var exports=function(e){"use strict";const t="\\d{4}-[01]\\d{1}-\\d{2}",n="[0-2]\\d{1}:[0-5]\\d{1}\\s?(?:AM|PM|am|pm)?";function a(e,t){const n=new Date(e);let a=0,o=0,c=0;const l=t.charAt(t.length-1);let r=Number(t.substr(0,t.length-1));switch(l){case"b":{const e=n.getUTCDay();let t;t=r<0?(e-12)%7:(e+6)%7,6===t&&r--,-6===t&&r++;a=r+2*Math.trunc((r+t)/5);break}case"d":a=r;break;case"w":a=7*r;break;case"m":o=r;break;case"q":o=3*r;break;case"y":c=r;break;default:console.log("\tInvalid date interval: '".concat(t,"'"))}const d=a>0?Calendar.addUnitToDate(n,"day",a):o>0?Calendar.addUnitToDate(n,"month",o):c>0?Calendar.addUnitToDate(n,"year",c):n;return d.toISOString().slice(0,10)}return(new Date).toISOString().slice(0,10),(new Date).toISOString().slice(0,16),e.repeats=async function(){const e="\\s+>(".concat(t,")"),o="".concat(t," ").concat(n),c="@done\\(".concat(o,"\\)"),l="@done\\((".concat(t,")( ").concat(n,")\\)"),{paragraphs:r,title:d}=Editor;if(null===r)return void console.log("repeat: warning: No note open, or empty note.");let s=r.length;console.log("\nrepeats: from note '".concat(d,"'")),null===r[s]&&s--;let i=0,g=0;for(let e=0;e<s;e++){const t=r[e];2===t.headingLevel&&"Done"===t.content&&(i=e),2===t.headingLevel&&"Cancelled"===t.content&&(g=e)}const p=i>0?i:g>0?g:s;let h=0,u="",m="",f="",w="",b=[];for(h=0;h<p;h++){const t=r[h];if(u=t.content,m="",f="",t.content.match(c)&&(b=u.match(l),f=b[1],w=b[2],console.log("  Found completed repeat ".concat(f,"/").concat(w," in line ").concat(h)),m=u.replace(w,""),t.content=m,await Editor.updateParagraph(t),m.match("@repeat\\(\\+?\\d+[bdwmqy]\\)"))){let n="",o="";b=m.match("@repeat\\((.*?)\\)");let c=b[1];if(console.log("\tFound EXTENDED @repeat syntax: ".concat(c)),"+"===c[0])c=c.substring(1,c.length),n=a(f,c),console.log("\tAdding from completed date --\x3e ".concat(n)),m=m.replace(/\s+>\d{4}-[01]\d{1}-\d{2}/,"");else{var y;let t="";const o=null!==(y=m.match(e))&&void 0!==y?y:[];console.log(o.length),null!=o[1]?(console.log("\tmatch => ".concat(o[1])),t=o[1],m=m.replace(">".concat(t),"")):t=f,n=a(t,c),console.log("\tAdding from due date --\x3e ".concat(n))}if(o=m.replace(/@done\(.*\)/,"").trim(),"Notes"===Editor.type)o+=" >".concat(n),await Editor.insertParagraphAfterParagraph(o,t,"scheduled"),console.log("\tInserted new para after line ".concat(t.lineIndex));else{const e=n.replace(/-/g,""),a=await DataStore.calendarNoteByDateString(e);null!=a.title?(await a.appendTodo(o),console.log("\tInserted new repeat in daily note ".concat(e))):(o+=" >".concat(n),console.log("\toutline: ".concat(o)),await Editor.insertParagraphAfterParagraph(o,t,"scheduled"),console.log("\tInserted new repeat in original daily note"))}}}},Object.defineProperty(e,"__esModule",{value:!0}),e}({});Object.assign(globalThis,exports);
