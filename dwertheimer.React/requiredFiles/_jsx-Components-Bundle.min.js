var jsxBundle = (function (exports, React$1) {
  'use strict'

  function _interopDefaultLegacy(e) {
    return e && typeof e === 'object' && 'default' in e ? e : { default: e }
  }

  function _interopNamespace(e) {
    if (e && e.__esModule) return e
    var n = Object.create(null)
    if (e) {
      Object.keys(e).forEach(function (k) {
        if (k !== 'default') {
          var d = Object.getOwnPropertyDescriptor(e, k)
          Object.defineProperty(
            n,
            k,
            d.get
              ? d
              : {
                  enumerable: true,
                  get: function () {
                    return e[k]
                  },
                },
          )
        }
      })
    }
    n['default'] = e
    return Object.freeze(n)
  }

  var React__default = /*#__PURE__*/ _interopDefaultLegacy(React$1)
  var React__namespace = /*#__PURE__*/ _interopNamespace(React$1)

  var commonjsGlobal =
    typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {}

  function getDefaultExportFromCjs(x) {
    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x
  }

  function getAugmentedNamespace(n) {
    if (n.__esModule) return n
    var a = Object.defineProperty({}, '__esModule', { value: true })
    Object.keys(n).forEach(function (k) {
      var d = Object.getOwnPropertyDescriptor(n, k)
      Object.defineProperty(
        a,
        k,
        d.get
          ? d
          : {
              enumerable: true,
              get: function () {
                return n[k]
              },
            },
      )
    })
    return a
  }

  var chroma$1 = { exports: {} }

  /**
   * chroma.js - JavaScript library for color conversions
   *
   * Copyright (c) 2011-2019, Gregor Aisch
   * All rights reserved.
   *
   * Redistribution and use in source and binary forms, with or without
   * modification, are permitted provided that the following conditions are met:
   *
   * 1. Redistributions of source code must retain the above copyright notice, this
   * list of conditions and the following disclaimer.
   *
   * 2. Redistributions in binary form must reproduce the above copyright notice,
   * this list of conditions and the following disclaimer in the documentation
   * and/or other materials provided with the distribution.
   *
   * 3. The name Gregor Aisch may not be used to endorse or promote products
   * derived from this software without specific prior written permission.
   *
   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
   * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
   * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
   * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
   * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
   * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   *
   * -------------------------------------------------------
   *
   * chroma.js includes colors from colorbrewer2.org, which are released under
   * the following license:
   *
   * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,
   * and The Pennsylvania State University.
   *
   * Licensed under the Apache License, Version 2.0 (the "License");
   * you may not use this file except in compliance with the License.
   * You may obtain a copy of the License at
   * http://www.apache.org/licenses/LICENSE-2.0
   *
   * Unless required by applicable law or agreed to in writing,
   * software distributed under the License is distributed on an
   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
   * either express or implied. See the License for the specific
   * language governing permissions and limitations under the License.
   *
   * ------------------------------------------------------
   *
   * Named colors are taken from X11 Color Names.
   * http://www.w3.org/TR/css3-color/#svg-color
   *
   * @preserve
   */

  ;(function (module, exports) {
    ;(function (global, factory) {
      module.exports = factory()
    })(commonjsGlobal, function () {
      var limit$2 = function (x, min, max) {
        if (min === void 0) min = 0
        if (max === void 0) max = 1

        return x < min ? min : x > max ? max : x
      }

      var limit$1 = limit$2

      var clip_rgb$3 = function (rgb) {
        rgb._clipped = false
        rgb._unclipped = rgb.slice(0)
        for (var i = 0; i <= 3; i++) {
          if (i < 3) {
            if (rgb[i] < 0 || rgb[i] > 255) {
              rgb._clipped = true
            }
            rgb[i] = limit$1(rgb[i], 0, 255)
          } else if (i === 3) {
            rgb[i] = limit$1(rgb[i], 0, 1)
          }
        }
        return rgb
      }

      // ported from jQuery's $.type
      var classToType = {}
      for (var i$1 = 0, list$1 = ['Boolean', 'Number', 'String', 'Function', 'Array', 'Date', 'RegExp', 'Undefined', 'Null']; i$1 < list$1.length; i$1 += 1) {
        var name = list$1[i$1]

        classToType['[object ' + name + ']'] = name.toLowerCase()
      }
      var type$p = function (obj) {
        return classToType[Object.prototype.toString.call(obj)] || 'object'
      }

      var type$o = type$p

      var unpack$B = function (args, keyOrder) {
        if (keyOrder === void 0) keyOrder = null

        // if called with more than 3 arguments, we return the arguments
        if (args.length >= 3) {
          return Array.prototype.slice.call(args)
        }
        // with less than 3 args we check if first arg is object
        // and use the keyOrder string to extract and sort properties
        if (type$o(args[0]) == 'object' && keyOrder) {
          return keyOrder
            .split('')
            .filter(function (k) {
              return args[0][k] !== undefined
            })
            .map(function (k) {
              return args[0][k]
            })
        }
        // otherwise we just return the first argument
        // (which we suppose is an array of args)
        return args[0]
      }

      var type$n = type$p

      var last$4 = function (args) {
        if (args.length < 2) {
          return null
        }
        var l = args.length - 1
        if (type$n(args[l]) == 'string') {
          return args[l].toLowerCase()
        }
        return null
      }

      var PI$2 = Math.PI

      var utils = {
        clip_rgb: clip_rgb$3,
        limit: limit$2,
        type: type$p,
        unpack: unpack$B,
        last: last$4,
        PI: PI$2,
        TWOPI: PI$2 * 2,
        PITHIRD: PI$2 / 3,
        DEG2RAD: PI$2 / 180,
        RAD2DEG: 180 / PI$2,
      }

      var input$h = {
        format: {},
        autodetect: [],
      }

      var last$3 = utils.last
      var clip_rgb$2 = utils.clip_rgb
      var type$m = utils.type
      var _input = input$h

      var Color$D = function Color() {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        var me = this
        if (type$m(args[0]) === 'object' && args[0].constructor && args[0].constructor === this.constructor) {
          // the argument is already a Color instance
          return args[0]
        }

        // last argument could be the mode
        var mode = last$3(args)
        var autodetect = false

        if (!mode) {
          autodetect = true
          if (!_input.sorted) {
            _input.autodetect = _input.autodetect.sort(function (a, b) {
              return b.p - a.p
            })
            _input.sorted = true
          }
          // auto-detect format
          for (var i = 0, list = _input.autodetect; i < list.length; i += 1) {
            var chk = list[i]

            mode = chk.test.apply(chk, args)
            if (mode) {
              break
            }
          }
        }

        if (_input.format[mode]) {
          var rgb = _input.format[mode].apply(null, autodetect ? args : args.slice(0, -1))
          me._rgb = clip_rgb$2(rgb)
        } else {
          throw new Error('unknown format: ' + args)
        }

        // add alpha channel
        if (me._rgb.length === 3) {
          me._rgb.push(1)
        }
      }

      Color$D.prototype.toString = function toString() {
        if (type$m(this.hex) == 'function') {
          return this.hex()
        }
        return '[' + this._rgb.join(',') + ']'
      }

      var Color_1 = Color$D

      var chroma$k = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        return new (Function.prototype.bind.apply(chroma$k.Color, [null].concat(args)))()
      }

      chroma$k.Color = Color_1
      chroma$k.version = '2.4.2'

      var chroma_1 = chroma$k

      var unpack$A = utils.unpack
      var max$2 = Math.max

      var rgb2cmyk$1 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        var ref = unpack$A(args, 'rgb')
        var r = ref[0]
        var g = ref[1]
        var b = ref[2]
        r = r / 255
        g = g / 255
        b = b / 255
        var k = 1 - max$2(r, max$2(g, b))
        var f = k < 1 ? 1 / (1 - k) : 0
        var c = (1 - r - k) * f
        var m = (1 - g - k) * f
        var y = (1 - b - k) * f
        return [c, m, y, k]
      }

      var rgb2cmyk_1 = rgb2cmyk$1

      var unpack$z = utils.unpack

      var cmyk2rgb = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        args = unpack$z(args, 'cmyk')
        var c = args[0]
        var m = args[1]
        var y = args[2]
        var k = args[3]
        var alpha = args.length > 4 ? args[4] : 1
        if (k === 1) {
          return [0, 0, 0, alpha]
        }
        return [
          c >= 1 ? 0 : 255 * (1 - c) * (1 - k), // r
          m >= 1 ? 0 : 255 * (1 - m) * (1 - k), // g
          y >= 1 ? 0 : 255 * (1 - y) * (1 - k), // b
          alpha,
        ]
      }

      var cmyk2rgb_1 = cmyk2rgb

      var chroma$j = chroma_1
      var Color$C = Color_1
      var input$g = input$h
      var unpack$y = utils.unpack
      var type$l = utils.type

      var rgb2cmyk = rgb2cmyk_1

      Color$C.prototype.cmyk = function () {
        return rgb2cmyk(this._rgb)
      }

      chroma$j.cmyk = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        return new (Function.prototype.bind.apply(Color$C, [null].concat(args, ['cmyk'])))()
      }

      input$g.format.cmyk = cmyk2rgb_1

      input$g.autodetect.push({
        p: 2,
        test: function () {
          var args = [],
            len = arguments.length
          while (len--) args[len] = arguments[len]

          args = unpack$y(args, 'cmyk')
          if (type$l(args) === 'array' && args.length === 4) {
            return 'cmyk'
          }
        },
      })

      var unpack$x = utils.unpack
      var last$2 = utils.last
      var rnd = function (a) {
        return Math.round(a * 100) / 100
      }

      /*
       * supported arguments:
       * - hsl2css(h,s,l)
       * - hsl2css(h,s,l,a)
       * - hsl2css([h,s,l], mode)
       * - hsl2css([h,s,l,a], mode)
       * - hsl2css({h,s,l,a}, mode)
       */
      var hsl2css$1 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        var hsla = unpack$x(args, 'hsla')
        var mode = last$2(args) || 'lsa'
        hsla[0] = rnd(hsla[0] || 0)
        hsla[1] = rnd(hsla[1] * 100) + '%'
        hsla[2] = rnd(hsla[2] * 100) + '%'
        if (mode === 'hsla' || (hsla.length > 3 && hsla[3] < 1)) {
          hsla[3] = hsla.length > 3 ? hsla[3] : 1
          mode = 'hsla'
        } else {
          hsla.length = 3
        }
        return mode + '(' + hsla.join(',') + ')'
      }

      var hsl2css_1 = hsl2css$1

      var unpack$w = utils.unpack

      /*
       * supported arguments:
       * - rgb2hsl(r,g,b)
       * - rgb2hsl(r,g,b,a)
       * - rgb2hsl([r,g,b])
       * - rgb2hsl([r,g,b,a])
       * - rgb2hsl({r,g,b,a})
       */
      var rgb2hsl$3 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        args = unpack$w(args, 'rgba')
        var r = args[0]
        var g = args[1]
        var b = args[2]

        r /= 255
        g /= 255
        b /= 255

        var min = Math.min(r, g, b)
        var max = Math.max(r, g, b)

        var l = (max + min) / 2
        var s, h

        if (max === min) {
          s = 0
          h = Number.NaN
        } else {
          s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min)
        }

        if (r == max) {
          h = (g - b) / (max - min)
        } else if (g == max) {
          h = 2 + (b - r) / (max - min)
        } else if (b == max) {
          h = 4 + (r - g) / (max - min)
        }

        h *= 60
        if (h < 0) {
          h += 360
        }
        if (args.length > 3 && args[3] !== undefined) {
          return [h, s, l, args[3]]
        }
        return [h, s, l]
      }

      var rgb2hsl_1 = rgb2hsl$3

      var unpack$v = utils.unpack
      var last$1 = utils.last
      var hsl2css = hsl2css_1
      var rgb2hsl$2 = rgb2hsl_1
      var round$6 = Math.round

      /*
       * supported arguments:
       * - rgb2css(r,g,b)
       * - rgb2css(r,g,b,a)
       * - rgb2css([r,g,b], mode)
       * - rgb2css([r,g,b,a], mode)
       * - rgb2css({r,g,b,a}, mode)
       */
      var rgb2css$1 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        var rgba = unpack$v(args, 'rgba')
        var mode = last$1(args) || 'rgb'
        if (mode.substr(0, 3) == 'hsl') {
          return hsl2css(rgb2hsl$2(rgba), mode)
        }
        rgba[0] = round$6(rgba[0])
        rgba[1] = round$6(rgba[1])
        rgba[2] = round$6(rgba[2])
        if (mode === 'rgba' || (rgba.length > 3 && rgba[3] < 1)) {
          rgba[3] = rgba.length > 3 ? rgba[3] : 1
          mode = 'rgba'
        }
        return mode + '(' + rgba.slice(0, mode === 'rgb' ? 3 : 4).join(',') + ')'
      }

      var rgb2css_1 = rgb2css$1

      var unpack$u = utils.unpack
      var round$5 = Math.round

      var hsl2rgb$1 = function () {
        var assign

        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]
        args = unpack$u(args, 'hsl')
        var h = args[0]
        var s = args[1]
        var l = args[2]
        var r, g, b
        if (s === 0) {
          r = g = b = l * 255
        } else {
          var t3 = [0, 0, 0]
          var c = [0, 0, 0]
          var t2 = l < 0.5 ? l * (1 + s) : l + s - l * s
          var t1 = 2 * l - t2
          var h_ = h / 360
          t3[0] = h_ + 1 / 3
          t3[1] = h_
          t3[2] = h_ - 1 / 3
          for (var i = 0; i < 3; i++) {
            if (t3[i] < 0) {
              t3[i] += 1
            }
            if (t3[i] > 1) {
              t3[i] -= 1
            }
            if (6 * t3[i] < 1) {
              c[i] = t1 + (t2 - t1) * 6 * t3[i]
            } else if (2 * t3[i] < 1) {
              c[i] = t2
            } else if (3 * t3[i] < 2) {
              c[i] = t1 + (t2 - t1) * (2 / 3 - t3[i]) * 6
            } else {
              c[i] = t1
            }
          }
          ;(assign = [round$5(c[0] * 255), round$5(c[1] * 255), round$5(c[2] * 255)]), (r = assign[0]), (g = assign[1]), (b = assign[2])
        }
        if (args.length > 3) {
          // keep alpha channel
          return [r, g, b, args[3]]
        }
        return [r, g, b, 1]
      }

      var hsl2rgb_1 = hsl2rgb$1

      var hsl2rgb = hsl2rgb_1
      var input$f = input$h

      var RE_RGB = /^rgb\(\s*(-?\d+),\s*(-?\d+)\s*,\s*(-?\d+)\s*\)$/
      var RE_RGBA = /^rgba\(\s*(-?\d+),\s*(-?\d+)\s*,\s*(-?\d+)\s*,\s*([01]|[01]?\.\d+)\)$/
      var RE_RGB_PCT = /^rgb\(\s*(-?\d+(?:\.\d+)?)%,\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*\)$/
      var RE_RGBA_PCT = /^rgba\(\s*(-?\d+(?:\.\d+)?)%,\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)$/
      var RE_HSL = /^hsl\(\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*\)$/
      var RE_HSLA = /^hsla\(\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?)%\s*,\s*(-?\d+(?:\.\d+)?)%\s*,\s*([01]|[01]?\.\d+)\)$/

      var round$4 = Math.round

      var css2rgb$1 = function (css) {
        css = css.toLowerCase().trim()
        var m

        if (input$f.format.named) {
          try {
            return input$f.format.named(css)
          } catch (e) {
            // eslint-disable-next-line
          }
        }

        // rgb(250,20,0)
        if ((m = css.match(RE_RGB))) {
          var rgb = m.slice(1, 4)
          for (var i = 0; i < 3; i++) {
            rgb[i] = +rgb[i]
          }
          rgb[3] = 1 // default alpha
          return rgb
        }

        // rgba(250,20,0,0.4)
        if ((m = css.match(RE_RGBA))) {
          var rgb$1 = m.slice(1, 5)
          for (var i$1 = 0; i$1 < 4; i$1++) {
            rgb$1[i$1] = +rgb$1[i$1]
          }
          return rgb$1
        }

        // rgb(100%,0%,0%)
        if ((m = css.match(RE_RGB_PCT))) {
          var rgb$2 = m.slice(1, 4)
          for (var i$2 = 0; i$2 < 3; i$2++) {
            rgb$2[i$2] = round$4(rgb$2[i$2] * 2.55)
          }
          rgb$2[3] = 1 // default alpha
          return rgb$2
        }

        // rgba(100%,0%,0%,0.4)
        if ((m = css.match(RE_RGBA_PCT))) {
          var rgb$3 = m.slice(1, 5)
          for (var i$3 = 0; i$3 < 3; i$3++) {
            rgb$3[i$3] = round$4(rgb$3[i$3] * 2.55)
          }
          rgb$3[3] = +rgb$3[3]
          return rgb$3
        }

        // hsl(0,100%,50%)
        if ((m = css.match(RE_HSL))) {
          var hsl = m.slice(1, 4)
          hsl[1] *= 0.01
          hsl[2] *= 0.01
          var rgb$4 = hsl2rgb(hsl)
          rgb$4[3] = 1
          return rgb$4
        }

        // hsla(0,100%,50%,0.5)
        if ((m = css.match(RE_HSLA))) {
          var hsl$1 = m.slice(1, 4)
          hsl$1[1] *= 0.01
          hsl$1[2] *= 0.01
          var rgb$5 = hsl2rgb(hsl$1)
          rgb$5[3] = +m[4] // default alpha = 1
          return rgb$5
        }
      }

      css2rgb$1.test = function (s) {
        return RE_RGB.test(s) || RE_RGBA.test(s) || RE_RGB_PCT.test(s) || RE_RGBA_PCT.test(s) || RE_HSL.test(s) || RE_HSLA.test(s)
      }

      var css2rgb_1 = css2rgb$1

      var chroma$i = chroma_1
      var Color$B = Color_1
      var input$e = input$h
      var type$k = utils.type

      var rgb2css = rgb2css_1
      var css2rgb = css2rgb_1

      Color$B.prototype.css = function (mode) {
        return rgb2css(this._rgb, mode)
      }

      chroma$i.css = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        return new (Function.prototype.bind.apply(Color$B, [null].concat(args, ['css'])))()
      }

      input$e.format.css = css2rgb

      input$e.autodetect.push({
        p: 5,
        test: function (h) {
          var rest = [],
            len = arguments.length - 1
          while (len-- > 0) rest[len] = arguments[len + 1]

          if (!rest.length && type$k(h) === 'string' && css2rgb.test(h)) {
            return 'css'
          }
        },
      })

      var Color$A = Color_1
      var chroma$h = chroma_1
      var input$d = input$h
      var unpack$t = utils.unpack

      input$d.format.gl = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        var rgb = unpack$t(args, 'rgba')
        rgb[0] *= 255
        rgb[1] *= 255
        rgb[2] *= 255
        return rgb
      }

      chroma$h.gl = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        return new (Function.prototype.bind.apply(Color$A, [null].concat(args, ['gl'])))()
      }

      Color$A.prototype.gl = function () {
        var rgb = this._rgb
        return [rgb[0] / 255, rgb[1] / 255, rgb[2] / 255, rgb[3]]
      }

      var unpack$s = utils.unpack

      var rgb2hcg$1 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        var ref = unpack$s(args, 'rgb')
        var r = ref[0]
        var g = ref[1]
        var b = ref[2]
        var min = Math.min(r, g, b)
        var max = Math.max(r, g, b)
        var delta = max - min
        var c = (delta * 100) / 255
        var _g = (min / (255 - delta)) * 100
        var h
        if (delta === 0) {
          h = Number.NaN
        } else {
          if (r === max) {
            h = (g - b) / delta
          }
          if (g === max) {
            h = 2 + (b - r) / delta
          }
          if (b === max) {
            h = 4 + (r - g) / delta
          }
          h *= 60
          if (h < 0) {
            h += 360
          }
        }
        return [h, c, _g]
      }

      var rgb2hcg_1 = rgb2hcg$1

      var unpack$r = utils.unpack
      var floor$3 = Math.floor

      /*
       * this is basically just HSV with some minor tweaks
       *
       * hue.. [0..360]
       * chroma .. [0..1]
       * grayness .. [0..1]
       */

      var hcg2rgb = function () {
        var assign, assign$1, assign$2, assign$3, assign$4, assign$5

        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]
        args = unpack$r(args, 'hcg')
        var h = args[0]
        var c = args[1]
        var _g = args[2]
        var r, g, b
        _g = _g * 255
        var _c = c * 255
        if (c === 0) {
          r = g = b = _g
        } else {
          if (h === 360) {
            h = 0
          }
          if (h > 360) {
            h -= 360
          }
          if (h < 0) {
            h += 360
          }
          h /= 60
          var i = floor$3(h)
          var f = h - i
          var p = _g * (1 - c)
          var q = p + _c * (1 - f)
          var t = p + _c * f
          var v = p + _c
          switch (i) {
            case 0:
              ;(assign = [v, t, p]), (r = assign[0]), (g = assign[1]), (b = assign[2])
              break
            case 1:
              ;(assign$1 = [q, v, p]), (r = assign$1[0]), (g = assign$1[1]), (b = assign$1[2])
              break
            case 2:
              ;(assign$2 = [p, v, t]), (r = assign$2[0]), (g = assign$2[1]), (b = assign$2[2])
              break
            case 3:
              ;(assign$3 = [p, q, v]), (r = assign$3[0]), (g = assign$3[1]), (b = assign$3[2])
              break
            case 4:
              ;(assign$4 = [t, p, v]), (r = assign$4[0]), (g = assign$4[1]), (b = assign$4[2])
              break
            case 5:
              ;(assign$5 = [v, p, q]), (r = assign$5[0]), (g = assign$5[1]), (b = assign$5[2])
              break
          }
        }
        return [r, g, b, args.length > 3 ? args[3] : 1]
      }

      var hcg2rgb_1 = hcg2rgb

      var unpack$q = utils.unpack
      var type$j = utils.type
      var chroma$g = chroma_1
      var Color$z = Color_1
      var input$c = input$h

      var rgb2hcg = rgb2hcg_1

      Color$z.prototype.hcg = function () {
        return rgb2hcg(this._rgb)
      }

      chroma$g.hcg = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        return new (Function.prototype.bind.apply(Color$z, [null].concat(args, ['hcg'])))()
      }

      input$c.format.hcg = hcg2rgb_1

      input$c.autodetect.push({
        p: 1,
        test: function () {
          var args = [],
            len = arguments.length
          while (len--) args[len] = arguments[len]

          args = unpack$q(args, 'hcg')
          if (type$j(args) === 'array' && args.length === 3) {
            return 'hcg'
          }
        },
      })

      var unpack$p = utils.unpack
      var last = utils.last
      var round$3 = Math.round

      var rgb2hex$2 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        var ref = unpack$p(args, 'rgba')
        var r = ref[0]
        var g = ref[1]
        var b = ref[2]
        var a = ref[3]
        var mode = last(args) || 'auto'
        if (a === undefined) {
          a = 1
        }
        if (mode === 'auto') {
          mode = a < 1 ? 'rgba' : 'rgb'
        }
        r = round$3(r)
        g = round$3(g)
        b = round$3(b)
        var u = (r << 16) | (g << 8) | b
        var str = '000000' + u.toString(16) //#.toUpperCase();
        str = str.substr(str.length - 6)
        var hxa = '0' + round$3(a * 255).toString(16)
        hxa = hxa.substr(hxa.length - 2)
        switch (mode.toLowerCase()) {
          case 'rgba':
            return '#' + str + hxa
          case 'argb':
            return '#' + hxa + str
          default:
            return '#' + str
        }
      }

      var rgb2hex_1 = rgb2hex$2

      var RE_HEX = /^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/
      var RE_HEXA = /^#?([A-Fa-f0-9]{8}|[A-Fa-f0-9]{4})$/

      var hex2rgb$1 = function (hex) {
        if (hex.match(RE_HEX)) {
          // remove optional leading #
          if (hex.length === 4 || hex.length === 7) {
            hex = hex.substr(1)
          }
          // expand short-notation to full six-digit
          if (hex.length === 3) {
            hex = hex.split('')
            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]
          }
          var u = parseInt(hex, 16)
          var r = u >> 16
          var g = (u >> 8) & 0xff
          var b = u & 0xff
          return [r, g, b, 1]
        }

        // match rgba hex format, eg #FF000077
        if (hex.match(RE_HEXA)) {
          if (hex.length === 5 || hex.length === 9) {
            // remove optional leading #
            hex = hex.substr(1)
          }
          // expand short-notation to full eight-digit
          if (hex.length === 4) {
            hex = hex.split('')
            hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3]
          }
          var u$1 = parseInt(hex, 16)
          var r$1 = (u$1 >> 24) & 0xff
          var g$1 = (u$1 >> 16) & 0xff
          var b$1 = (u$1 >> 8) & 0xff
          var a = Math.round(((u$1 & 0xff) / 0xff) * 100) / 100
          return [r$1, g$1, b$1, a]
        }

        // we used to check for css colors here
        // if _input.css? and rgb = _input.css hex
        //     return rgb

        throw new Error('unknown hex color: ' + hex)
      }

      var hex2rgb_1 = hex2rgb$1

      var chroma$f = chroma_1
      var Color$y = Color_1
      var type$i = utils.type
      var input$b = input$h

      var rgb2hex$1 = rgb2hex_1

      Color$y.prototype.hex = function (mode) {
        return rgb2hex$1(this._rgb, mode)
      }

      chroma$f.hex = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        return new (Function.prototype.bind.apply(Color$y, [null].concat(args, ['hex'])))()
      }

      input$b.format.hex = hex2rgb_1
      input$b.autodetect.push({
        p: 4,
        test: function (h) {
          var rest = [],
            len = arguments.length - 1
          while (len-- > 0) rest[len] = arguments[len + 1]

          if (!rest.length && type$i(h) === 'string' && [3, 4, 5, 6, 7, 8, 9].indexOf(h.length) >= 0) {
            return 'hex'
          }
        },
      })

      var unpack$o = utils.unpack
      var TWOPI$2 = utils.TWOPI
      var min$2 = Math.min
      var sqrt$4 = Math.sqrt
      var acos = Math.acos

      var rgb2hsi$1 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        /*
	        borrowed from here:
	        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp
	        */
        var ref = unpack$o(args, 'rgb')
        var r = ref[0]
        var g = ref[1]
        var b = ref[2]
        r /= 255
        g /= 255
        b /= 255
        var h
        var min_ = min$2(r, g, b)
        var i = (r + g + b) / 3
        var s = i > 0 ? 1 - min_ / i : 0
        if (s === 0) {
          h = NaN
        } else {
          h = (r - g + (r - b)) / 2
          h /= sqrt$4((r - g) * (r - g) + (r - b) * (g - b))
          h = acos(h)
          if (b > g) {
            h = TWOPI$2 - h
          }
          h /= TWOPI$2
        }
        return [h * 360, s, i]
      }

      var rgb2hsi_1 = rgb2hsi$1

      var unpack$n = utils.unpack
      var limit = utils.limit
      var TWOPI$1 = utils.TWOPI
      var PITHIRD = utils.PITHIRD
      var cos$4 = Math.cos

      /*
       * hue [0..360]
       * saturation [0..1]
       * intensity [0..1]
       */
      var hsi2rgb = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        /*
	        borrowed from here:
	        http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp
	        */
        args = unpack$n(args, 'hsi')
        var h = args[0]
        var s = args[1]
        var i = args[2]
        var r, g, b

        if (isNaN(h)) {
          h = 0
        }
        if (isNaN(s)) {
          s = 0
        }
        // normalize hue
        if (h > 360) {
          h -= 360
        }
        if (h < 0) {
          h += 360
        }
        h /= 360
        if (h < 1 / 3) {
          b = (1 - s) / 3
          r = (1 + (s * cos$4(TWOPI$1 * h)) / cos$4(PITHIRD - TWOPI$1 * h)) / 3
          g = 1 - (b + r)
        } else if (h < 2 / 3) {
          h -= 1 / 3
          r = (1 - s) / 3
          g = (1 + (s * cos$4(TWOPI$1 * h)) / cos$4(PITHIRD - TWOPI$1 * h)) / 3
          b = 1 - (r + g)
        } else {
          h -= 2 / 3
          g = (1 - s) / 3
          b = (1 + (s * cos$4(TWOPI$1 * h)) / cos$4(PITHIRD - TWOPI$1 * h)) / 3
          r = 1 - (g + b)
        }
        r = limit(i * r * 3)
        g = limit(i * g * 3)
        b = limit(i * b * 3)
        return [r * 255, g * 255, b * 255, args.length > 3 ? args[3] : 1]
      }

      var hsi2rgb_1 = hsi2rgb

      var unpack$m = utils.unpack
      var type$h = utils.type
      var chroma$e = chroma_1
      var Color$x = Color_1
      var input$a = input$h

      var rgb2hsi = rgb2hsi_1

      Color$x.prototype.hsi = function () {
        return rgb2hsi(this._rgb)
      }

      chroma$e.hsi = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        return new (Function.prototype.bind.apply(Color$x, [null].concat(args, ['hsi'])))()
      }

      input$a.format.hsi = hsi2rgb_1

      input$a.autodetect.push({
        p: 2,
        test: function () {
          var args = [],
            len = arguments.length
          while (len--) args[len] = arguments[len]

          args = unpack$m(args, 'hsi')
          if (type$h(args) === 'array' && args.length === 3) {
            return 'hsi'
          }
        },
      })

      var unpack$l = utils.unpack
      var type$g = utils.type
      var chroma$d = chroma_1
      var Color$w = Color_1
      var input$9 = input$h

      var rgb2hsl$1 = rgb2hsl_1

      Color$w.prototype.hsl = function () {
        return rgb2hsl$1(this._rgb)
      }

      chroma$d.hsl = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        return new (Function.prototype.bind.apply(Color$w, [null].concat(args, ['hsl'])))()
      }

      input$9.format.hsl = hsl2rgb_1

      input$9.autodetect.push({
        p: 2,
        test: function () {
          var args = [],
            len = arguments.length
          while (len--) args[len] = arguments[len]

          args = unpack$l(args, 'hsl')
          if (type$g(args) === 'array' && args.length === 3) {
            return 'hsl'
          }
        },
      })

      var unpack$k = utils.unpack
      var min$1 = Math.min
      var max$1 = Math.max

      /*
       * supported arguments:
       * - rgb2hsv(r,g,b)
       * - rgb2hsv([r,g,b])
       * - rgb2hsv({r,g,b})
       */
      var rgb2hsl = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        args = unpack$k(args, 'rgb')
        var r = args[0]
        var g = args[1]
        var b = args[2]
        var min_ = min$1(r, g, b)
        var max_ = max$1(r, g, b)
        var delta = max_ - min_
        var h, s, v
        v = max_ / 255.0
        if (max_ === 0) {
          h = Number.NaN
          s = 0
        } else {
          s = delta / max_
          if (r === max_) {
            h = (g - b) / delta
          }
          if (g === max_) {
            h = 2 + (b - r) / delta
          }
          if (b === max_) {
            h = 4 + (r - g) / delta
          }
          h *= 60
          if (h < 0) {
            h += 360
          }
        }
        return [h, s, v]
      }

      var rgb2hsv$1 = rgb2hsl

      var unpack$j = utils.unpack
      var floor$2 = Math.floor

      var hsv2rgb = function () {
        var assign, assign$1, assign$2, assign$3, assign$4, assign$5

        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]
        args = unpack$j(args, 'hsv')
        var h = args[0]
        var s = args[1]
        var v = args[2]
        var r, g, b
        v *= 255
        if (s === 0) {
          r = g = b = v
        } else {
          if (h === 360) {
            h = 0
          }
          if (h > 360) {
            h -= 360
          }
          if (h < 0) {
            h += 360
          }
          h /= 60

          var i = floor$2(h)
          var f = h - i
          var p = v * (1 - s)
          var q = v * (1 - s * f)
          var t = v * (1 - s * (1 - f))

          switch (i) {
            case 0:
              ;(assign = [v, t, p]), (r = assign[0]), (g = assign[1]), (b = assign[2])
              break
            case 1:
              ;(assign$1 = [q, v, p]), (r = assign$1[0]), (g = assign$1[1]), (b = assign$1[2])
              break
            case 2:
              ;(assign$2 = [p, v, t]), (r = assign$2[0]), (g = assign$2[1]), (b = assign$2[2])
              break
            case 3:
              ;(assign$3 = [p, q, v]), (r = assign$3[0]), (g = assign$3[1]), (b = assign$3[2])
              break
            case 4:
              ;(assign$4 = [t, p, v]), (r = assign$4[0]), (g = assign$4[1]), (b = assign$4[2])
              break
            case 5:
              ;(assign$5 = [v, p, q]), (r = assign$5[0]), (g = assign$5[1]), (b = assign$5[2])
              break
          }
        }
        return [r, g, b, args.length > 3 ? args[3] : 1]
      }

      var hsv2rgb_1 = hsv2rgb

      var unpack$i = utils.unpack
      var type$f = utils.type
      var chroma$c = chroma_1
      var Color$v = Color_1
      var input$8 = input$h

      var rgb2hsv = rgb2hsv$1

      Color$v.prototype.hsv = function () {
        return rgb2hsv(this._rgb)
      }

      chroma$c.hsv = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        return new (Function.prototype.bind.apply(Color$v, [null].concat(args, ['hsv'])))()
      }

      input$8.format.hsv = hsv2rgb_1

      input$8.autodetect.push({
        p: 2,
        test: function () {
          var args = [],
            len = arguments.length
          while (len--) args[len] = arguments[len]

          args = unpack$i(args, 'hsv')
          if (type$f(args) === 'array' && args.length === 3) {
            return 'hsv'
          }
        },
      })

      var labConstants = {
        // Corresponds roughly to RGB brighter/darker
        Kn: 18,

        // D65 standard referent
        Xn: 0.95047,
        Yn: 1,
        Zn: 1.08883,

        t0: 0.137931034, // 4 / 29
        t1: 0.206896552, // 6 / 29
        t2: 0.12841855, // 3 * t1 * t1
        t3: 0.008856452, // t1 * t1 * t1
      }

      var LAB_CONSTANTS$3 = labConstants
      var unpack$h = utils.unpack
      var pow$a = Math.pow

      var rgb2lab$2 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        var ref = unpack$h(args, 'rgb')
        var r = ref[0]
        var g = ref[1]
        var b = ref[2]
        var ref$1 = rgb2xyz(r, g, b)
        var x = ref$1[0]
        var y = ref$1[1]
        var z = ref$1[2]
        var l = 116 * y - 16
        return [l < 0 ? 0 : l, 500 * (x - y), 200 * (y - z)]
      }

      var rgb_xyz = function (r) {
        if ((r /= 255) <= 0.04045) {
          return r / 12.92
        }
        return pow$a((r + 0.055) / 1.055, 2.4)
      }

      var xyz_lab = function (t) {
        if (t > LAB_CONSTANTS$3.t3) {
          return pow$a(t, 1 / 3)
        }
        return t / LAB_CONSTANTS$3.t2 + LAB_CONSTANTS$3.t0
      }

      var rgb2xyz = function (r, g, b) {
        r = rgb_xyz(r)
        g = rgb_xyz(g)
        b = rgb_xyz(b)
        var x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / LAB_CONSTANTS$3.Xn)
        var y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.072175 * b) / LAB_CONSTANTS$3.Yn)
        var z = xyz_lab((0.0193339 * r + 0.119192 * g + 0.9503041 * b) / LAB_CONSTANTS$3.Zn)
        return [x, y, z]
      }

      var rgb2lab_1 = rgb2lab$2

      var LAB_CONSTANTS$2 = labConstants
      var unpack$g = utils.unpack
      var pow$9 = Math.pow

      /*
       * L* [0..100]
       * a [-100..100]
       * b [-100..100]
       */
      var lab2rgb$1 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        args = unpack$g(args, 'lab')
        var l = args[0]
        var a = args[1]
        var b = args[2]
        var x, y, z, r, g, b_

        y = (l + 16) / 116
        x = isNaN(a) ? y : y + a / 500
        z = isNaN(b) ? y : y - b / 200

        y = LAB_CONSTANTS$2.Yn * lab_xyz(y)
        x = LAB_CONSTANTS$2.Xn * lab_xyz(x)
        z = LAB_CONSTANTS$2.Zn * lab_xyz(z)

        r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z) // D65 -> sRGB
        g = xyz_rgb(-0.969266 * x + 1.8760108 * y + 0.041556 * z)
        b_ = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z)

        return [r, g, b_, args.length > 3 ? args[3] : 1]
      }

      var xyz_rgb = function (r) {
        return 255 * (r <= 0.00304 ? 12.92 * r : 1.055 * pow$9(r, 1 / 2.4) - 0.055)
      }

      var lab_xyz = function (t) {
        return t > LAB_CONSTANTS$2.t1 ? t * t * t : LAB_CONSTANTS$2.t2 * (t - LAB_CONSTANTS$2.t0)
      }

      var lab2rgb_1 = lab2rgb$1

      var unpack$f = utils.unpack
      var type$e = utils.type
      var chroma$b = chroma_1
      var Color$u = Color_1
      var input$7 = input$h

      var rgb2lab$1 = rgb2lab_1

      Color$u.prototype.lab = function () {
        return rgb2lab$1(this._rgb)
      }

      chroma$b.lab = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        return new (Function.prototype.bind.apply(Color$u, [null].concat(args, ['lab'])))()
      }

      input$7.format.lab = lab2rgb_1

      input$7.autodetect.push({
        p: 2,
        test: function () {
          var args = [],
            len = arguments.length
          while (len--) args[len] = arguments[len]

          args = unpack$f(args, 'lab')
          if (type$e(args) === 'array' && args.length === 3) {
            return 'lab'
          }
        },
      })

      var unpack$e = utils.unpack
      var RAD2DEG = utils.RAD2DEG
      var sqrt$3 = Math.sqrt
      var atan2$2 = Math.atan2
      var round$2 = Math.round

      var lab2lch$2 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        var ref = unpack$e(args, 'lab')
        var l = ref[0]
        var a = ref[1]
        var b = ref[2]
        var c = sqrt$3(a * a + b * b)
        var h = (atan2$2(b, a) * RAD2DEG + 360) % 360
        if (round$2(c * 10000) === 0) {
          h = Number.NaN
        }
        return [l, c, h]
      }

      var lab2lch_1 = lab2lch$2

      var unpack$d = utils.unpack
      var rgb2lab = rgb2lab_1
      var lab2lch$1 = lab2lch_1

      var rgb2lch$1 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        var ref = unpack$d(args, 'rgb')
        var r = ref[0]
        var g = ref[1]
        var b = ref[2]
        var ref$1 = rgb2lab(r, g, b)
        var l = ref$1[0]
        var a = ref$1[1]
        var b_ = ref$1[2]
        return lab2lch$1(l, a, b_)
      }

      var rgb2lch_1 = rgb2lch$1

      var unpack$c = utils.unpack
      var DEG2RAD = utils.DEG2RAD
      var sin$3 = Math.sin
      var cos$3 = Math.cos

      var lch2lab$2 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        /*
	        Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.
	        These formulas were invented by David Dalrymple to obtain maximum contrast without going
	        out of gamut if the parameters are in the range 0-1.

	        A saturation multiplier was added by Gregor Aisch
	        */
        var ref = unpack$c(args, 'lch')
        var l = ref[0]
        var c = ref[1]
        var h = ref[2]
        if (isNaN(h)) {
          h = 0
        }
        h = h * DEG2RAD
        return [l, cos$3(h) * c, sin$3(h) * c]
      }

      var lch2lab_1 = lch2lab$2

      var unpack$b = utils.unpack
      var lch2lab$1 = lch2lab_1
      var lab2rgb = lab2rgb_1

      var lch2rgb$1 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        args = unpack$b(args, 'lch')
        var l = args[0]
        var c = args[1]
        var h = args[2]
        var ref = lch2lab$1(l, c, h)
        var L = ref[0]
        var a = ref[1]
        var b_ = ref[2]
        var ref$1 = lab2rgb(L, a, b_)
        var r = ref$1[0]
        var g = ref$1[1]
        var b = ref$1[2]
        return [r, g, b, args.length > 3 ? args[3] : 1]
      }

      var lch2rgb_1 = lch2rgb$1

      var unpack$a = utils.unpack
      var lch2rgb = lch2rgb_1

      var hcl2rgb = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        var hcl = unpack$a(args, 'hcl').reverse()
        return lch2rgb.apply(void 0, hcl)
      }

      var hcl2rgb_1 = hcl2rgb

      var unpack$9 = utils.unpack
      var type$d = utils.type
      var chroma$a = chroma_1
      var Color$t = Color_1
      var input$6 = input$h

      var rgb2lch = rgb2lch_1

      Color$t.prototype.lch = function () {
        return rgb2lch(this._rgb)
      }
      Color$t.prototype.hcl = function () {
        return rgb2lch(this._rgb).reverse()
      }

      chroma$a.lch = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        return new (Function.prototype.bind.apply(Color$t, [null].concat(args, ['lch'])))()
      }
      chroma$a.hcl = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        return new (Function.prototype.bind.apply(Color$t, [null].concat(args, ['hcl'])))()
      }

      input$6.format.lch = lch2rgb_1
      input$6.format.hcl = hcl2rgb_1
      ;['lch', 'hcl'].forEach(function (m) {
        return input$6.autodetect.push({
          p: 2,
          test: function () {
            var args = [],
              len = arguments.length
            while (len--) args[len] = arguments[len]

            args = unpack$9(args, m)
            if (type$d(args) === 'array' && args.length === 3) {
              return m
            }
          },
        })
      })

      /**
	    	X11 color names

	    	http://www.w3.org/TR/css3-color/#svg-color
	    */

      var w3cx11$1 = {
        aliceblue: '#f0f8ff',
        antiquewhite: '#faebd7',
        aqua: '#00ffff',
        aquamarine: '#7fffd4',
        azure: '#f0ffff',
        beige: '#f5f5dc',
        bisque: '#ffe4c4',
        black: '#000000',
        blanchedalmond: '#ffebcd',
        blue: '#0000ff',
        blueviolet: '#8a2be2',
        brown: '#a52a2a',
        burlywood: '#deb887',
        cadetblue: '#5f9ea0',
        chartreuse: '#7fff00',
        chocolate: '#d2691e',
        coral: '#ff7f50',
        cornflower: '#6495ed',
        cornflowerblue: '#6495ed',
        cornsilk: '#fff8dc',
        crimson: '#dc143c',
        cyan: '#00ffff',
        darkblue: '#00008b',
        darkcyan: '#008b8b',
        darkgoldenrod: '#b8860b',
        darkgray: '#a9a9a9',
        darkgreen: '#006400',
        darkgrey: '#a9a9a9',
        darkkhaki: '#bdb76b',
        darkmagenta: '#8b008b',
        darkolivegreen: '#556b2f',
        darkorange: '#ff8c00',
        darkorchid: '#9932cc',
        darkred: '#8b0000',
        darksalmon: '#e9967a',
        darkseagreen: '#8fbc8f',
        darkslateblue: '#483d8b',
        darkslategray: '#2f4f4f',
        darkslategrey: '#2f4f4f',
        darkturquoise: '#00ced1',
        darkviolet: '#9400d3',
        deeppink: '#ff1493',
        deepskyblue: '#00bfff',
        dimgray: '#696969',
        dimgrey: '#696969',
        dodgerblue: '#1e90ff',
        firebrick: '#b22222',
        floralwhite: '#fffaf0',
        forestgreen: '#228b22',
        fuchsia: '#ff00ff',
        gainsboro: '#dcdcdc',
        ghostwhite: '#f8f8ff',
        gold: '#ffd700',
        goldenrod: '#daa520',
        gray: '#808080',
        green: '#008000',
        greenyellow: '#adff2f',
        grey: '#808080',
        honeydew: '#f0fff0',
        hotpink: '#ff69b4',
        indianred: '#cd5c5c',
        indigo: '#4b0082',
        ivory: '#fffff0',
        khaki: '#f0e68c',
        laserlemon: '#ffff54',
        lavender: '#e6e6fa',
        lavenderblush: '#fff0f5',
        lawngreen: '#7cfc00',
        lemonchiffon: '#fffacd',
        lightblue: '#add8e6',
        lightcoral: '#f08080',
        lightcyan: '#e0ffff',
        lightgoldenrod: '#fafad2',
        lightgoldenrodyellow: '#fafad2',
        lightgray: '#d3d3d3',
        lightgreen: '#90ee90',
        lightgrey: '#d3d3d3',
        lightpink: '#ffb6c1',
        lightsalmon: '#ffa07a',
        lightseagreen: '#20b2aa',
        lightskyblue: '#87cefa',
        lightslategray: '#778899',
        lightslategrey: '#778899',
        lightsteelblue: '#b0c4de',
        lightyellow: '#ffffe0',
        lime: '#00ff00',
        limegreen: '#32cd32',
        linen: '#faf0e6',
        magenta: '#ff00ff',
        maroon: '#800000',
        maroon2: '#7f0000',
        maroon3: '#b03060',
        mediumaquamarine: '#66cdaa',
        mediumblue: '#0000cd',
        mediumorchid: '#ba55d3',
        mediumpurple: '#9370db',
        mediumseagreen: '#3cb371',
        mediumslateblue: '#7b68ee',
        mediumspringgreen: '#00fa9a',
        mediumturquoise: '#48d1cc',
        mediumvioletred: '#c71585',
        midnightblue: '#191970',
        mintcream: '#f5fffa',
        mistyrose: '#ffe4e1',
        moccasin: '#ffe4b5',
        navajowhite: '#ffdead',
        navy: '#000080',
        oldlace: '#fdf5e6',
        olive: '#808000',
        olivedrab: '#6b8e23',
        orange: '#ffa500',
        orangered: '#ff4500',
        orchid: '#da70d6',
        palegoldenrod: '#eee8aa',
        palegreen: '#98fb98',
        paleturquoise: '#afeeee',
        palevioletred: '#db7093',
        papayawhip: '#ffefd5',
        peachpuff: '#ffdab9',
        peru: '#cd853f',
        pink: '#ffc0cb',
        plum: '#dda0dd',
        powderblue: '#b0e0e6',
        purple: '#800080',
        purple2: '#7f007f',
        purple3: '#a020f0',
        rebeccapurple: '#663399',
        red: '#ff0000',
        rosybrown: '#bc8f8f',
        royalblue: '#4169e1',
        saddlebrown: '#8b4513',
        salmon: '#fa8072',
        sandybrown: '#f4a460',
        seagreen: '#2e8b57',
        seashell: '#fff5ee',
        sienna: '#a0522d',
        silver: '#c0c0c0',
        skyblue: '#87ceeb',
        slateblue: '#6a5acd',
        slategray: '#708090',
        slategrey: '#708090',
        snow: '#fffafa',
        springgreen: '#00ff7f',
        steelblue: '#4682b4',
        tan: '#d2b48c',
        teal: '#008080',
        thistle: '#d8bfd8',
        tomato: '#ff6347',
        turquoise: '#40e0d0',
        violet: '#ee82ee',
        wheat: '#f5deb3',
        white: '#ffffff',
        whitesmoke: '#f5f5f5',
        yellow: '#ffff00',
        yellowgreen: '#9acd32',
      }

      var w3cx11_1 = w3cx11$1

      var Color$s = Color_1
      var input$5 = input$h
      var type$c = utils.type

      var w3cx11 = w3cx11_1
      var hex2rgb = hex2rgb_1
      var rgb2hex = rgb2hex_1

      Color$s.prototype.name = function () {
        var hex = rgb2hex(this._rgb, 'rgb')
        for (var i = 0, list = Object.keys(w3cx11); i < list.length; i += 1) {
          var n = list[i]

          if (w3cx11[n] === hex) {
            return n.toLowerCase()
          }
        }
        return hex
      }

      input$5.format.named = function (name) {
        name = name.toLowerCase()
        if (w3cx11[name]) {
          return hex2rgb(w3cx11[name])
        }
        throw new Error('unknown color name: ' + name)
      }

      input$5.autodetect.push({
        p: 5,
        test: function (h) {
          var rest = [],
            len = arguments.length - 1
          while (len-- > 0) rest[len] = arguments[len + 1]

          if (!rest.length && type$c(h) === 'string' && w3cx11[h.toLowerCase()]) {
            return 'named'
          }
        },
      })

      var unpack$8 = utils.unpack

      var rgb2num$1 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        var ref = unpack$8(args, 'rgb')
        var r = ref[0]
        var g = ref[1]
        var b = ref[2]
        return (r << 16) + (g << 8) + b
      }

      var rgb2num_1 = rgb2num$1

      var type$b = utils.type

      var num2rgb = function (num) {
        if (type$b(num) == 'number' && num >= 0 && num <= 0xffffff) {
          var r = num >> 16
          var g = (num >> 8) & 0xff
          var b = num & 0xff
          return [r, g, b, 1]
        }
        throw new Error('unknown num color: ' + num)
      }

      var num2rgb_1 = num2rgb

      var chroma$9 = chroma_1
      var Color$r = Color_1
      var input$4 = input$h
      var type$a = utils.type

      var rgb2num = rgb2num_1

      Color$r.prototype.num = function () {
        return rgb2num(this._rgb)
      }

      chroma$9.num = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        return new (Function.prototype.bind.apply(Color$r, [null].concat(args, ['num'])))()
      }

      input$4.format.num = num2rgb_1

      input$4.autodetect.push({
        p: 5,
        test: function () {
          var args = [],
            len = arguments.length
          while (len--) args[len] = arguments[len]

          if (args.length === 1 && type$a(args[0]) === 'number' && args[0] >= 0 && args[0] <= 0xffffff) {
            return 'num'
          }
        },
      })

      var chroma$8 = chroma_1
      var Color$q = Color_1
      var input$3 = input$h
      var unpack$7 = utils.unpack
      var type$9 = utils.type
      var round$1 = Math.round

      Color$q.prototype.rgb = function (rnd) {
        if (rnd === void 0) rnd = true

        if (rnd === false) {
          return this._rgb.slice(0, 3)
        }
        return this._rgb.slice(0, 3).map(round$1)
      }

      Color$q.prototype.rgba = function (rnd) {
        if (rnd === void 0) rnd = true

        return this._rgb.slice(0, 4).map(function (v, i) {
          return i < 3 ? (rnd === false ? v : round$1(v)) : v
        })
      }

      chroma$8.rgb = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        return new (Function.prototype.bind.apply(Color$q, [null].concat(args, ['rgb'])))()
      }

      input$3.format.rgb = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        var rgba = unpack$7(args, 'rgba')
        if (rgba[3] === undefined) {
          rgba[3] = 1
        }
        return rgba
      }

      input$3.autodetect.push({
        p: 3,
        test: function () {
          var args = [],
            len = arguments.length
          while (len--) args[len] = arguments[len]

          args = unpack$7(args, 'rgba')
          if (type$9(args) === 'array' && (args.length === 3 || (args.length === 4 && type$9(args[3]) == 'number' && args[3] >= 0 && args[3] <= 1))) {
            return 'rgb'
          }
        },
      })

      /*
       * Based on implementation by Neil Bartlett
       * https://github.com/neilbartlett/color-temperature
       */

      var log$1 = Math.log

      var temperature2rgb$1 = function (kelvin) {
        var temp = kelvin / 100
        var r, g, b
        if (temp < 66) {
          r = 255
          g = temp < 6 ? 0 : -155.25485562709179 - 0.44596950469579133 * (g = temp - 2) + 104.49216199393888 * log$1(g)
          b = temp < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (b = temp - 10) + 115.67994401066147 * log$1(b)
        } else {
          r = 351.97690566805693 + 0.114206453784165 * (r = temp - 55) - 40.25366309332127 * log$1(r)
          g = 325.4494125711974 + 0.07943456536662342 * (g = temp - 50) - 28.0852963507957 * log$1(g)
          b = 255
        }
        return [r, g, b, 1]
      }

      var temperature2rgb_1 = temperature2rgb$1

      /*
       * Based on implementation by Neil Bartlett
       * https://github.com/neilbartlett/color-temperature
       **/

      var temperature2rgb = temperature2rgb_1
      var unpack$6 = utils.unpack
      var round = Math.round

      var rgb2temperature$1 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        var rgb = unpack$6(args, 'rgb')
        var r = rgb[0],
          b = rgb[2]
        var minTemp = 1000
        var maxTemp = 40000
        var eps = 0.4
        var temp
        while (maxTemp - minTemp > eps) {
          temp = (maxTemp + minTemp) * 0.5
          var rgb$1 = temperature2rgb(temp)
          if (rgb$1[2] / rgb$1[0] >= b / r) {
            maxTemp = temp
          } else {
            minTemp = temp
          }
        }
        return round(temp)
      }

      var rgb2temperature_1 = rgb2temperature$1

      var chroma$7 = chroma_1
      var Color$p = Color_1
      var input$2 = input$h

      var rgb2temperature = rgb2temperature_1

      Color$p.prototype.temp =
        Color$p.prototype.kelvin =
        Color$p.prototype.temperature =
          function () {
            return rgb2temperature(this._rgb)
          }

      chroma$7.temp =
        chroma$7.kelvin =
        chroma$7.temperature =
          function () {
            var args = [],
              len = arguments.length
            while (len--) args[len] = arguments[len]

            return new (Function.prototype.bind.apply(Color$p, [null].concat(args, ['temp'])))()
          }

      input$2.format.temp = input$2.format.kelvin = input$2.format.temperature = temperature2rgb_1

      var unpack$5 = utils.unpack
      var cbrt = Math.cbrt
      var pow$8 = Math.pow
      var sign$1 = Math.sign

      var rgb2oklab$2 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        // OKLab color space implementation taken from
        // https://bottosson.github.io/posts/oklab/
        var ref = unpack$5(args, 'rgb')
        var r = ref[0]
        var g = ref[1]
        var b = ref[2]
        var ref$1 = [rgb2lrgb(r / 255), rgb2lrgb(g / 255), rgb2lrgb(b / 255)]
        var lr = ref$1[0]
        var lg = ref$1[1]
        var lb = ref$1[2]
        var l = cbrt(0.4122214708 * lr + 0.5363325363 * lg + 0.0514459929 * lb)
        var m = cbrt(0.2119034982 * lr + 0.6806995451 * lg + 0.1073969566 * lb)
        var s = cbrt(0.0883024619 * lr + 0.2817188376 * lg + 0.6299787005 * lb)

        return [0.2104542553 * l + 0.793617785 * m - 0.0040720468 * s, 1.9779984951 * l - 2.428592205 * m + 0.4505937099 * s, 0.0259040371 * l + 0.7827717662 * m - 0.808675766 * s]
      }

      var rgb2oklab_1 = rgb2oklab$2

      function rgb2lrgb(c) {
        var abs = Math.abs(c)
        if (abs < 0.04045) {
          return c / 12.92
        }
        return (sign$1(c) || 1) * pow$8((abs + 0.055) / 1.055, 2.4)
      }

      var unpack$4 = utils.unpack
      var pow$7 = Math.pow
      var sign = Math.sign

      /*
       * L* [0..100]
       * a [-100..100]
       * b [-100..100]
       */
      var oklab2rgb$1 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        args = unpack$4(args, 'lab')
        var L = args[0]
        var a = args[1]
        var b = args[2]

        var l = pow$7(L + 0.3963377774 * a + 0.2158037573 * b, 3)
        var m = pow$7(L - 0.1055613458 * a - 0.0638541728 * b, 3)
        var s = pow$7(L - 0.0894841775 * a - 1.291485548 * b, 3)

        return [
          255 * lrgb2rgb(+4.0767416621 * l - 3.3077115913 * m + 0.2309699292 * s),
          255 * lrgb2rgb(-1.2684380046 * l + 2.6097574011 * m - 0.3413193965 * s),
          255 * lrgb2rgb(-0.0041960863 * l - 0.7034186147 * m + 1.707614701 * s),
          args.length > 3 ? args[3] : 1,
        ]
      }

      var oklab2rgb_1 = oklab2rgb$1

      function lrgb2rgb(c) {
        var abs = Math.abs(c)
        if (abs > 0.0031308) {
          return (sign(c) || 1) * (1.055 * pow$7(abs, 1 / 2.4) - 0.055)
        }
        return c * 12.92
      }

      var unpack$3 = utils.unpack
      var type$8 = utils.type
      var chroma$6 = chroma_1
      var Color$o = Color_1
      var input$1 = input$h

      var rgb2oklab$1 = rgb2oklab_1

      Color$o.prototype.oklab = function () {
        return rgb2oklab$1(this._rgb)
      }

      chroma$6.oklab = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        return new (Function.prototype.bind.apply(Color$o, [null].concat(args, ['oklab'])))()
      }

      input$1.format.oklab = oklab2rgb_1

      input$1.autodetect.push({
        p: 3,
        test: function () {
          var args = [],
            len = arguments.length
          while (len--) args[len] = arguments[len]

          args = unpack$3(args, 'oklab')
          if (type$8(args) === 'array' && args.length === 3) {
            return 'oklab'
          }
        },
      })

      var unpack$2 = utils.unpack
      var rgb2oklab = rgb2oklab_1
      var lab2lch = lab2lch_1

      var rgb2oklch$1 = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        var ref = unpack$2(args, 'rgb')
        var r = ref[0]
        var g = ref[1]
        var b = ref[2]
        var ref$1 = rgb2oklab(r, g, b)
        var l = ref$1[0]
        var a = ref$1[1]
        var b_ = ref$1[2]
        return lab2lch(l, a, b_)
      }

      var rgb2oklch_1 = rgb2oklch$1

      var unpack$1 = utils.unpack
      var lch2lab = lch2lab_1
      var oklab2rgb = oklab2rgb_1

      var oklch2rgb = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        args = unpack$1(args, 'lch')
        var l = args[0]
        var c = args[1]
        var h = args[2]
        var ref = lch2lab(l, c, h)
        var L = ref[0]
        var a = ref[1]
        var b_ = ref[2]
        var ref$1 = oklab2rgb(L, a, b_)
        var r = ref$1[0]
        var g = ref$1[1]
        var b = ref$1[2]
        return [r, g, b, args.length > 3 ? args[3] : 1]
      }

      var oklch2rgb_1 = oklch2rgb

      var unpack = utils.unpack
      var type$7 = utils.type
      var chroma$5 = chroma_1
      var Color$n = Color_1
      var input = input$h

      var rgb2oklch = rgb2oklch_1

      Color$n.prototype.oklch = function () {
        return rgb2oklch(this._rgb)
      }

      chroma$5.oklch = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        return new (Function.prototype.bind.apply(Color$n, [null].concat(args, ['oklch'])))()
      }

      input.format.oklch = oklch2rgb_1

      input.autodetect.push({
        p: 3,
        test: function () {
          var args = [],
            len = arguments.length
          while (len--) args[len] = arguments[len]

          args = unpack(args, 'oklch')
          if (type$7(args) === 'array' && args.length === 3) {
            return 'oklch'
          }
        },
      })

      var Color$m = Color_1
      var type$6 = utils.type

      Color$m.prototype.alpha = function (a, mutate) {
        if (mutate === void 0) mutate = false

        if (a !== undefined && type$6(a) === 'number') {
          if (mutate) {
            this._rgb[3] = a
            return this
          }
          return new Color$m([this._rgb[0], this._rgb[1], this._rgb[2], a], 'rgb')
        }
        return this._rgb[3]
      }

      var Color$l = Color_1

      Color$l.prototype.clipped = function () {
        return this._rgb._clipped || false
      }

      var Color$k = Color_1
      var LAB_CONSTANTS$1 = labConstants

      Color$k.prototype.darken = function (amount) {
        if (amount === void 0) amount = 1

        var me = this
        var lab = me.lab()
        lab[0] -= LAB_CONSTANTS$1.Kn * amount
        return new Color$k(lab, 'lab').alpha(me.alpha(), true)
      }

      Color$k.prototype.brighten = function (amount) {
        if (amount === void 0) amount = 1

        return this.darken(-amount)
      }

      Color$k.prototype.darker = Color$k.prototype.darken
      Color$k.prototype.brighter = Color$k.prototype.brighten

      var Color$j = Color_1

      Color$j.prototype.get = function (mc) {
        var ref = mc.split('.')
        var mode = ref[0]
        var channel = ref[1]
        var src = this[mode]()
        if (channel) {
          var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0)
          if (i > -1) {
            return src[i]
          }
          throw new Error('unknown channel ' + channel + ' in mode ' + mode)
        } else {
          return src
        }
      }

      var Color$i = Color_1
      var type$5 = utils.type
      var pow$6 = Math.pow

      var EPS = 1e-7
      var MAX_ITER = 20

      Color$i.prototype.luminance = function (lum) {
        if (lum !== undefined && type$5(lum) === 'number') {
          if (lum === 0) {
            // return pure black
            return new Color$i([0, 0, 0, this._rgb[3]], 'rgb')
          }
          if (lum === 1) {
            // return pure white
            return new Color$i([255, 255, 255, this._rgb[3]], 'rgb')
          }
          // compute new color using...
          var cur_lum = this.luminance()
          var mode = 'rgb'
          var max_iter = MAX_ITER

          var test = function (low, high) {
            var mid = low.interpolate(high, 0.5, mode)
            var lm = mid.luminance()
            if (Math.abs(lum - lm) < EPS || !max_iter--) {
              // close enough
              return mid
            }
            return lm > lum ? test(low, mid) : test(mid, high)
          }

          var rgb = (cur_lum > lum ? test(new Color$i([0, 0, 0]), this) : test(this, new Color$i([255, 255, 255]))).rgb()
          return new Color$i(rgb.concat([this._rgb[3]]))
        }
        return rgb2luminance.apply(void 0, this._rgb.slice(0, 3))
      }

      var rgb2luminance = function (r, g, b) {
        // relative luminance
        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef
        r = luminance_x(r)
        g = luminance_x(g)
        b = luminance_x(b)
        return 0.2126 * r + 0.7152 * g + 0.0722 * b
      }

      var luminance_x = function (x) {
        x /= 255
        return x <= 0.03928 ? x / 12.92 : pow$6((x + 0.055) / 1.055, 2.4)
      }

      var interpolator$1 = {}

      var Color$h = Color_1
      var type$4 = utils.type
      var interpolator = interpolator$1

      var mix$1 = function (col1, col2, f) {
        if (f === void 0) f = 0.5
        var rest = [],
          len = arguments.length - 3
        while (len-- > 0) rest[len] = arguments[len + 3]

        var mode = rest[0] || 'lrgb'
        if (!interpolator[mode] && !rest.length) {
          // fall back to the first supported mode
          mode = Object.keys(interpolator)[0]
        }
        if (!interpolator[mode]) {
          throw new Error('interpolation mode ' + mode + ' is not defined')
        }
        if (type$4(col1) !== 'object') {
          col1 = new Color$h(col1)
        }
        if (type$4(col2) !== 'object') {
          col2 = new Color$h(col2)
        }
        return interpolator[mode](col1, col2, f).alpha(col1.alpha() + f * (col2.alpha() - col1.alpha()))
      }

      var Color$g = Color_1
      var mix = mix$1

      Color$g.prototype.mix = Color$g.prototype.interpolate = function (col2, f) {
        if (f === void 0) f = 0.5
        var rest = [],
          len = arguments.length - 2
        while (len-- > 0) rest[len] = arguments[len + 2]

        return mix.apply(void 0, [this, col2, f].concat(rest))
      }

      var Color$f = Color_1

      Color$f.prototype.premultiply = function (mutate) {
        if (mutate === void 0) mutate = false

        var rgb = this._rgb
        var a = rgb[3]
        if (mutate) {
          this._rgb = [rgb[0] * a, rgb[1] * a, rgb[2] * a, a]
          return this
        } else {
          return new Color$f([rgb[0] * a, rgb[1] * a, rgb[2] * a, a], 'rgb')
        }
      }

      var Color$e = Color_1
      var LAB_CONSTANTS = labConstants

      Color$e.prototype.saturate = function (amount) {
        if (amount === void 0) amount = 1

        var me = this
        var lch = me.lch()
        lch[1] += LAB_CONSTANTS.Kn * amount
        if (lch[1] < 0) {
          lch[1] = 0
        }
        return new Color$e(lch, 'lch').alpha(me.alpha(), true)
      }

      Color$e.prototype.desaturate = function (amount) {
        if (amount === void 0) amount = 1

        return this.saturate(-amount)
      }

      var Color$d = Color_1
      var type$3 = utils.type

      Color$d.prototype.set = function (mc, value, mutate) {
        if (mutate === void 0) mutate = false

        var ref = mc.split('.')
        var mode = ref[0]
        var channel = ref[1]
        var src = this[mode]()
        if (channel) {
          var i = mode.indexOf(channel) - (mode.substr(0, 2) === 'ok' ? 2 : 0)
          if (i > -1) {
            if (type$3(value) == 'string') {
              switch (value.charAt(0)) {
                case '+':
                  src[i] += +value
                  break
                case '-':
                  src[i] += +value
                  break
                case '*':
                  src[i] *= +value.substr(1)
                  break
                case '/':
                  src[i] /= +value.substr(1)
                  break
                default:
                  src[i] = +value
              }
            } else if (type$3(value) === 'number') {
              src[i] = value
            } else {
              throw new Error('unsupported value for Color.set')
            }
            var out = new Color$d(src, mode)
            if (mutate) {
              this._rgb = out._rgb
              return this
            }
            return out
          }
          throw new Error('unknown channel ' + channel + ' in mode ' + mode)
        } else {
          return src
        }
      }

      var Color$c = Color_1

      var rgb = function (col1, col2, f) {
        var xyz0 = col1._rgb
        var xyz1 = col2._rgb
        return new Color$c(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), 'rgb')
      }

      // register interpolator
      interpolator$1.rgb = rgb

      var Color$b = Color_1
      var sqrt$2 = Math.sqrt
      var pow$5 = Math.pow

      var lrgb = function (col1, col2, f) {
        var ref = col1._rgb
        var x1 = ref[0]
        var y1 = ref[1]
        var z1 = ref[2]
        var ref$1 = col2._rgb
        var x2 = ref$1[0]
        var y2 = ref$1[1]
        var z2 = ref$1[2]
        return new Color$b(
          sqrt$2(pow$5(x1, 2) * (1 - f) + pow$5(x2, 2) * f),
          sqrt$2(pow$5(y1, 2) * (1 - f) + pow$5(y2, 2) * f),
          sqrt$2(pow$5(z1, 2) * (1 - f) + pow$5(z2, 2) * f),
          'rgb',
        )
      }

      // register interpolator
      interpolator$1.lrgb = lrgb

      var Color$a = Color_1

      var lab = function (col1, col2, f) {
        var xyz0 = col1.lab()
        var xyz1 = col2.lab()
        return new Color$a(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), 'lab')
      }

      // register interpolator
      interpolator$1.lab = lab

      var Color$9 = Color_1

      var _hsx = function (col1, col2, f, m) {
        var assign, assign$1

        var xyz0, xyz1
        if (m === 'hsl') {
          xyz0 = col1.hsl()
          xyz1 = col2.hsl()
        } else if (m === 'hsv') {
          xyz0 = col1.hsv()
          xyz1 = col2.hsv()
        } else if (m === 'hcg') {
          xyz0 = col1.hcg()
          xyz1 = col2.hcg()
        } else if (m === 'hsi') {
          xyz0 = col1.hsi()
          xyz1 = col2.hsi()
        } else if (m === 'lch' || m === 'hcl') {
          m = 'hcl'
          xyz0 = col1.hcl()
          xyz1 = col2.hcl()
        } else if (m === 'oklch') {
          xyz0 = col1.oklch().reverse()
          xyz1 = col2.oklch().reverse()
        }

        var hue0, hue1, sat0, sat1, lbv0, lbv1
        if (m.substr(0, 1) === 'h' || m === 'oklch') {
          ;(assign = xyz0), (hue0 = assign[0]), (sat0 = assign[1]), (lbv0 = assign[2])
          ;(assign$1 = xyz1), (hue1 = assign$1[0]), (sat1 = assign$1[1]), (lbv1 = assign$1[2])
        }

        var sat, hue, lbv, dh

        if (!isNaN(hue0) && !isNaN(hue1)) {
          // both colors have hue
          if (hue1 > hue0 && hue1 - hue0 > 180) {
            dh = hue1 - (hue0 + 360)
          } else if (hue1 < hue0 && hue0 - hue1 > 180) {
            dh = hue1 + 360 - hue0
          } else {
            dh = hue1 - hue0
          }
          hue = hue0 + f * dh
        } else if (!isNaN(hue0)) {
          hue = hue0
          if ((lbv1 == 1 || lbv1 == 0) && m != 'hsv') {
            sat = sat0
          }
        } else if (!isNaN(hue1)) {
          hue = hue1
          if ((lbv0 == 1 || lbv0 == 0) && m != 'hsv') {
            sat = sat1
          }
        } else {
          hue = Number.NaN
        }

        if (sat === undefined) {
          sat = sat0 + f * (sat1 - sat0)
        }
        lbv = lbv0 + f * (lbv1 - lbv0)
        return m === 'oklch' ? new Color$9([lbv, sat, hue], m) : new Color$9([hue, sat, lbv], m)
      }

      var interpolate_hsx$5 = _hsx

      var lch = function (col1, col2, f) {
        return interpolate_hsx$5(col1, col2, f, 'lch')
      }

      // register interpolator
      interpolator$1.lch = lch
      interpolator$1.hcl = lch

      var Color$8 = Color_1

      var num = function (col1, col2, f) {
        var c1 = col1.num()
        var c2 = col2.num()
        return new Color$8(c1 + f * (c2 - c1), 'num')
      }

      // register interpolator
      interpolator$1.num = num

      var interpolate_hsx$4 = _hsx

      var hcg = function (col1, col2, f) {
        return interpolate_hsx$4(col1, col2, f, 'hcg')
      }

      // register interpolator
      interpolator$1.hcg = hcg

      var interpolate_hsx$3 = _hsx

      var hsi = function (col1, col2, f) {
        return interpolate_hsx$3(col1, col2, f, 'hsi')
      }

      // register interpolator
      interpolator$1.hsi = hsi

      var interpolate_hsx$2 = _hsx

      var hsl = function (col1, col2, f) {
        return interpolate_hsx$2(col1, col2, f, 'hsl')
      }

      // register interpolator
      interpolator$1.hsl = hsl

      var interpolate_hsx$1 = _hsx

      var hsv = function (col1, col2, f) {
        return interpolate_hsx$1(col1, col2, f, 'hsv')
      }

      // register interpolator
      interpolator$1.hsv = hsv

      var Color$7 = Color_1

      var oklab = function (col1, col2, f) {
        var xyz0 = col1.oklab()
        var xyz1 = col2.oklab()
        return new Color$7(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), 'oklab')
      }

      // register interpolator
      interpolator$1.oklab = oklab

      var interpolate_hsx = _hsx

      var oklch = function (col1, col2, f) {
        return interpolate_hsx(col1, col2, f, 'oklch')
      }

      // register interpolator
      interpolator$1.oklch = oklch

      var Color$6 = Color_1
      var clip_rgb$1 = utils.clip_rgb
      var pow$4 = Math.pow
      var sqrt$1 = Math.sqrt
      var PI$1 = Math.PI
      var cos$2 = Math.cos
      var sin$2 = Math.sin
      var atan2$1 = Math.atan2

      var average = function (colors, mode, weights) {
        if (mode === void 0) mode = 'lrgb'
        if (weights === void 0) weights = null

        var l = colors.length
        if (!weights) {
          weights = Array.from(new Array(l)).map(function () {
            return 1
          })
        }
        // normalize weights
        var k =
          l /
          weights.reduce(function (a, b) {
            return a + b
          })
        weights.forEach(function (w, i) {
          weights[i] *= k
        })
        // convert colors to Color objects
        colors = colors.map(function (c) {
          return new Color$6(c)
        })
        if (mode === 'lrgb') {
          return _average_lrgb(colors, weights)
        }
        var first = colors.shift()
        var xyz = first.get(mode)
        var cnt = []
        var dx = 0
        var dy = 0
        // initial color
        for (var i = 0; i < xyz.length; i++) {
          xyz[i] = (xyz[i] || 0) * weights[0]
          cnt.push(isNaN(xyz[i]) ? 0 : weights[0])
          if (mode.charAt(i) === 'h' && !isNaN(xyz[i])) {
            var A = (xyz[i] / 180) * PI$1
            dx += cos$2(A) * weights[0]
            dy += sin$2(A) * weights[0]
          }
        }

        var alpha = first.alpha() * weights[0]
        colors.forEach(function (c, ci) {
          var xyz2 = c.get(mode)
          alpha += c.alpha() * weights[ci + 1]
          for (var i = 0; i < xyz.length; i++) {
            if (!isNaN(xyz2[i])) {
              cnt[i] += weights[ci + 1]
              if (mode.charAt(i) === 'h') {
                var A = (xyz2[i] / 180) * PI$1
                dx += cos$2(A) * weights[ci + 1]
                dy += sin$2(A) * weights[ci + 1]
              } else {
                xyz[i] += xyz2[i] * weights[ci + 1]
              }
            }
          }
        })

        for (var i$1 = 0; i$1 < xyz.length; i$1++) {
          if (mode.charAt(i$1) === 'h') {
            var A$1 = (atan2$1(dy / cnt[i$1], dx / cnt[i$1]) / PI$1) * 180
            while (A$1 < 0) {
              A$1 += 360
            }
            while (A$1 >= 360) {
              A$1 -= 360
            }
            xyz[i$1] = A$1
          } else {
            xyz[i$1] = xyz[i$1] / cnt[i$1]
          }
        }
        alpha /= l
        return new Color$6(xyz, mode).alpha(alpha > 0.99999 ? 1 : alpha, true)
      }

      var _average_lrgb = function (colors, weights) {
        var l = colors.length
        var xyz = [0, 0, 0, 0]
        for (var i = 0; i < colors.length; i++) {
          var col = colors[i]
          var f = weights[i] / l
          var rgb = col._rgb
          xyz[0] += pow$4(rgb[0], 2) * f
          xyz[1] += pow$4(rgb[1], 2) * f
          xyz[2] += pow$4(rgb[2], 2) * f
          xyz[3] += rgb[3] * f
        }
        xyz[0] = sqrt$1(xyz[0])
        xyz[1] = sqrt$1(xyz[1])
        xyz[2] = sqrt$1(xyz[2])
        if (xyz[3] > 0.9999999) {
          xyz[3] = 1
        }
        return new Color$6(clip_rgb$1(xyz))
      }

      // minimal multi-purpose interface

      // @requires utils color analyze

      var chroma$4 = chroma_1
      var type$2 = utils.type

      var pow$3 = Math.pow

      var scale$2 = function (colors) {
        // constructor
        var _mode = 'rgb'
        var _nacol = chroma$4('#ccc')
        var _spread = 0
        // const _fixed = false;
        var _domain = [0, 1]
        var _pos = []
        var _padding = [0, 0]
        var _classes = false
        var _colors = []
        var _out = false
        var _min = 0
        var _max = 1
        var _correctLightness = false
        var _colorCache = {}
        var _useCache = true
        var _gamma = 1

        // private methods

        var setColors = function (colors) {
          colors = colors || ['#fff', '#000']
          if (colors && type$2(colors) === 'string' && chroma$4.brewer && chroma$4.brewer[colors.toLowerCase()]) {
            colors = chroma$4.brewer[colors.toLowerCase()]
          }
          if (type$2(colors) === 'array') {
            // handle single color
            if (colors.length === 1) {
              colors = [colors[0], colors[0]]
            }
            // make a copy of the colors
            colors = colors.slice(0)
            // convert to chroma classes
            for (var c = 0; c < colors.length; c++) {
              colors[c] = chroma$4(colors[c])
            }
            // auto-fill color position
            _pos.length = 0
            for (var c$1 = 0; c$1 < colors.length; c$1++) {
              _pos.push(c$1 / (colors.length - 1))
            }
          }
          resetCache()
          return (_colors = colors)
        }

        var getClass = function (value) {
          if (_classes != null) {
            var n = _classes.length - 1
            var i = 0
            while (i < n && value >= _classes[i]) {
              i++
            }
            return i - 1
          }
          return 0
        }

        var tMapLightness = function (t) {
          return t
        }
        var tMapDomain = function (t) {
          return t
        }

        // const classifyValue = function(value) {
        //     let val = value;
        //     if (_classes.length > 2) {
        //         const n = _classes.length-1;
        //         const i = getClass(value);
        //         const minc = _classes[0] + ((_classes[1]-_classes[0]) * (0 + (_spread * 0.5)));  // center of 1st class
        //         const maxc = _classes[n-1] + ((_classes[n]-_classes[n-1]) * (1 - (_spread * 0.5)));  // center of last class
        //         val = _min + ((((_classes[i] + ((_classes[i+1] - _classes[i]) * 0.5)) - minc) / (maxc-minc)) * (_max - _min));
        //     }
        //     return val;
        // };

        var getColor = function (val, bypassMap) {
          var col, t
          if (bypassMap == null) {
            bypassMap = false
          }
          if (isNaN(val) || val === null) {
            return _nacol
          }
          if (!bypassMap) {
            if (_classes && _classes.length > 2) {
              // find the class
              var c = getClass(val)
              t = c / (_classes.length - 2)
            } else if (_max !== _min) {
              // just interpolate between min/max
              t = (val - _min) / (_max - _min)
            } else {
              t = 1
            }
          } else {
            t = val
          }

          // domain map
          t = tMapDomain(t)

          if (!bypassMap) {
            t = tMapLightness(t) // lightness correction
          }

          if (_gamma !== 1) {
            t = pow$3(t, _gamma)
          }

          t = _padding[0] + t * (1 - _padding[0] - _padding[1])

          t = Math.min(1, Math.max(0, t))

          var k = Math.floor(t * 10000)

          if (_useCache && _colorCache[k]) {
            col = _colorCache[k]
          } else {
            if (type$2(_colors) === 'array') {
              //for i in [0.._pos.length-1]
              for (var i = 0; i < _pos.length; i++) {
                var p = _pos[i]
                if (t <= p) {
                  col = _colors[i]
                  break
                }
                if (t >= p && i === _pos.length - 1) {
                  col = _colors[i]
                  break
                }
                if (t > p && t < _pos[i + 1]) {
                  t = (t - p) / (_pos[i + 1] - p)
                  col = chroma$4.interpolate(_colors[i], _colors[i + 1], t, _mode)
                  break
                }
              }
            } else if (type$2(_colors) === 'function') {
              col = _colors(t)
            }
            if (_useCache) {
              _colorCache[k] = col
            }
          }
          return col
        }

        var resetCache = function () {
          return (_colorCache = {})
        }

        setColors(colors)

        // public interface

        var f = function (v) {
          var c = chroma$4(getColor(v))
          if (_out && c[_out]) {
            return c[_out]()
          } else {
            return c
          }
        }

        f.classes = function (classes) {
          if (classes != null) {
            if (type$2(classes) === 'array') {
              _classes = classes
              _domain = [classes[0], classes[classes.length - 1]]
            } else {
              var d = chroma$4.analyze(_domain)
              if (classes === 0) {
                _classes = [d.min, d.max]
              } else {
                _classes = chroma$4.limits(d, 'e', classes)
              }
            }
            return f
          }
          return _classes
        }

        f.domain = function (domain) {
          if (!arguments.length) {
            return _domain
          }
          _min = domain[0]
          _max = domain[domain.length - 1]
          _pos = []
          var k = _colors.length
          if (domain.length === k && _min !== _max) {
            // update positions
            for (var i = 0, list = Array.from(domain); i < list.length; i += 1) {
              var d = list[i]

              _pos.push((d - _min) / (_max - _min))
            }
          } else {
            for (var c = 0; c < k; c++) {
              _pos.push(c / (k - 1))
            }
            if (domain.length > 2) {
              // set domain map
              var tOut = domain.map(function (d, i) {
                return i / (domain.length - 1)
              })
              var tBreaks = domain.map(function (d) {
                return (d - _min) / (_max - _min)
              })
              if (
                !tBreaks.every(function (val, i) {
                  return tOut[i] === val
                })
              ) {
                tMapDomain = function (t) {
                  if (t <= 0 || t >= 1) {
                    return t
                  }
                  var i = 0
                  while (t >= tBreaks[i + 1]) {
                    i++
                  }
                  var f = (t - tBreaks[i]) / (tBreaks[i + 1] - tBreaks[i])
                  var out = tOut[i] + f * (tOut[i + 1] - tOut[i])
                  return out
                }
              }
            }
          }
          _domain = [_min, _max]
          return f
        }

        f.mode = function (_m) {
          if (!arguments.length) {
            return _mode
          }
          _mode = _m
          resetCache()
          return f
        }

        f.range = function (colors, _pos) {
          setColors(colors)
          return f
        }

        f.out = function (_o) {
          _out = _o
          return f
        }

        f.spread = function (val) {
          if (!arguments.length) {
            return _spread
          }
          _spread = val
          return f
        }

        f.correctLightness = function (v) {
          if (v == null) {
            v = true
          }
          _correctLightness = v
          resetCache()
          if (_correctLightness) {
            tMapLightness = function (t) {
              var L0 = getColor(0, true).lab()[0]
              var L1 = getColor(1, true).lab()[0]
              var pol = L0 > L1
              var L_actual = getColor(t, true).lab()[0]
              var L_ideal = L0 + (L1 - L0) * t
              var L_diff = L_actual - L_ideal
              var t0 = 0
              var t1 = 1
              var max_iter = 20
              while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {
                ;(function () {
                  if (pol) {
                    L_diff *= -1
                  }
                  if (L_diff < 0) {
                    t0 = t
                    t += (t1 - t) * 0.5
                  } else {
                    t1 = t
                    t += (t0 - t) * 0.5
                  }
                  L_actual = getColor(t, true).lab()[0]
                  return (L_diff = L_actual - L_ideal)
                })()
              }
              return t
            }
          } else {
            tMapLightness = function (t) {
              return t
            }
          }
          return f
        }

        f.padding = function (p) {
          if (p != null) {
            if (type$2(p) === 'number') {
              p = [p, p]
            }
            _padding = p
            return f
          } else {
            return _padding
          }
        }

        f.colors = function (numColors, out) {
          // If no arguments are given, return the original colors that were provided
          if (arguments.length < 2) {
            out = 'hex'
          }
          var result = []

          if (arguments.length === 0) {
            result = _colors.slice(0)
          } else if (numColors === 1) {
            result = [f(0.5)]
          } else if (numColors > 1) {
            var dm = _domain[0]
            var dd = _domain[1] - dm
            result = __range__(0, numColors, false).map(function (i) {
              return f(dm + (i / (numColors - 1)) * dd)
            })
          } else {
            // returns all colors based on the defined classes
            colors = []
            var samples = []
            if (_classes && _classes.length > 2) {
              for (var i = 1, end = _classes.length, asc = 1 <= end; asc ? i < end : i > end; asc ? i++ : i--) {
                samples.push((_classes[i - 1] + _classes[i]) * 0.5)
              }
            } else {
              samples = _domain
            }
            result = samples.map(function (v) {
              return f(v)
            })
          }

          if (chroma$4[out]) {
            result = result.map(function (c) {
              return c[out]()
            })
          }
          return result
        }

        f.cache = function (c) {
          if (c != null) {
            _useCache = c
            return f
          } else {
            return _useCache
          }
        }

        f.gamma = function (g) {
          if (g != null) {
            _gamma = g
            return f
          } else {
            return _gamma
          }
        }

        f.nodata = function (d) {
          if (d != null) {
            _nacol = chroma$4(d)
            return f
          } else {
            return _nacol
          }
        }

        return f
      }

      function __range__(left, right, inclusive) {
        var range = []
        var ascending = left < right
        var end = !inclusive ? right : ascending ? right + 1 : right - 1
        for (var i = left; ascending ? i < end : i > end; ascending ? i++ : i--) {
          range.push(i)
        }
        return range
      }

      //
      // interpolates between a set of colors uzing a bezier spline
      //

      // @requires utils lab
      var Color$5 = Color_1

      var scale$1 = scale$2

      // nth row of the pascal triangle
      var binom_row = function (n) {
        var row = [1, 1]
        for (var i = 1; i < n; i++) {
          var newrow = [1]
          for (var j = 1; j <= row.length; j++) {
            newrow[j] = (row[j] || 0) + row[j - 1]
          }
          row = newrow
        }
        return row
      }

      var bezier = function (colors) {
        var assign, assign$1, assign$2

        var I, lab0, lab1, lab2
        colors = colors.map(function (c) {
          return new Color$5(c)
        })
        if (colors.length === 2) {
          // linear interpolation
          ;(assign = colors.map(function (c) {
            return c.lab()
          })),
            (lab0 = assign[0]),
            (lab1 = assign[1])
          I = function (t) {
            var lab = [0, 1, 2].map(function (i) {
              return lab0[i] + t * (lab1[i] - lab0[i])
            })
            return new Color$5(lab, 'lab')
          }
        } else if (colors.length === 3) {
          // quadratic bezier interpolation
          ;(assign$1 = colors.map(function (c) {
            return c.lab()
          })),
            (lab0 = assign$1[0]),
            (lab1 = assign$1[1]),
            (lab2 = assign$1[2])
          I = function (t) {
            var lab = [0, 1, 2].map(function (i) {
              return (1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]
            })
            return new Color$5(lab, 'lab')
          }
        } else if (colors.length === 4) {
          // cubic bezier interpolation
          var lab3
          ;(assign$2 = colors.map(function (c) {
            return c.lab()
          })),
            (lab0 = assign$2[0]),
            (lab1 = assign$2[1]),
            (lab2 = assign$2[2]),
            (lab3 = assign$2[3])
          I = function (t) {
            var lab = [0, 1, 2].map(function (i) {
              return (1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]
            })
            return new Color$5(lab, 'lab')
          }
        } else if (colors.length >= 5) {
          // general case (degree n bezier)
          var labs, row, n
          labs = colors.map(function (c) {
            return c.lab()
          })
          n = colors.length - 1
          row = binom_row(n)
          I = function (t) {
            var u = 1 - t
            var lab = [0, 1, 2].map(function (i) {
              return labs.reduce(function (sum, el, j) {
                return sum + row[j] * Math.pow(u, n - j) * Math.pow(t, j) * el[i]
              }, 0)
            })
            return new Color$5(lab, 'lab')
          }
        } else {
          throw new RangeError('No point in running bezier with only one color.')
        }
        return I
      }

      var bezier_1 = function (colors) {
        var f = bezier(colors)
        f.scale = function () {
          return scale$1(f)
        }
        return f
      }

      /*
       * interpolates between a set of colors uzing a bezier spline
       * blend mode formulas taken from http://www.venture-ware.com/kevin/coding/lets-learn-math-photoshop-blend-modes/
       */

      var chroma$3 = chroma_1

      var blend = function (bottom, top, mode) {
        if (!blend[mode]) {
          throw new Error('unknown blend mode ' + mode)
        }
        return blend[mode](bottom, top)
      }

      var blend_f = function (f) {
        return function (bottom, top) {
          var c0 = chroma$3(top).rgb()
          var c1 = chroma$3(bottom).rgb()
          return chroma$3.rgb(f(c0, c1))
        }
      }

      var each = function (f) {
        return function (c0, c1) {
          var out = []
          out[0] = f(c0[0], c1[0])
          out[1] = f(c0[1], c1[1])
          out[2] = f(c0[2], c1[2])
          return out
        }
      }

      var normal = function (a) {
        return a
      }
      var multiply = function (a, b) {
        return (a * b) / 255
      }
      var darken = function (a, b) {
        return a > b ? b : a
      }
      var lighten = function (a, b) {
        return a > b ? a : b
      }
      var screen = function (a, b) {
        return 255 * (1 - (1 - a / 255) * (1 - b / 255))
      }
      var overlay = function (a, b) {
        return b < 128 ? (2 * a * b) / 255 : 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255))
      }
      var burn = function (a, b) {
        return 255 * (1 - (1 - b / 255) / (a / 255))
      }
      var dodge = function (a, b) {
        if (a === 255) {
          return 255
        }
        a = (255 * (b / 255)) / (1 - a / 255)
        return a > 255 ? 255 : a
      }

      // # add = (a,b) ->
      // #     if (a + b > 255) then 255 else a + b

      blend.normal = blend_f(each(normal))
      blend.multiply = blend_f(each(multiply))
      blend.screen = blend_f(each(screen))
      blend.overlay = blend_f(each(overlay))
      blend.darken = blend_f(each(darken))
      blend.lighten = blend_f(each(lighten))
      blend.dodge = blend_f(each(dodge))
      blend.burn = blend_f(each(burn))
      // blend.add = blend_f(each(add));

      var blend_1 = blend

      // cubehelix interpolation
      // based on D.A. Green "A colour scheme for the display of astronomical intensity images"
      // http://astron-soc.in/bulletin/11June/289392011.pdf

      var type$1 = utils.type
      var clip_rgb = utils.clip_rgb
      var TWOPI = utils.TWOPI
      var pow$2 = Math.pow
      var sin$1 = Math.sin
      var cos$1 = Math.cos
      var chroma$2 = chroma_1

      var cubehelix = function (start, rotations, hue, gamma, lightness) {
        if (start === void 0) start = 300
        if (rotations === void 0) rotations = -1.5
        if (hue === void 0) hue = 1
        if (gamma === void 0) gamma = 1
        if (lightness === void 0) lightness = [0, 1]

        var dh = 0,
          dl
        if (type$1(lightness) === 'array') {
          dl = lightness[1] - lightness[0]
        } else {
          dl = 0
          lightness = [lightness, lightness]
        }

        var f = function (fract) {
          var a = TWOPI * ((start + 120) / 360 + rotations * fract)
          var l = pow$2(lightness[0] + dl * fract, gamma)
          var h = dh !== 0 ? hue[0] + fract * dh : hue
          var amp = (h * l * (1 - l)) / 2
          var cos_a = cos$1(a)
          var sin_a = sin$1(a)
          var r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a)
          var g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a)
          var b = l + amp * (+1.97294 * cos_a)
          return chroma$2(clip_rgb([r * 255, g * 255, b * 255, 1]))
        }

        f.start = function (s) {
          if (s == null) {
            return start
          }
          start = s
          return f
        }

        f.rotations = function (r) {
          if (r == null) {
            return rotations
          }
          rotations = r
          return f
        }

        f.gamma = function (g) {
          if (g == null) {
            return gamma
          }
          gamma = g
          return f
        }

        f.hue = function (h) {
          if (h == null) {
            return hue
          }
          hue = h
          if (type$1(hue) === 'array') {
            dh = hue[1] - hue[0]
            if (dh === 0) {
              hue = hue[1]
            }
          } else {
            dh = 0
          }
          return f
        }

        f.lightness = function (h) {
          if (h == null) {
            return lightness
          }
          if (type$1(h) === 'array') {
            lightness = h
            dl = h[1] - h[0]
          } else {
            lightness = [h, h]
            dl = 0
          }
          return f
        }

        f.scale = function () {
          return chroma$2.scale(f)
        }

        f.hue(hue)

        return f
      }

      var Color$4 = Color_1
      var digits = '0123456789abcdef'

      var floor$1 = Math.floor
      var random = Math.random

      var random_1 = function () {
        var code = '#'
        for (var i = 0; i < 6; i++) {
          code += digits.charAt(floor$1(random() * 16))
        }
        return new Color$4(code, 'hex')
      }

      var type = type$p
      var log = Math.log
      var pow$1 = Math.pow
      var floor = Math.floor
      var abs$1 = Math.abs

      var analyze = function (data, key) {
        if (key === void 0) key = null

        var r = {
          min: Number.MAX_VALUE,
          max: Number.MAX_VALUE * -1,
          sum: 0,
          values: [],
          count: 0,
        }
        if (type(data) === 'object') {
          data = Object.values(data)
        }
        data.forEach(function (val) {
          if (key && type(val) === 'object') {
            val = val[key]
          }
          if (val !== undefined && val !== null && !isNaN(val)) {
            r.values.push(val)
            r.sum += val
            if (val < r.min) {
              r.min = val
            }
            if (val > r.max) {
              r.max = val
            }
            r.count += 1
          }
        })

        r.domain = [r.min, r.max]

        r.limits = function (mode, num) {
          return limits(r, mode, num)
        }

        return r
      }

      var limits = function (data, mode, num) {
        if (mode === void 0) mode = 'equal'
        if (num === void 0) num = 7

        if (type(data) == 'array') {
          data = analyze(data)
        }
        var min = data.min
        var max = data.max
        var values = data.values.sort(function (a, b) {
          return a - b
        })

        if (num === 1) {
          return [min, max]
        }

        var limits = []

        if (mode.substr(0, 1) === 'c') {
          // continuous
          limits.push(min)
          limits.push(max)
        }

        if (mode.substr(0, 1) === 'e') {
          // equal interval
          limits.push(min)
          for (var i = 1; i < num; i++) {
            limits.push(min + (i / num) * (max - min))
          }
          limits.push(max)
        } else if (mode.substr(0, 1) === 'l') {
          // log scale
          if (min <= 0) {
            throw new Error('Logarithmic scales are only possible for values > 0')
          }
          var min_log = Math.LOG10E * log(min)
          var max_log = Math.LOG10E * log(max)
          limits.push(min)
          for (var i$1 = 1; i$1 < num; i$1++) {
            limits.push(pow$1(10, min_log + (i$1 / num) * (max_log - min_log)))
          }
          limits.push(max)
        } else if (mode.substr(0, 1) === 'q') {
          // quantile scale
          limits.push(min)
          for (var i$2 = 1; i$2 < num; i$2++) {
            var p = ((values.length - 1) * i$2) / num
            var pb = floor(p)
            if (pb === p) {
              limits.push(values[pb])
            } else {
              // p > pb
              var pr = p - pb
              limits.push(values[pb] * (1 - pr) + values[pb + 1] * pr)
            }
          }
          limits.push(max)
        } else if (mode.substr(0, 1) === 'k') {
          // k-means clustering
          /*
	            implementation based on
	            http://code.google.com/p/figue/source/browse/trunk/figue.js#336
	            simplified for 1-d input values
	            */
          var cluster
          var n = values.length
          var assignments = new Array(n)
          var clusterSizes = new Array(num)
          var repeat = true
          var nb_iters = 0
          var centroids = null

          // get seed values
          centroids = []
          centroids.push(min)
          for (var i$3 = 1; i$3 < num; i$3++) {
            centroids.push(min + (i$3 / num) * (max - min))
          }
          centroids.push(max)

          while (repeat) {
            // assignment step
            for (var j = 0; j < num; j++) {
              clusterSizes[j] = 0
            }
            for (var i$4 = 0; i$4 < n; i$4++) {
              var value = values[i$4]
              var mindist = Number.MAX_VALUE
              var best = void 0
              for (var j$1 = 0; j$1 < num; j$1++) {
                var dist = abs$1(centroids[j$1] - value)
                if (dist < mindist) {
                  mindist = dist
                  best = j$1
                }
                clusterSizes[best]++
                assignments[i$4] = best
              }
            }

            // update centroids step
            var newCentroids = new Array(num)
            for (var j$2 = 0; j$2 < num; j$2++) {
              newCentroids[j$2] = null
            }
            for (var i$5 = 0; i$5 < n; i$5++) {
              cluster = assignments[i$5]
              if (newCentroids[cluster] === null) {
                newCentroids[cluster] = values[i$5]
              } else {
                newCentroids[cluster] += values[i$5]
              }
            }
            for (var j$3 = 0; j$3 < num; j$3++) {
              newCentroids[j$3] *= 1 / clusterSizes[j$3]
            }

            // check convergence
            repeat = false
            for (var j$4 = 0; j$4 < num; j$4++) {
              if (newCentroids[j$4] !== centroids[j$4]) {
                repeat = true
                break
              }
            }

            centroids = newCentroids
            nb_iters++

            if (nb_iters > 200) {
              repeat = false
            }
          }

          // finished k-means clustering
          // the next part is borrowed from gabrielflor.it
          var kClusters = {}
          for (var j$5 = 0; j$5 < num; j$5++) {
            kClusters[j$5] = []
          }
          for (var i$6 = 0; i$6 < n; i$6++) {
            cluster = assignments[i$6]
            kClusters[cluster].push(values[i$6])
          }
          var tmpKMeansBreaks = []
          for (var j$6 = 0; j$6 < num; j$6++) {
            tmpKMeansBreaks.push(kClusters[j$6][0])
            tmpKMeansBreaks.push(kClusters[j$6][kClusters[j$6].length - 1])
          }
          tmpKMeansBreaks = tmpKMeansBreaks.sort(function (a, b) {
            return a - b
          })
          limits.push(tmpKMeansBreaks[0])
          for (var i$7 = 1; i$7 < tmpKMeansBreaks.length; i$7 += 2) {
            var v = tmpKMeansBreaks[i$7]
            if (!isNaN(v) && limits.indexOf(v) === -1) {
              limits.push(v)
            }
          }
        }
        return limits
      }

      var analyze_1 = { analyze: analyze, limits: limits }

      var Color$3 = Color_1

      var contrast = function (a, b) {
        // WCAG contrast ratio
        // see http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef
        a = new Color$3(a)
        b = new Color$3(b)
        var l1 = a.luminance()
        var l2 = b.luminance()
        return l1 > l2 ? (l1 + 0.05) / (l2 + 0.05) : (l2 + 0.05) / (l1 + 0.05)
      }

      var Color$2 = Color_1
      var sqrt = Math.sqrt
      var pow = Math.pow
      var min = Math.min
      var max = Math.max
      var atan2 = Math.atan2
      var abs = Math.abs
      var cos = Math.cos
      var sin = Math.sin
      var exp = Math.exp
      var PI = Math.PI

      var deltaE = function (a, b, Kl, Kc, Kh) {
        if (Kl === void 0) Kl = 1
        if (Kc === void 0) Kc = 1
        if (Kh === void 0) Kh = 1

        // Delta E (CIE 2000)
        // see http://www.brucelindbloom.com/index.html?Eqn_DeltaE_CIE2000.html
        var rad2deg = function (rad) {
          return (360 * rad) / (2 * PI)
        }
        var deg2rad = function (deg) {
          return (2 * PI * deg) / 360
        }
        a = new Color$2(a)
        b = new Color$2(b)
        var ref = Array.from(a.lab())
        var L1 = ref[0]
        var a1 = ref[1]
        var b1 = ref[2]
        var ref$1 = Array.from(b.lab())
        var L2 = ref$1[0]
        var a2 = ref$1[1]
        var b2 = ref$1[2]
        var avgL = (L1 + L2) / 2
        var C1 = sqrt(pow(a1, 2) + pow(b1, 2))
        var C2 = sqrt(pow(a2, 2) + pow(b2, 2))
        var avgC = (C1 + C2) / 2
        var G = 0.5 * (1 - sqrt(pow(avgC, 7) / (pow(avgC, 7) + pow(25, 7))))
        var a1p = a1 * (1 + G)
        var a2p = a2 * (1 + G)
        var C1p = sqrt(pow(a1p, 2) + pow(b1, 2))
        var C2p = sqrt(pow(a2p, 2) + pow(b2, 2))
        var avgCp = (C1p + C2p) / 2
        var arctan1 = rad2deg(atan2(b1, a1p))
        var arctan2 = rad2deg(atan2(b2, a2p))
        var h1p = arctan1 >= 0 ? arctan1 : arctan1 + 360
        var h2p = arctan2 >= 0 ? arctan2 : arctan2 + 360
        var avgHp = abs(h1p - h2p) > 180 ? (h1p + h2p + 360) / 2 : (h1p + h2p) / 2
        var T = 1 - 0.17 * cos(deg2rad(avgHp - 30)) + 0.24 * cos(deg2rad(2 * avgHp)) + 0.32 * cos(deg2rad(3 * avgHp + 6)) - 0.2 * cos(deg2rad(4 * avgHp - 63))
        var deltaHp = h2p - h1p
        deltaHp = abs(deltaHp) <= 180 ? deltaHp : h2p <= h1p ? deltaHp + 360 : deltaHp - 360
        deltaHp = 2 * sqrt(C1p * C2p) * sin(deg2rad(deltaHp) / 2)
        var deltaL = L2 - L1
        var deltaCp = C2p - C1p
        var sl = 1 + (0.015 * pow(avgL - 50, 2)) / sqrt(20 + pow(avgL - 50, 2))
        var sc = 1 + 0.045 * avgCp
        var sh = 1 + 0.015 * avgCp * T
        var deltaTheta = 30 * exp(-pow((avgHp - 275) / 25, 2))
        var Rc = 2 * sqrt(pow(avgCp, 7) / (pow(avgCp, 7) + pow(25, 7)))
        var Rt = -Rc * sin(2 * deg2rad(deltaTheta))
        var result = sqrt(pow(deltaL / (Kl * sl), 2) + pow(deltaCp / (Kc * sc), 2) + pow(deltaHp / (Kh * sh), 2) + Rt * (deltaCp / (Kc * sc)) * (deltaHp / (Kh * sh)))
        return max(0, min(100, result))
      }

      var Color$1 = Color_1

      // simple Euclidean distance
      var distance = function (a, b, mode) {
        if (mode === void 0) mode = 'lab'

        // Delta E (CIE 1976)
        // see http://www.brucelindbloom.com/index.html?Equations.html
        a = new Color$1(a)
        b = new Color$1(b)
        var l1 = a.get(mode)
        var l2 = b.get(mode)
        var sum_sq = 0
        for (var i in l1) {
          var d = (l1[i] || 0) - (l2[i] || 0)
          sum_sq += d * d
        }
        return Math.sqrt(sum_sq)
      }

      var Color = Color_1

      var valid = function () {
        var args = [],
          len = arguments.length
        while (len--) args[len] = arguments[len]

        try {
          new (Function.prototype.bind.apply(Color, [null].concat(args)))()
          return true
        } catch (e) {
          return false
        }
      }

      // some pre-defined color scales:
      var chroma$1 = chroma_1

      var scale = scale$2

      var scales = {
        cool: function cool() {
          return scale([chroma$1.hsl(180, 1, 0.9), chroma$1.hsl(250, 0.7, 0.4)])
        },
        hot: function hot() {
          return scale(['#000', '#f00', '#ff0', '#fff']).mode('rgb')
        },
      }

      /**
	        ColorBrewer colors for chroma.js

	        Copyright (c) 2002 Cynthia Brewer, Mark Harrower, and The
	        Pennsylvania State University.

	        Licensed under the Apache License, Version 2.0 (the "License");
	        you may not use this file except in compliance with the License.
	        You may obtain a copy of the License at
	        http://www.apache.org/licenses/LICENSE-2.0

	        Unless required by applicable law or agreed to in writing, software distributed
	        under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
	        CONDITIONS OF ANY KIND, either express or implied. See the License for the
	        specific language governing permissions and limitations under the License.
	    */

      var colorbrewer = {
        // sequential
        OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],
        PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],
        BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],
        Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],
        BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],
        YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],
        YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],
        Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],
        RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],
        Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],
        YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],
        Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],
        GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],
        Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],
        YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],
        PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],
        Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],
        PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],
        Viridis: ['#440154', '#482777', '#3f4a8a', '#31678e', '#26838f', '#1f9d8a', '#6cce5a', '#b6de2b', '#fee825'],

        // diverging

        Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],
        RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],
        RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],
        PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],
        PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],
        RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],
        BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],
        RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],
        PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],

        // qualitative

        Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],
        Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],
        Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],
        Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],
        Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],
        Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],
        Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],
        Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2'],
      }

      // add lowercase aliases for case-insensitive matches
      for (var i = 0, list = Object.keys(colorbrewer); i < list.length; i += 1) {
        var key = list[i]

        colorbrewer[key.toLowerCase()] = colorbrewer[key]
      }

      var colorbrewer_1 = colorbrewer

      var chroma = chroma_1

      // feel free to comment out anything to rollup
      // a smaller chroma.js built

      // io --> convert colors

      // operators --> modify existing Colors

      // interpolators

      // generators -- > create new colors
      chroma.average = average
      chroma.bezier = bezier_1
      chroma.blend = blend_1
      chroma.cubehelix = cubehelix
      chroma.mix = chroma.interpolate = mix$1
      chroma.random = random_1
      chroma.scale = scale$2

      // other utility methods
      chroma.analyze = analyze_1.analyze
      chroma.contrast = contrast
      chroma.deltaE = deltaE
      chroma.distance = distance
      chroma.limits = analyze_1.limits
      chroma.valid = valid

      // scale
      chroma.scales = scales

      // colors
      chroma.colors = w3cx11_1
      chroma.brewer = colorbrewer_1

      var chroma_js = chroma

      return chroma_js
    })
  })(chroma$1)

  var chroma = chroma$1.exports

  /**
   * lodash (Custom Build) <https://lodash.com/>
   * Build: `lodash modularize exports="npm" -o ./`
   * Copyright jQuery Foundation and other contributors <https://jquery.org/>
   * Released under MIT license <https://lodash.com/license>
   * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
   * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
   */

  /** Used as the `TypeError` message for "Functions" methods. */
  var FUNC_ERROR_TEXT$1 = 'Expected a function'

  /** Used as references for various `Number` constants. */
  var NAN$1 = 0 / 0

  /** `Object#toString` result references. */
  var symbolTag$1 = '[object Symbol]'

  /** Used to match leading and trailing whitespace. */
  var reTrim = /^\s+|\s+$/g

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex$1 = /^[-+]0x[0-9a-f]+$/i

  /** Used to detect binary string values. */
  var reIsBinary$1 = /^0b[01]+$/i

  /** Used to detect octal string values. */
  var reIsOctal$1 = /^0o[0-7]+$/i

  /** Built-in method references without a dependency on `root`. */
  var freeParseInt$1 = parseInt

  /** Detect free variable `global` from Node.js. */
  var freeGlobal$2 = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal

  /** Detect free variable `self`. */
  var freeSelf$1 = typeof self == 'object' && self && self.Object === Object && self

  /** Used as a reference to the global object. */
  var root$3 = freeGlobal$2 || freeSelf$1 || Function('return this')()

  /** Used for built-in method references. */
  var objectProto$2 = Object.prototype

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var objectToString$2 = objectProto$2.toString

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax$1 = Math.max,
    nativeMin$1 = Math.min

  /**
   * Gets the timestamp of the number of milliseconds that have elapsed since
   * the Unix epoch (1 January 1970 00:00:00 UTC).
   *
   * @static
   * @memberOf _
   * @since 2.4.0
   * @category Date
   * @returns {number} Returns the timestamp.
   * @example
   *
   * _.defer(function(stamp) {
   *   console.log(_.now() - stamp);
   * }, _.now());
   * // => Logs the number of milliseconds it took for the deferred invocation.
   */
  var now$2 = function () {
    return root$3.Date.now()
  }

  /**
   * Creates a debounced function that delays invoking `func` until after `wait`
   * milliseconds have elapsed since the last time the debounced function was
   * invoked. The debounced function comes with a `cancel` method to cancel
   * delayed `func` invocations and a `flush` method to immediately invoke them.
   * Provide `options` to indicate whether `func` should be invoked on the
   * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
   * with the last arguments provided to the debounced function. Subsequent
   * calls to the debounced function return the result of the last `func`
   * invocation.
   *
   * **Note:** If `leading` and `trailing` options are `true`, `func` is
   * invoked on the trailing edge of the timeout only if the debounced function
   * is invoked more than once during the `wait` timeout.
   *
   * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
   * until to the next tick, similar to `setTimeout` with a timeout of `0`.
   *
   * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
   * for details over the differences between `_.debounce` and `_.throttle`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Function
   * @param {Function} func The function to debounce.
   * @param {number} [wait=0] The number of milliseconds to delay.
   * @param {Object} [options={}] The options object.
   * @param {boolean} [options.leading=false]
   *  Specify invoking on the leading edge of the timeout.
   * @param {number} [options.maxWait]
   *  The maximum time `func` is allowed to be delayed before it's invoked.
   * @param {boolean} [options.trailing=true]
   *  Specify invoking on the trailing edge of the timeout.
   * @returns {Function} Returns the new debounced function.
   * @example
   *
   * // Avoid costly calculations while the window size is in flux.
   * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
   *
   * // Invoke `sendMail` when clicked, debouncing subsequent calls.
   * jQuery(element).on('click', _.debounce(sendMail, 300, {
   *   'leading': true,
   *   'trailing': false
   * }));
   *
   * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
   * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
   * var source = new EventSource('/stream');
   * jQuery(source).on('message', debounced);
   *
   * // Cancel the trailing debounced invocation.
   * jQuery(window).on('popstate', debounced.cancel);
   */
  function debounce$1(func, wait, options) {
    var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true

    if (typeof func != 'function') {
      throw new TypeError(FUNC_ERROR_TEXT$1)
    }
    wait = toNumber$2(wait) || 0
    if (isObject$3(options)) {
      leading = !!options.leading
      maxing = 'maxWait' in options
      maxWait = maxing ? nativeMax$1(toNumber$2(options.maxWait) || 0, wait) : maxWait
      trailing = 'trailing' in options ? !!options.trailing : trailing
    }

    function invokeFunc(time) {
      var args = lastArgs,
        thisArg = lastThis

      lastArgs = lastThis = undefined
      lastInvokeTime = time
      result = func.apply(thisArg, args)
      return result
    }

    function leadingEdge(time) {
      // Reset any `maxWait` timer.
      lastInvokeTime = time
      // Start the timer for the trailing edge.
      timerId = setTimeout(timerExpired, wait)
      // Invoke the leading edge.
      return leading ? invokeFunc(time) : result
    }

    function remainingWait(time) {
      var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        result = wait - timeSinceLastCall

      return maxing ? nativeMin$1(result, maxWait - timeSinceLastInvoke) : result
    }

    function shouldInvoke(time) {
      var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime

      // Either this is the first call, activity has stopped and we're at the
      // trailing edge, the system time has gone backwards and we're treating
      // it as the trailing edge, or we've hit the `maxWait` limit.
      return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || (maxing && timeSinceLastInvoke >= maxWait)
    }

    function timerExpired() {
      var time = now$2()
      if (shouldInvoke(time)) {
        return trailingEdge(time)
      }
      // Restart the timer.
      timerId = setTimeout(timerExpired, remainingWait(time))
    }

    function trailingEdge(time) {
      timerId = undefined

      // Only invoke if we have `lastArgs` which means `func` has been
      // debounced at least once.
      if (trailing && lastArgs) {
        return invokeFunc(time)
      }
      lastArgs = lastThis = undefined
      return result
    }

    function cancel() {
      if (timerId !== undefined) {
        clearTimeout(timerId)
      }
      lastInvokeTime = 0
      lastArgs = lastCallTime = lastThis = timerId = undefined
    }

    function flush() {
      return timerId === undefined ? result : trailingEdge(now$2())
    }

    function debounced() {
      var time = now$2(),
        isInvoking = shouldInvoke(time)

      lastArgs = arguments
      lastThis = this
      lastCallTime = time

      if (isInvoking) {
        if (timerId === undefined) {
          return leadingEdge(lastCallTime)
        }
        if (maxing) {
          // Handle invocations in a tight loop.
          timerId = setTimeout(timerExpired, wait)
          return invokeFunc(lastCallTime)
        }
      }
      if (timerId === undefined) {
        timerId = setTimeout(timerExpired, wait)
      }
      return result
    }
    debounced.cancel = cancel
    debounced.flush = flush
    return debounced
  }

  /**
   * Checks if `value` is the
   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(_.noop);
   * // => true
   *
   * _.isObject(null);
   * // => false
   */
  function isObject$3(value) {
    var type = typeof value
    return !!value && (type == 'object' || type == 'function')
  }

  /**
   * Checks if `value` is object-like. A value is object-like if it's not `null`
   * and has a `typeof` result of "object".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   * @example
   *
   * _.isObjectLike({});
   * // => true
   *
   * _.isObjectLike([1, 2, 3]);
   * // => true
   *
   * _.isObjectLike(_.noop);
   * // => false
   *
   * _.isObjectLike(null);
   * // => false
   */
  function isObjectLike$2(value) {
    return !!value && typeof value == 'object'
  }

  /**
   * Checks if `value` is classified as a `Symbol` primitive or object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
   * @example
   *
   * _.isSymbol(Symbol.iterator);
   * // => true
   *
   * _.isSymbol('abc');
   * // => false
   */
  function isSymbol$2(value) {
    return typeof value == 'symbol' || (isObjectLike$2(value) && objectToString$2.call(value) == symbolTag$1)
  }

  /**
   * Converts `value` to a number.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to process.
   * @returns {number} Returns the number.
   * @example
   *
   * _.toNumber(3.2);
   * // => 3.2
   *
   * _.toNumber(Number.MIN_VALUE);
   * // => 5e-324
   *
   * _.toNumber(Infinity);
   * // => Infinity
   *
   * _.toNumber('3.2');
   * // => 3.2
   */
  function toNumber$2(value) {
    if (typeof value == 'number') {
      return value
    }
    if (isSymbol$2(value)) {
      return NAN$1
    }
    if (isObject$3(value)) {
      var other = typeof value.valueOf == 'function' ? value.valueOf() : value
      value = isObject$3(other) ? other + '' : other
    }
    if (typeof value != 'string') {
      return value === 0 ? value : +value
    }
    value = value.replace(reTrim, '')
    var isBinary = reIsBinary$1.test(value)
    return isBinary || reIsOctal$1.test(value) ? freeParseInt$1(value.slice(2), isBinary ? 2 : 8) : reIsBadHex$1.test(value) ? NAN$1 : +value
  }

  var lodash_debounce = debounce$1

  var reactIs$2 = { exports: {} }

  var reactIs_production_min$1 = {}

  /** @license React v17.0.2
   * react-is.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  var b$3 = 60103,
    c$2 = 60106,
    d$1 = 60107,
    e$1 = 60108,
    f$2 = 60114,
    g$3 = 60109,
    h$1 = 60110,
    k$2 = 60112,
    l$2 = 60113,
    m$1 = 60120,
    n$2 = 60115,
    p$3 = 60116,
    q$2 = 60121,
    r$2 = 60122,
    u$1 = 60117,
    v$4 = 60129,
    w$4 = 60131
  if ('function' === typeof Symbol && Symbol.for) {
    var x$3 = Symbol.for
    b$3 = x$3('react.element')
    c$2 = x$3('react.portal')
    d$1 = x$3('react.fragment')
    e$1 = x$3('react.strict_mode')
    f$2 = x$3('react.profiler')
    g$3 = x$3('react.provider')
    h$1 = x$3('react.context')
    k$2 = x$3('react.forward_ref')
    l$2 = x$3('react.suspense')
    m$1 = x$3('react.suspense_list')
    n$2 = x$3('react.memo')
    p$3 = x$3('react.lazy')
    q$2 = x$3('react.block')
    r$2 = x$3('react.server.block')
    u$1 = x$3('react.fundamental')
    v$4 = x$3('react.debug_trace_mode')
    w$4 = x$3('react.legacy_hidden')
  }
  function y$1(a) {
    if ('object' === typeof a && null !== a) {
      var t = a.$$typeof
      switch (t) {
        case b$3:
          switch (((a = a.type), a)) {
            case d$1:
            case f$2:
            case e$1:
            case l$2:
            case m$1:
              return a
            default:
              switch (((a = a && a.$$typeof), a)) {
                case h$1:
                case k$2:
                case p$3:
                case n$2:
                case g$3:
                  return a
                default:
                  return t
              }
          }
        case c$2:
          return t
      }
    }
  }
  var z$4 = g$3,
    A$4 = b$3,
    B$2 = k$2,
    C$2 = d$1,
    D$1 = p$3,
    E$3 = n$2,
    F$1 = c$2,
    G$2 = f$2,
    H$3 = e$1,
    I$2 = l$2
  reactIs_production_min$1.ContextConsumer = h$1
  reactIs_production_min$1.ContextProvider = z$4
  reactIs_production_min$1.Element = A$4
  reactIs_production_min$1.ForwardRef = B$2
  reactIs_production_min$1.Fragment = C$2
  reactIs_production_min$1.Lazy = D$1
  reactIs_production_min$1.Memo = E$3
  reactIs_production_min$1.Portal = F$1
  reactIs_production_min$1.Profiler = G$2
  reactIs_production_min$1.StrictMode = H$3
  reactIs_production_min$1.Suspense = I$2
  reactIs_production_min$1.isAsyncMode = function () {
    return !1
  }
  reactIs_production_min$1.isConcurrentMode = function () {
    return !1
  }
  reactIs_production_min$1.isContextConsumer = function (a) {
    return y$1(a) === h$1
  }
  reactIs_production_min$1.isContextProvider = function (a) {
    return y$1(a) === g$3
  }
  reactIs_production_min$1.isElement = function (a) {
    return 'object' === typeof a && null !== a && a.$$typeof === b$3
  }
  reactIs_production_min$1.isForwardRef = function (a) {
    return y$1(a) === k$2
  }
  reactIs_production_min$1.isFragment = function (a) {
    return y$1(a) === d$1
  }
  reactIs_production_min$1.isLazy = function (a) {
    return y$1(a) === p$3
  }
  reactIs_production_min$1.isMemo = function (a) {
    return y$1(a) === n$2
  }
  reactIs_production_min$1.isPortal = function (a) {
    return y$1(a) === c$2
  }
  reactIs_production_min$1.isProfiler = function (a) {
    return y$1(a) === f$2
  }
  reactIs_production_min$1.isStrictMode = function (a) {
    return y$1(a) === e$1
  }
  reactIs_production_min$1.isSuspense = function (a) {
    return y$1(a) === l$2
  }
  reactIs_production_min$1.isValidElementType = function (a) {
    return 'string' === typeof a ||
      'function' === typeof a ||
      a === d$1 ||
      a === f$2 ||
      a === v$4 ||
      a === e$1 ||
      a === l$2 ||
      a === m$1 ||
      a === w$4 ||
      ('object' === typeof a &&
        null !== a &&
        (a.$$typeof === p$3 || a.$$typeof === n$2 || a.$$typeof === g$3 || a.$$typeof === h$1 || a.$$typeof === k$2 || a.$$typeof === u$1 || a.$$typeof === q$2 || a[0] === r$2))
      ? !0
      : !1
  }
  reactIs_production_min$1.typeOf = y$1

  {
    reactIs$2.exports = reactIs_production_min$1
  }

  //

  var shallowequal = function shallowEqual(objA, objB, compare, compareContext) {
    var ret = compare ? compare.call(compareContext, objA, objB) : void 0

    if (ret !== void 0) {
      return !!ret
    }

    if (objA === objB) {
      return true
    }

    if (typeof objA !== 'object' || !objA || typeof objB !== 'object' || !objB) {
      return false
    }

    var keysA = Object.keys(objA)
    var keysB = Object.keys(objB)

    if (keysA.length !== keysB.length) {
      return false
    }

    var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB)

    // Test for A's keys different from B.
    for (var idx = 0; idx < keysA.length; idx++) {
      var key = keysA[idx]

      if (!bHasOwnProperty(key)) {
        return false
      }

      var valueA = objA[key]
      var valueB = objB[key]

      ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0

      if (ret === false || (ret === void 0 && valueA !== valueB)) {
        return false
      }
    }

    return true
  }

  function stylis_min(W) {
    function M(d, c, e, h, a) {
      for (
        var m = 0, b = 0, v = 0, n = 0, q, g, x = 0, K = 0, k, u = (k = q = 0), l = 0, r = 0, I = 0, t = 0, B = e.length, J = B - 1, y, f = '', p = '', F = '', G = '', C;
        l < B;

      ) {
        g = e.charCodeAt(l)
        l === J && 0 !== b + n + v + m && (0 !== b && (g = 47 === b ? 10 : 47), (n = v = m = 0), B++, J++)

        if (0 === b + n + v + m) {
          if (l === J && (0 < r && (f = f.replace(N, '')), 0 < f.trim().length)) {
            switch (g) {
              case 32:
              case 9:
              case 59:
              case 13:
              case 10:
                break

              default:
                f += e.charAt(l)
            }

            g = 59
          }

          switch (g) {
            case 123:
              f = f.trim()
              q = f.charCodeAt(0)
              k = 1

              for (t = ++l; l < B; ) {
                switch ((g = e.charCodeAt(l))) {
                  case 123:
                    k++
                    break

                  case 125:
                    k--
                    break

                  case 47:
                    switch ((g = e.charCodeAt(l + 1))) {
                      case 42:
                      case 47:
                        a: {
                          for (u = l + 1; u < J; ++u) {
                            switch (e.charCodeAt(u)) {
                              case 47:
                                if (42 === g && 42 === e.charCodeAt(u - 1) && l + 2 !== u) {
                                  l = u + 1
                                  break a
                                }

                                break

                              case 10:
                                if (47 === g) {
                                  l = u + 1
                                  break a
                                }
                            }
                          }

                          l = u
                        }
                    }

                    break

                  case 91:
                    g++

                  case 40:
                    g++

                  case 34:
                  case 39:
                    for (; l++ < J && e.charCodeAt(l) !== g; ) {}
                }

                if (0 === k) break
                l++
              }

              k = e.substring(t, l)
              0 === q && (q = (f = f.replace(ca, '').trim()).charCodeAt(0))

              switch (q) {
                case 64:
                  0 < r && (f = f.replace(N, ''))
                  g = f.charCodeAt(1)

                  switch (g) {
                    case 100:
                    case 109:
                    case 115:
                    case 45:
                      r = c
                      break

                    default:
                      r = O
                  }

                  k = M(c, r, k, g, a + 1)
                  t = k.length
                  0 < A && ((r = X(O, f, I)), (C = H(3, k, r, c, D, z, t, g, a, h)), (f = r.join('')), void 0 !== C && 0 === (t = (k = C.trim()).length) && ((g = 0), (k = '')))
                  if (0 < t)
                    switch (g) {
                      case 115:
                        f = f.replace(da, ea)

                      case 100:
                      case 109:
                      case 45:
                        k = f + '{' + k + '}'
                        break

                      case 107:
                        f = f.replace(fa, '$1 $2')
                        k = f + '{' + k + '}'
                        k = 1 === w || (2 === w && L('@' + k, 3)) ? '@-webkit-' + k + '@' + k : '@' + k
                        break

                      default:
                        ;(k = f + k), 112 === h && (k = ((p += k), ''))
                    }
                  else k = ''
                  break

                default:
                  k = M(c, X(c, f, I), k, h, a + 1)
              }

              F += k
              k = I = r = u = q = 0
              f = ''
              g = e.charCodeAt(++l)
              break

            case 125:
            case 59:
              f = (0 < r ? f.replace(N, '') : f).trim()
              if (1 < (t = f.length))
                switch (
                  (0 === u && ((q = f.charCodeAt(0)), 45 === q || (96 < q && 123 > q)) && (t = (f = f.replace(' ', ':')).length),
                  0 < A && void 0 !== (C = H(1, f, c, d, D, z, p.length, h, a, h)) && 0 === (t = (f = C.trim()).length) && (f = '\x00\x00'),
                  (q = f.charCodeAt(0)),
                  (g = f.charCodeAt(1)),
                  q)
                ) {
                  case 0:
                    break

                  case 64:
                    if (105 === g || 99 === g) {
                      G += f + e.charAt(l)
                      break
                    }

                  default:
                    58 !== f.charCodeAt(t - 1) && (p += P(f, q, g, f.charCodeAt(2)))
                }
              I = r = u = q = 0
              f = ''
              g = e.charCodeAt(++l)
          }
        }

        switch (g) {
          case 13:
          case 10:
            47 === b ? (b = 0) : 0 === 1 + q && 107 !== h && 0 < f.length && ((r = 1), (f += '\x00'))
            0 < A * Y && H(0, f, c, d, D, z, p.length, h, a, h)
            z = 1
            D++
            break

          case 59:
          case 125:
            if (0 === b + n + v + m) {
              z++
              break
            }

          default:
            z++
            y = e.charAt(l)

            switch (g) {
              case 9:
              case 32:
                if (0 === n + m + b)
                  switch (x) {
                    case 44:
                    case 58:
                    case 9:
                    case 32:
                      y = ''
                      break

                    default:
                      32 !== g && (y = ' ')
                  }
                break

              case 0:
                y = '\\0'
                break

              case 12:
                y = '\\f'
                break

              case 11:
                y = '\\v'
                break

              case 38:
                0 === n + b + m && ((r = I = 1), (y = '\f' + y))
                break

              case 108:
                if (0 === n + b + m + E && 0 < u)
                  switch (l - u) {
                    case 2:
                      112 === x && 58 === e.charCodeAt(l - 3) && (E = x)

                    case 8:
                      111 === K && (E = K)
                  }
                break

              case 58:
                0 === n + b + m && (u = l)
                break

              case 44:
                0 === b + v + n + m && ((r = 1), (y += '\r'))
                break

              case 34:
              case 39:
                0 === b && (n = n === g ? 0 : 0 === n ? g : n)
                break

              case 91:
                0 === n + b + v && m++
                break

              case 93:
                0 === n + b + v && m--
                break

              case 41:
                0 === n + b + m && v--
                break

              case 40:
                if (0 === n + b + m) {
                  if (0 === q)
                    switch (2 * x + 3 * K) {
                      case 533:
                        break

                      default:
                        q = 1
                    }
                  v++
                }

                break

              case 64:
                0 === b + v + n + m + u + k && (k = 1)
                break

              case 42:
              case 47:
                if (!(0 < n + m + v))
                  switch (b) {
                    case 0:
                      switch (2 * g + 3 * e.charCodeAt(l + 1)) {
                        case 235:
                          b = 47
                          break

                        case 220:
                          ;(t = l), (b = 42)
                      }

                      break

                    case 42:
                      47 === g && 42 === x && t + 2 !== l && (33 === e.charCodeAt(t + 2) && (p += e.substring(t, l + 1)), (y = ''), (b = 0))
                  }
            }

            0 === b && (f += y)
        }

        K = x
        x = g
        l++
      }

      t = p.length

      if (0 < t) {
        r = c
        if (0 < A && ((C = H(2, p, r, d, D, z, t, h, a, h)), void 0 !== C && 0 === (p = C).length)) return G + p + F
        p = r.join(',') + '{' + p + '}'

        if (0 !== w * E) {
          2 !== w || L(p, 2) || (E = 0)

          switch (E) {
            case 111:
              p = p.replace(ha, ':-moz-$1') + p
              break

            case 112:
              p = p.replace(Q, '::-webkit-input-$1') + p.replace(Q, '::-moz-$1') + p.replace(Q, ':-ms-input-$1') + p
          }

          E = 0
        }
      }

      return G + p + F
    }

    function X(d, c, e) {
      var h = c.trim().split(ia)
      c = h
      var a = h.length,
        m = d.length

      switch (m) {
        case 0:
        case 1:
          var b = 0

          for (d = 0 === m ? '' : d[0] + ' '; b < a; ++b) {
            c[b] = Z(d, c[b], e).trim()
          }

          break

        default:
          var v = (b = 0)

          for (c = []; b < a; ++b) {
            for (var n = 0; n < m; ++n) {
              c[v++] = Z(d[n] + ' ', h[b], e).trim()
            }
          }
      }

      return c
    }

    function Z(d, c, e) {
      var h = c.charCodeAt(0)
      33 > h && (h = (c = c.trim()).charCodeAt(0))

      switch (h) {
        case 38:
          return c.replace(F, '$1' + d.trim())

        case 58:
          return d.trim() + c.replace(F, '$1' + d.trim())

        default:
          if (0 < 1 * e && 0 < c.indexOf('\f')) return c.replace(F, (58 === d.charCodeAt(0) ? '' : '$1') + d.trim())
      }

      return d + c
    }

    function P(d, c, e, h) {
      var a = d + ';',
        m = 2 * c + 3 * e + 4 * h

      if (944 === m) {
        d = a.indexOf(':', 9) + 1
        var b = a.substring(d, a.length - 1).trim()
        b = a.substring(0, d).trim() + b + ';'
        return 1 === w || (2 === w && L(b, 1)) ? '-webkit-' + b + b : b
      }

      if (0 === w || (2 === w && !L(a, 1))) return a

      switch (m) {
        case 1015:
          return 97 === a.charCodeAt(10) ? '-webkit-' + a + a : a

        case 951:
          return 116 === a.charCodeAt(3) ? '-webkit-' + a + a : a

        case 963:
          return 110 === a.charCodeAt(5) ? '-webkit-' + a + a : a

        case 1009:
          if (100 !== a.charCodeAt(4)) break

        case 969:
        case 942:
          return '-webkit-' + a + a

        case 978:
          return '-webkit-' + a + '-moz-' + a + a

        case 1019:
        case 983:
          return '-webkit-' + a + '-moz-' + a + '-ms-' + a + a

        case 883:
          if (45 === a.charCodeAt(8)) return '-webkit-' + a + a
          if (0 < a.indexOf('image-set(', 11)) return a.replace(ja, '$1-webkit-$2') + a
          break

        case 932:
          if (45 === a.charCodeAt(4))
            switch (a.charCodeAt(5)) {
              case 103:
                return '-webkit-box-' + a.replace('-grow', '') + '-webkit-' + a + '-ms-' + a.replace('grow', 'positive') + a

              case 115:
                return '-webkit-' + a + '-ms-' + a.replace('shrink', 'negative') + a

              case 98:
                return '-webkit-' + a + '-ms-' + a.replace('basis', 'preferred-size') + a
            }
          return '-webkit-' + a + '-ms-' + a + a

        case 964:
          return '-webkit-' + a + '-ms-flex-' + a + a

        case 1023:
          if (99 !== a.charCodeAt(8)) break
          b = a.substring(a.indexOf(':', 15)).replace('flex-', '').replace('space-between', 'justify')
          return '-webkit-box-pack' + b + '-webkit-' + a + '-ms-flex-pack' + b + a

        case 1005:
          return ka.test(a) ? a.replace(aa, ':-webkit-') + a.replace(aa, ':-moz-') + a : a

        case 1e3:
          b = a.substring(13).trim()
          c = b.indexOf('-') + 1

          switch (b.charCodeAt(0) + b.charCodeAt(c)) {
            case 226:
              b = a.replace(G, 'tb')
              break

            case 232:
              b = a.replace(G, 'tb-rl')
              break

            case 220:
              b = a.replace(G, 'lr')
              break

            default:
              return a
          }

          return '-webkit-' + a + '-ms-' + b + a

        case 1017:
          if (-1 === a.indexOf('sticky', 9)) break

        case 975:
          c = (a = d).length - 10
          b = (33 === a.charCodeAt(c) ? a.substring(0, c) : a).substring(d.indexOf(':', 7) + 1).trim()

          switch ((m = b.charCodeAt(0) + (b.charCodeAt(7) | 0))) {
            case 203:
              if (111 > b.charCodeAt(8)) break

            case 115:
              a = a.replace(b, '-webkit-' + b) + ';' + a
              break

            case 207:
            case 102:
              a = a.replace(b, '-webkit-' + (102 < m ? 'inline-' : '') + 'box') + ';' + a.replace(b, '-webkit-' + b) + ';' + a.replace(b, '-ms-' + b + 'box') + ';' + a
          }

          return a + ';'

        case 938:
          if (45 === a.charCodeAt(5))
            switch (a.charCodeAt(6)) {
              case 105:
                return (b = a.replace('-items', '')), '-webkit-' + a + '-webkit-box-' + b + '-ms-flex-' + b + a

              case 115:
                return '-webkit-' + a + '-ms-flex-item-' + a.replace(ba, '') + a

              default:
                return '-webkit-' + a + '-ms-flex-line-pack' + a.replace('align-content', '').replace(ba, '') + a
            }
          break

        case 973:
        case 989:
          if (45 !== a.charCodeAt(3) || 122 === a.charCodeAt(4)) break

        case 931:
        case 953:
          if (!0 === la.test(d))
            return 115 === (b = d.substring(d.indexOf(':') + 1)).charCodeAt(0)
              ? P(d.replace('stretch', 'fill-available'), c, e, h).replace(':fill-available', ':stretch')
              : a.replace(b, '-webkit-' + b) + a.replace(b, '-moz-' + b.replace('fill-', '')) + a
          break

        case 962:
          if (((a = '-webkit-' + a + (102 === a.charCodeAt(5) ? '-ms-' + a : '') + a), 211 === e + h && 105 === a.charCodeAt(13) && 0 < a.indexOf('transform', 10)))
            return a.substring(0, a.indexOf(';', 27) + 1).replace(ma, '$1-webkit-$2') + a
      }

      return a
    }

    function L(d, c) {
      var e = d.indexOf(1 === c ? ':' : '{'),
        h = d.substring(0, 3 !== c ? e : 10)
      e = d.substring(e + 1, d.length - 1)
      return R(2 !== c ? h : h.replace(na, '$1'), e, c)
    }

    function ea(d, c) {
      var e = P(c, c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2))
      return e !== c + ';' ? e.replace(oa, ' or ($1)').substring(4) : '(' + c + ')'
    }

    function H(d, c, e, h, a, m, b, v, n, q) {
      for (var g = 0, x = c, w; g < A; ++g) {
        switch ((w = S[g].call(B, d, x, e, h, a, m, b, v, n, q))) {
          case void 0:
          case !1:
          case !0:
          case null:
            break

          default:
            x = w
        }
      }

      if (x !== c) return x
    }

    function T(d) {
      switch (d) {
        case void 0:
        case null:
          A = S.length = 0
          break

        default:
          if ('function' === typeof d) S[A++] = d
          else if ('object' === typeof d)
            for (var c = 0, e = d.length; c < e; ++c) {
              T(d[c])
            }
          else Y = !!d | 0
      }

      return T
    }

    function U(d) {
      d = d.prefix
      void 0 !== d && ((R = null), d ? ('function' !== typeof d ? (w = 1) : ((w = 2), (R = d))) : (w = 0))
      return U
    }

    function B(d, c) {
      var e = d
      33 > e.charCodeAt(0) && (e = e.trim())
      V = e
      e = [V]

      if (0 < A) {
        var h = H(-1, c, e, e, D, z, 0, 0, 0, 0)
        void 0 !== h && 'string' === typeof h && (c = h)
      }

      var a = M(O, e, c, 0, 0)
      0 < A && ((h = H(-2, a, e, e, D, z, a.length, 0, 0, 0)), void 0 !== h && (a = h))
      V = ''
      E = 0
      z = D = 1
      return a
    }

    var ca = /^\0+/g,
      N = /[\0\r\f]/g,
      aa = /: */g,
      ka = /zoo|gra/,
      ma = /([,: ])(transform)/g,
      ia = /,\r+?/g,
      F = /([\t\r\n ])*\f?&/g,
      fa = /@(k\w+)\s*(\S*)\s*/,
      Q = /::(place)/g,
      ha = /:(read-only)/g,
      G = /[svh]\w+-[tblr]{2}/,
      da = /\(\s*(.*)\s*\)/g,
      oa = /([\s\S]*?);/g,
      ba = /-self|flex-/g,
      na = /[^]*?(:[rp][el]a[\w-]+)[^]*/,
      la = /stretch|:\s*\w+\-(?:conte|avail)/,
      ja = /([^-])(image-set\()/,
      z = 1,
      D = 1,
      E = 0,
      w = 1,
      O = [],
      S = [],
      A = 0,
      R = null,
      Y = 0,
      V = ''
    B.use = T
    B.set = U
    void 0 !== W && U(W)
    return B
  }

  var unitlessKeys$1 = {
    animationIterationCount: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    // SVG-related properties
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1,
  }

  function memoize(fn) {
    var cache = Object.create(null)
    return function (arg) {
      if (cache[arg] === undefined) cache[arg] = fn(arg)
      return cache[arg]
    }
  }

  var reactPropsRegex =
    /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|suppressHydrationWarning|valueLink|abbr|accept|acceptCharset|accessKey|action|allow|allowUserMedia|allowPaymentRequest|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|decoding|default|defer|dir|disabled|disablePictureInPicture|download|draggable|encType|enterKeyHint|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loading|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|translate|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|incremental|fallback|inert|itemProp|itemScope|itemType|itemID|itemRef|on|option|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class|autofocus)|(([Dd][Aa][Tt][Aa]|[Aa][Rr][Ii][Aa]|x)-.*))$/ // https://esbench.com/bench/5bfee68a4cd7e6009ef61d23

  var isPropValid = /* #__PURE__ */ memoize(
    function (prop) {
      return (
        reactPropsRegex.test(prop) ||
        (prop.charCodeAt(0) === 111 &&
          /* o */
          prop.charCodeAt(1) === 110 &&
          /* n */
          prop.charCodeAt(2) < 91)
      )
    },
    /* Z+1 */
  )

  var reactIs$1 = { exports: {} }

  var reactIs_production_min = {}

  /** @license React v16.13.1
   * react-is.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  var b$2 = 'function' === typeof Symbol && Symbol.for,
    c$1 = b$2 ? Symbol.for('react.element') : 60103,
    d = b$2 ? Symbol.for('react.portal') : 60106,
    e = b$2 ? Symbol.for('react.fragment') : 60107,
    f$1 = b$2 ? Symbol.for('react.strict_mode') : 60108,
    g$2 = b$2 ? Symbol.for('react.profiler') : 60114,
    h = b$2 ? Symbol.for('react.provider') : 60109,
    k$1 = b$2 ? Symbol.for('react.context') : 60110,
    l$1 = b$2 ? Symbol.for('react.async_mode') : 60111,
    m = b$2 ? Symbol.for('react.concurrent_mode') : 60111,
    n$1 = b$2 ? Symbol.for('react.forward_ref') : 60112,
    p$2 = b$2 ? Symbol.for('react.suspense') : 60113,
    q$1 = b$2 ? Symbol.for('react.suspense_list') : 60120,
    r$1 = b$2 ? Symbol.for('react.memo') : 60115,
    t = b$2 ? Symbol.for('react.lazy') : 60116,
    v$3 = b$2 ? Symbol.for('react.block') : 60121,
    w$3 = b$2 ? Symbol.for('react.fundamental') : 60117,
    x$2 = b$2 ? Symbol.for('react.responder') : 60118,
    y = b$2 ? Symbol.for('react.scope') : 60119
  function z$3(a) {
    if ('object' === typeof a && null !== a) {
      var u = a.$$typeof
      switch (u) {
        case c$1:
          switch (((a = a.type), a)) {
            case l$1:
            case m:
            case e:
            case g$2:
            case f$1:
            case p$2:
              return a
            default:
              switch (((a = a && a.$$typeof), a)) {
                case k$1:
                case n$1:
                case t:
                case r$1:
                case h:
                  return a
                default:
                  return u
              }
          }
        case d:
          return u
      }
    }
  }
  function A$3(a) {
    return z$3(a) === m
  }
  reactIs_production_min.AsyncMode = l$1
  reactIs_production_min.ConcurrentMode = m
  reactIs_production_min.ContextConsumer = k$1
  reactIs_production_min.ContextProvider = h
  reactIs_production_min.Element = c$1
  reactIs_production_min.ForwardRef = n$1
  reactIs_production_min.Fragment = e
  reactIs_production_min.Lazy = t
  reactIs_production_min.Memo = r$1
  reactIs_production_min.Portal = d
  reactIs_production_min.Profiler = g$2
  reactIs_production_min.StrictMode = f$1
  reactIs_production_min.Suspense = p$2
  reactIs_production_min.isAsyncMode = function (a) {
    return A$3(a) || z$3(a) === l$1
  }
  reactIs_production_min.isConcurrentMode = A$3
  reactIs_production_min.isContextConsumer = function (a) {
    return z$3(a) === k$1
  }
  reactIs_production_min.isContextProvider = function (a) {
    return z$3(a) === h
  }
  reactIs_production_min.isElement = function (a) {
    return 'object' === typeof a && null !== a && a.$$typeof === c$1
  }
  reactIs_production_min.isForwardRef = function (a) {
    return z$3(a) === n$1
  }
  reactIs_production_min.isFragment = function (a) {
    return z$3(a) === e
  }
  reactIs_production_min.isLazy = function (a) {
    return z$3(a) === t
  }
  reactIs_production_min.isMemo = function (a) {
    return z$3(a) === r$1
  }
  reactIs_production_min.isPortal = function (a) {
    return z$3(a) === d
  }
  reactIs_production_min.isProfiler = function (a) {
    return z$3(a) === g$2
  }
  reactIs_production_min.isStrictMode = function (a) {
    return z$3(a) === f$1
  }
  reactIs_production_min.isSuspense = function (a) {
    return z$3(a) === p$2
  }
  reactIs_production_min.isValidElementType = function (a) {
    return (
      'string' === typeof a ||
      'function' === typeof a ||
      a === e ||
      a === m ||
      a === g$2 ||
      a === f$1 ||
      a === p$2 ||
      a === q$1 ||
      ('object' === typeof a &&
        null !== a &&
        (a.$$typeof === t ||
          a.$$typeof === r$1 ||
          a.$$typeof === h ||
          a.$$typeof === k$1 ||
          a.$$typeof === n$1 ||
          a.$$typeof === w$3 ||
          a.$$typeof === x$2 ||
          a.$$typeof === y ||
          a.$$typeof === v$3))
    )
  }
  reactIs_production_min.typeOf = z$3

  {
    reactIs$1.exports = reactIs_production_min
  }

  var reactIs = reactIs$1.exports

  /**
   * Copyright 2015, Yahoo! Inc.
   * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.
   */
  var REACT_STATICS = {
    childContextTypes: true,
    contextType: true,
    contextTypes: true,
    defaultProps: true,
    displayName: true,
    getDefaultProps: true,
    getDerivedStateFromError: true,
    getDerivedStateFromProps: true,
    mixins: true,
    propTypes: true,
    type: true,
  }
  var KNOWN_STATICS = {
    name: true,
    length: true,
    prototype: true,
    caller: true,
    callee: true,
    arguments: true,
    arity: true,
  }
  var FORWARD_REF_STATICS = {
    $$typeof: true,
    render: true,
    defaultProps: true,
    displayName: true,
    propTypes: true,
  }
  var MEMO_STATICS = {
    $$typeof: true,
    compare: true,
    defaultProps: true,
    displayName: true,
    propTypes: true,
    type: true,
  }
  var TYPE_STATICS = {}
  TYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS
  TYPE_STATICS[reactIs.Memo] = MEMO_STATICS

  function getStatics(component) {
    // React v16.11 and below
    if (reactIs.isMemo(component)) {
      return MEMO_STATICS
    } // React v16.12 and above

    return TYPE_STATICS[component['$$typeof']] || REACT_STATICS
  }

  var defineProperty = Object.defineProperty
  var getOwnPropertyNames = Object.getOwnPropertyNames
  var getOwnPropertySymbols = Object.getOwnPropertySymbols
  var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor
  var getPrototypeOf = Object.getPrototypeOf
  var objectPrototype = Object.prototype
  function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
    if (typeof sourceComponent !== 'string') {
      // don't hoist over string (html) components
      if (objectPrototype) {
        var inheritedComponent = getPrototypeOf(sourceComponent)

        if (inheritedComponent && inheritedComponent !== objectPrototype) {
          hoistNonReactStatics(targetComponent, inheritedComponent, blacklist)
        }
      }

      var keys = getOwnPropertyNames(sourceComponent)

      if (getOwnPropertySymbols) {
        keys = keys.concat(getOwnPropertySymbols(sourceComponent))
      }

      var targetStatics = getStatics(targetComponent)
      var sourceStatics = getStatics(sourceComponent)

      for (var i = 0; i < keys.length; ++i) {
        var key = keys[i]

        if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
          var descriptor = getOwnPropertyDescriptor(sourceComponent, key)

          try {
            // Avoid failures from read-only properties
            defineProperty(targetComponent, key, descriptor)
          } catch (e) {}
        }
      }
    }

    return targetComponent
  }

  var hoistNonReactStatics_cjs = hoistNonReactStatics

  function v$2() {
    return (v$2 =
      Object.assign ||
      function (e) {
        for (var t = 1; t < arguments.length; t++) {
          var n = arguments[t]
          for (var r in n) Object.prototype.hasOwnProperty.call(n, r) && (e[r] = n[r])
        }
        return e
      }).apply(this, arguments)
  }
  var g$1 = function (e, t) {
      for (var n = [e[0]], r = 0, o = t.length; r < o; r += 1) n.push(t[r], e[r + 1])
      return n
    },
    S$1 = function (t) {
      return null !== t && 'object' == typeof t && '[object Object]' === (t.toString ? t.toString() : Object.prototype.toString.call(t)) && !reactIs$2.exports.typeOf(t)
    },
    w$2 = Object.freeze([]),
    E$2 = Object.freeze({})
  function b$1(e) {
    return 'function' == typeof e
  }
  function _(e) {
    return e.displayName || e.name || 'Component'
  }
  function N$1(e) {
    return e && 'string' == typeof e.styledComponentId
  }
  var A$2 = ('undefined' != typeof process && (process.env.REACT_APP_SC_ATTR || process.env.SC_ATTR)) || 'data-styled',
    C$1 = '5.3.6',
    I$1 = 'undefined' != typeof window && 'HTMLElement' in window,
    P$1 = Boolean(
      'boolean' == typeof SC_DISABLE_SPEEDY
        ? SC_DISABLE_SPEEDY
        : 'undefined' != typeof process && void 0 !== process.env.REACT_APP_SC_DISABLE_SPEEDY && '' !== process.env.REACT_APP_SC_DISABLE_SPEEDY
        ? 'false' !== process.env.REACT_APP_SC_DISABLE_SPEEDY && process.env.REACT_APP_SC_DISABLE_SPEEDY
        : 'undefined' != typeof process && void 0 !== process.env.SC_DISABLE_SPEEDY && '' !== process.env.SC_DISABLE_SPEEDY
        ? 'false' !== process.env.SC_DISABLE_SPEEDY && process.env.SC_DISABLE_SPEEDY
        : 'production' !== 'production',
    ),
    O$1 = {}
  function j$1(e) {
    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r]
    throw new Error('An error occurred. See https://git.io/JUIaE#' + e + ' for more information.' + (n.length > 0 ? ' Args: ' + n.join(', ') : ''))
  }
  var T$1 = (function () {
      function e(e) {
        ;(this.groupSizes = new Uint32Array(512)), (this.length = 512), (this.tag = e)
      }
      var t = e.prototype
      return (
        (t.indexOfGroup = function (e) {
          for (var t = 0, n = 0; n < e; n++) t += this.groupSizes[n]
          return t
        }),
        (t.insertRules = function (e, t) {
          if (e >= this.groupSizes.length) {
            for (var n = this.groupSizes, r = n.length, o = r; e >= o; ) (o <<= 1) < 0 && j$1(16, '' + e)
            ;(this.groupSizes = new Uint32Array(o)), this.groupSizes.set(n), (this.length = o)
            for (var s = r; s < o; s++) this.groupSizes[s] = 0
          }
          for (var i = this.indexOfGroup(e + 1), a = 0, c = t.length; a < c; a++) this.tag.insertRule(i, t[a]) && (this.groupSizes[e]++, i++)
        }),
        (t.clearGroup = function (e) {
          if (e < this.length) {
            var t = this.groupSizes[e],
              n = this.indexOfGroup(e),
              r = n + t
            this.groupSizes[e] = 0
            for (var o = n; o < r; o++) this.tag.deleteRule(n)
          }
        }),
        (t.getGroup = function (e) {
          var t = ''
          if (e >= this.length || 0 === this.groupSizes[e]) return t
          for (var n = this.groupSizes[e], r = this.indexOfGroup(e), o = r + n, s = r; s < o; s++) t += this.tag.getRule(s) + '/*!sc*/\n'
          return t
        }),
        e
      )
    })(),
    x$1 = new Map(),
    k = new Map(),
    V$1 = 1,
    B$1 = function (e) {
      if (x$1.has(e)) return x$1.get(e)
      for (; k.has(V$1); ) V$1++
      var t = V$1++
      return x$1.set(e, t), k.set(t, e), t
    },
    z$2 = function (e) {
      return k.get(e)
    },
    M$1 = function (e, t) {
      t >= V$1 && (V$1 = t + 1), x$1.set(e, t), k.set(t, e)
    },
    G$1 = 'style[' + A$2 + '][data-styled-version="5.3.6"]',
    L$2 = new RegExp('^' + A$2 + '\\.g(\\d+)\\[id="([\\w\\d-]+)"\\].*?"([^"]*)'),
    F = function (e, t, n) {
      for (var r, o = n.split(','), s = 0, i = o.length; s < i; s++) (r = o[s]) && e.registerName(t, r)
    },
    Y$1 = function (e, t) {
      for (var n = (t.textContent || '').split('/*!sc*/\n'), r = [], o = 0, s = n.length; o < s; o++) {
        var i = n[o].trim()
        if (i) {
          var a = i.match(L$2)
          if (a) {
            var c = 0 | parseInt(a[1], 10),
              u = a[2]
            0 !== c && (M$1(u, c), F(e, u, a[3]), e.getTag().insertRules(c, r)), (r.length = 0)
          } else r.push(i)
        }
      }
    },
    q = function () {
      return 'undefined' != typeof __webpack_nonce__ ? __webpack_nonce__ : null
    },
    H$2 = function (e) {
      var t = document.head,
        n = e || t,
        r = document.createElement('style'),
        o = (function (e) {
          for (var t = e.childNodes, n = t.length; n >= 0; n--) {
            var r = t[n]
            if (r && 1 === r.nodeType && r.hasAttribute(A$2)) return r
          }
        })(n),
        s = void 0 !== o ? o.nextSibling : null
      r.setAttribute(A$2, 'active'), r.setAttribute('data-styled-version', '5.3.6')
      var i = q()
      return i && r.setAttribute('nonce', i), n.insertBefore(r, s), r
    },
    $ = (function () {
      function e(e) {
        var t = (this.element = H$2(e))
        t.appendChild(document.createTextNode('')),
          (this.sheet = (function (e) {
            if (e.sheet) return e.sheet
            for (var t = document.styleSheets, n = 0, r = t.length; n < r; n++) {
              var o = t[n]
              if (o.ownerNode === e) return o
            }
            j$1(17)
          })(t)),
          (this.length = 0)
      }
      var t = e.prototype
      return (
        (t.insertRule = function (e, t) {
          try {
            return this.sheet.insertRule(t, e), this.length++, !0
          } catch (e) {
            return !1
          }
        }),
        (t.deleteRule = function (e) {
          this.sheet.deleteRule(e), this.length--
        }),
        (t.getRule = function (e) {
          var t = this.sheet.cssRules[e]
          return void 0 !== t && 'string' == typeof t.cssText ? t.cssText : ''
        }),
        e
      )
    })(),
    W$2 = (function () {
      function e(e) {
        var t = (this.element = H$2(e))
        ;(this.nodes = t.childNodes), (this.length = 0)
      }
      var t = e.prototype
      return (
        (t.insertRule = function (e, t) {
          if (e <= this.length && e >= 0) {
            var n = document.createTextNode(t),
              r = this.nodes[e]
            return this.element.insertBefore(n, r || null), this.length++, !0
          }
          return !1
        }),
        (t.deleteRule = function (e) {
          this.element.removeChild(this.nodes[e]), this.length--
        }),
        (t.getRule = function (e) {
          return e < this.length ? this.nodes[e].textContent : ''
        }),
        e
      )
    })(),
    U$1 = (function () {
      function e(e) {
        ;(this.rules = []), (this.length = 0)
      }
      var t = e.prototype
      return (
        (t.insertRule = function (e, t) {
          return e <= this.length && (this.rules.splice(e, 0, t), this.length++, !0)
        }),
        (t.deleteRule = function (e) {
          this.rules.splice(e, 1), this.length--
        }),
        (t.getRule = function (e) {
          return e < this.length ? this.rules[e] : ''
        }),
        e
      )
    })(),
    J = I$1,
    X$1 = { isServer: !I$1, useCSSOMInjection: !P$1 },
    Z$1 = (function () {
      function e(e, t, n) {
        void 0 === e && (e = E$2),
          void 0 === t && (t = {}),
          (this.options = v$2({}, X$1, {}, e)),
          (this.gs = t),
          (this.names = new Map(n)),
          (this.server = !!e.isServer),
          !this.server &&
            I$1 &&
            J &&
            ((J = !1),
            (function (e) {
              for (var t = document.querySelectorAll(G$1), n = 0, r = t.length; n < r; n++) {
                var o = t[n]
                o && 'active' !== o.getAttribute(A$2) && (Y$1(e, o), o.parentNode && o.parentNode.removeChild(o))
              }
            })(this))
      }
      e.registerId = function (e) {
        return B$1(e)
      }
      var t = e.prototype
      return (
        (t.reconstructWithOptions = function (t, n) {
          return void 0 === n && (n = !0), new e(v$2({}, this.options, {}, t), this.gs, (n && this.names) || void 0)
        }),
        (t.allocateGSInstance = function (e) {
          return (this.gs[e] = (this.gs[e] || 0) + 1)
        }),
        (t.getTag = function () {
          return (
            this.tag || (this.tag = ((n = (t = this.options).isServer), (r = t.useCSSOMInjection), (o = t.target), (e = n ? new U$1(o) : r ? new $(o) : new W$2(o)), new T$1(e)))
          )
          var e, t, n, r, o
        }),
        (t.hasNameForId = function (e, t) {
          return this.names.has(e) && this.names.get(e).has(t)
        }),
        (t.registerName = function (e, t) {
          if ((B$1(e), this.names.has(e))) this.names.get(e).add(t)
          else {
            var n = new Set()
            n.add(t), this.names.set(e, n)
          }
        }),
        (t.insertRules = function (e, t, n) {
          this.registerName(e, t), this.getTag().insertRules(B$1(e), n)
        }),
        (t.clearNames = function (e) {
          this.names.has(e) && this.names.get(e).clear()
        }),
        (t.clearRules = function (e) {
          this.getTag().clearGroup(B$1(e)), this.clearNames(e)
        }),
        (t.clearTag = function () {
          this.tag = void 0
        }),
        (t.toString = function () {
          return (function (e) {
            for (var t = e.getTag(), n = t.length, r = '', o = 0; o < n; o++) {
              var s = z$2(o)
              if (void 0 !== s) {
                var i = e.names.get(s),
                  a = t.getGroup(o)
                if (i && a && i.size) {
                  var c = A$2 + '.g' + o + '[id="' + s + '"]',
                    u = ''
                  void 0 !== i &&
                    i.forEach(function (e) {
                      e.length > 0 && (u += e + ',')
                    }),
                    (r += '' + a + c + '{content:"' + u + '"}/*!sc*/\n')
                }
              }
            }
            return r
          })(this)
        }),
        e
      )
    })(),
    K$1 = /(a)(d)/gi,
    Q$1 = function (e) {
      return String.fromCharCode(e + (e > 25 ? 39 : 97))
    }
  function ee$1(e) {
    var t,
      n = ''
    for (t = Math.abs(e); t > 52; t = (t / 52) | 0) n = Q$1(t % 52) + n
    return (Q$1(t % 52) + n).replace(K$1, '$1-$2')
  }
  var te$1 = function (e, t) {
      for (var n = t.length; n; ) e = (33 * e) ^ t.charCodeAt(--n)
      return e
    },
    ne$1 = function (e) {
      return te$1(5381, e)
    }
  function re$1(e) {
    for (var t = 0; t < e.length; t += 1) {
      var n = e[t]
      if (b$1(n) && !N$1(n)) return !1
    }
    return !0
  }
  var oe$1 = ne$1('5.3.6'),
    se$1 = (function () {
      function e(e, t, n) {
        ;(this.rules = e),
          (this.staticRulesId = ''),
          (this.isStatic = (void 0 === n || n.isStatic) && re$1(e)),
          (this.componentId = t),
          (this.baseHash = te$1(oe$1, t)),
          (this.baseStyle = n),
          Z$1.registerId(t)
      }
      return (
        (e.prototype.generateAndInjectStyles = function (e, t, n) {
          var r = this.componentId,
            o = []
          if ((this.baseStyle && o.push(this.baseStyle.generateAndInjectStyles(e, t, n)), this.isStatic && !n.hash))
            if (this.staticRulesId && t.hasNameForId(r, this.staticRulesId)) o.push(this.staticRulesId)
            else {
              var s = Ne$1(this.rules, e, t, n).join(''),
                i = ee$1(te$1(this.baseHash, s) >>> 0)
              if (!t.hasNameForId(r, i)) {
                var a = n(s, '.' + i, void 0, r)
                t.insertRules(r, i, a)
              }
              o.push(i), (this.staticRulesId = i)
            }
          else {
            for (var c = this.rules.length, u = te$1(this.baseHash, n.hash), l = '', d = 0; d < c; d++) {
              var h = this.rules[d]
              if ('string' == typeof h) l += h
              else if (h) {
                var p = Ne$1(h, e, t, n),
                  f = Array.isArray(p) ? p.join('') : p
                ;(u = te$1(u, f + d)), (l += f)
              }
            }
            if (l) {
              var m = ee$1(u >>> 0)
              if (!t.hasNameForId(r, m)) {
                var y = n(l, '.' + m, void 0, r)
                t.insertRules(r, m, y)
              }
              o.push(m)
            }
          }
          return o.join(' ')
        }),
        e
      )
    })(),
    ie$1 = /^\s*\/\/.*$/gm,
    ae$1 = [':', '[', '.', '#']
  function ce$1(e) {
    var t,
      n,
      r,
      o,
      s = void 0 === e ? E$2 : e,
      i = s.options,
      a = void 0 === i ? E$2 : i,
      c = s.plugins,
      u = void 0 === c ? w$2 : c,
      l = new stylis_min(a),
      d = [],
      h = (function (e) {
        function t(t) {
          if (t)
            try {
              e(t + '}')
            } catch (e) {}
        }
        return function (n, r, o, s, i, a, c, u, l, d) {
          switch (n) {
            case 1:
              if (0 === l && 64 === r.charCodeAt(0)) return e(r + ';'), ''
              break
            case 2:
              if (0 === u) return r + '/*|*/'
              break
            case 3:
              switch (u) {
                case 102:
                case 112:
                  return e(o[0] + r), ''
                default:
                  return r + (0 === d ? '/*|*/' : '')
              }
            case -2:
              r.split('/*|*/}').forEach(t)
          }
        }
      })(function (e) {
        d.push(e)
      }),
      f = function (e, r, s) {
        return (0 === r && -1 !== ae$1.indexOf(s[n.length])) || s.match(o) ? e : '.' + t
      }
    function m(e, s, i, a) {
      void 0 === a && (a = '&')
      var c = e.replace(ie$1, ''),
        u = s && i ? i + ' ' + s + ' { ' + c + ' }' : c
      return (t = a), (n = s), (r = new RegExp('\\' + n + '\\b', 'g')), (o = new RegExp('(\\' + n + '\\b){2,}')), l(i || !s ? '' : s, u)
    }
    return (
      l.use(
        [].concat(u, [
          function (e, t, o) {
            2 === e && o.length && o[0].lastIndexOf(n) > 0 && (o[0] = o[0].replace(r, f))
          },
          h,
          function (e) {
            if (-2 === e) {
              var t = d
              return (d = []), t
            }
          },
        ]),
      ),
      (m.hash = u.length
        ? u
            .reduce(function (e, t) {
              return t.name || j$1(15), te$1(e, t.name)
            }, 5381)
            .toString()
        : ''),
      m
    )
  }
  var ue$1 = React__default['default'].createContext(),
    le$1 = ue$1.Consumer,
    de$1 = React__default['default'].createContext(),
    he$1 = (de$1.Consumer, new Z$1()),
    pe$1 = ce$1()
  function fe$1() {
    return React$1.useContext(ue$1) || he$1
  }
  function me$1() {
    return React$1.useContext(de$1) || pe$1
  }
  function ye$1(e) {
    var t = React$1.useState(e.stylisPlugins),
      n = t[0],
      s = t[1],
      c = fe$1(),
      u = React$1.useMemo(
        function () {
          var t = c
          return (
            e.sheet ? (t = e.sheet) : e.target && (t = t.reconstructWithOptions({ target: e.target }, !1)),
            e.disableCSSOMInjection && (t = t.reconstructWithOptions({ useCSSOMInjection: !1 })),
            t
          )
        },
        [e.disableCSSOMInjection, e.sheet, e.target],
      ),
      l = React$1.useMemo(
        function () {
          return ce$1({ options: { prefix: !e.disableVendorPrefixes }, plugins: n })
        },
        [e.disableVendorPrefixes, n],
      )
    return (
      React$1.useEffect(
        function () {
          shallowequal(n, e.stylisPlugins) || s(e.stylisPlugins)
        },
        [e.stylisPlugins],
      ),
      React__default['default'].createElement(ue$1.Provider, { value: u }, React__default['default'].createElement(de$1.Provider, { value: l }, e.children))
    )
  }
  var ve$1 = (function () {
      function e(e, t) {
        var n = this
        ;(this.inject = function (e, t) {
          void 0 === t && (t = pe$1)
          var r = n.name + t.hash
          e.hasNameForId(n.id, r) || e.insertRules(n.id, r, t(n.rules, r, '@keyframes'))
        }),
          (this.toString = function () {
            return j$1(12, String(n.name))
          }),
          (this.name = e),
          (this.id = 'sc-keyframes-' + e),
          (this.rules = t)
      }
      return (
        (e.prototype.getName = function (e) {
          return void 0 === e && (e = pe$1), this.name + e.hash
        }),
        e
      )
    })(),
    ge$1 = /([A-Z])/,
    Se$1 = /([A-Z])/g,
    we$1 = /^ms-/,
    Ee$1 = function (e) {
      return '-' + e.toLowerCase()
    }
  function be$1(e) {
    return ge$1.test(e) ? e.replace(Se$1, Ee$1).replace(we$1, '-ms-') : e
  }
  var _e = function (e) {
    return null == e || !1 === e || '' === e
  }
  function Ne$1(e, n, r, o) {
    if (Array.isArray(e)) {
      for (var s, i = [], a = 0, c = e.length; a < c; a += 1) '' !== (s = Ne$1(e[a], n, r, o)) && (Array.isArray(s) ? i.push.apply(i, s) : i.push(s))
      return i
    }
    if (_e(e)) return ''
    if (N$1(e)) return '.' + e.styledComponentId
    if (b$1(e)) {
      if ('function' != typeof (l = e) || (l.prototype && l.prototype.isReactComponent) || !n) return e
      var u = e(n)
      return Ne$1(u, n, r, o)
    }
    var l
    return e instanceof ve$1
      ? r
        ? (e.inject(r, o), e.getName(o))
        : e
      : S$1(e)
      ? (function e(t, n) {
          var r,
            o,
            s = []
          for (var i in t)
            t.hasOwnProperty(i) &&
              !_e(t[i]) &&
              ((Array.isArray(t[i]) && t[i].isCss) || b$1(t[i])
                ? s.push(be$1(i) + ':', t[i], ';')
                : S$1(t[i])
                ? s.push.apply(s, e(t[i], i))
                : s.push(
                    be$1(i) +
                      ': ' +
                      ((r = i),
                      null == (o = t[i]) || 'boolean' == typeof o || '' === o ? '' : 'number' != typeof o || 0 === o || r in unitlessKeys$1 ? String(o).trim() : o + 'px') +
                      ';',
                  ))
          return n ? [n + ' {'].concat(s, ['}']) : s
        })(e)
      : e.toString()
  }
  var Ae$1 = function (e) {
    return Array.isArray(e) && (e.isCss = !0), e
  }
  function Ce$1(e) {
    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r]
    return b$1(e) || S$1(e) ? Ae$1(Ne$1(g$1(w$2, [e].concat(n)))) : 0 === n.length && 1 === e.length && 'string' == typeof e[0] ? e : Ae$1(Ne$1(g$1(e, n)))
  }
  var Re$1 = function (e, t, n) {
      return void 0 === n && (n = E$2), (e.theme !== n.theme && e.theme) || t || n.theme
    },
    De$1 = /[!"#$%&'()*+,./:;<=>?@[\\\]^`{|}~-]+/g,
    je$1 = /(^-|-$)/g
  function Te$1(e) {
    return e.replace(De$1, '-').replace(je$1, '')
  }
  var xe$1 = function (e) {
    return ee$1(ne$1(e) >>> 0)
  }
  function ke$1(e) {
    return 'string' == typeof e && 'production' === 'production'
  }
  var Ve$1 = function (e) {
      return 'function' == typeof e || ('object' == typeof e && null !== e && !Array.isArray(e))
    },
    Be$1 = function (e) {
      return '__proto__' !== e && 'constructor' !== e && 'prototype' !== e
    }
  function ze$1(e, t, n) {
    var r = e[n]
    Ve$1(t) && Ve$1(r) ? Me$1(r, t) : (e[n] = t)
  }
  function Me$1(e) {
    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r]
    for (var o = 0, s = n; o < s.length; o++) {
      var i = s[o]
      if (Ve$1(i)) for (var a in i) Be$1(a) && ze$1(e, i[a], a)
    }
    return e
  }
  var Ge$1 = React__default['default'].createContext(),
    Le$1 = Ge$1.Consumer
  function Fe$1(e) {
    var t = React$1.useContext(Ge$1),
      n = React$1.useMemo(
        function () {
          return (function (e, t) {
            if (!e) return j$1(14)
            if (b$1(e)) {
              var n = e(t)
              return n
            }
            return Array.isArray(e) || 'object' != typeof e ? j$1(8) : t ? v$2({}, t, {}, e) : e
          })(e.theme, t)
        },
        [e.theme, t],
      )
    return e.children ? React__default['default'].createElement(Ge$1.Provider, { value: n }, e.children) : null
  }
  var Ye$1 = {}
  function qe$1(e, t, n) {
    var o = N$1(e),
      i = !ke$1(e),
      a = t.attrs,
      c = void 0 === a ? w$2 : a,
      d = t.componentId,
      h =
        void 0 === d
          ? (function (e, t) {
              var n = 'string' != typeof e ? 'sc' : Te$1(e)
              Ye$1[n] = (Ye$1[n] || 0) + 1
              var r = n + '-' + xe$1('5.3.6' + n + Ye$1[n])
              return t ? t + '-' + r : r
            })(t.displayName, t.parentComponentId)
          : d,
      p = t.displayName,
      f =
        void 0 === p
          ? (function (e) {
              return ke$1(e) ? 'styled.' + e : 'Styled(' + _(e) + ')'
            })(e)
          : p,
      g = t.displayName && t.componentId ? Te$1(t.displayName) + '-' + t.componentId : t.componentId || h,
      S = o && e.attrs ? Array.prototype.concat(e.attrs, c).filter(Boolean) : c,
      A = t.shouldForwardProp
    o &&
      e.shouldForwardProp &&
      (A = t.shouldForwardProp
        ? function (n, r, o) {
            return e.shouldForwardProp(n, r, o) && t.shouldForwardProp(n, r, o)
          }
        : e.shouldForwardProp)
    var C,
      I = new se$1(n, g, o ? e.componentStyle : void 0),
      P = I.isStatic && 0 === c.length,
      O = function (e, t) {
        return (function (e, t, n, r) {
          var o = e.attrs,
            i = e.componentStyle,
            a = e.defaultProps,
            c = e.foldedComponentIds,
            d = e.shouldForwardProp,
            h = e.styledComponentId,
            p = e.target
          var f = (function (e, t, n) {
              void 0 === e && (e = E$2)
              var r = v$2({}, t, { theme: e }),
                o = {}
              return (
                n.forEach(function (e) {
                  var t,
                    n,
                    s,
                    i = e
                  for (t in (b$1(i) && (i = i(r)), i)) r[t] = o[t] = 'className' === t ? ((n = o[t]), (s = i[t]), n && s ? n + ' ' + s : n || s) : i[t]
                }),
                [r, o]
              )
            })(Re$1(t, React$1.useContext(Ge$1), a) || E$2, t, o),
            y = f[0],
            g = f[1],
            S = (function (e, t, n, r) {
              var o = fe$1(),
                s = me$1(),
                i = t ? e.generateAndInjectStyles(E$2, o, s) : e.generateAndInjectStyles(n, o, s)
              return i
            })(i, r, y),
            w = n,
            _ = g.$as || t.$as || g.as || t.as || p,
            N = ke$1(_),
            A = g !== t ? v$2({}, t, {}, g) : t,
            C = {}
          for (var I in A) '$' !== I[0] && 'as' !== I && ('forwardedAs' === I ? (C.as = A[I]) : (d ? d(I, isPropValid, _) : !N || isPropValid(I)) && (C[I] = A[I]))
          return (
            t.style && g.style !== t.style && (C.style = v$2({}, t.style, {}, g.style)),
            (C.className = Array.prototype
              .concat(c, h, S !== h ? S : null, t.className, g.className)
              .filter(Boolean)
              .join(' ')),
            (C.ref = w),
            React$1.createElement(_, C)
          )
        })(C, e, t, P)
      }
    return (
      (O.displayName = f),
      ((C = React__default['default'].forwardRef(O)).attrs = S),
      (C.componentStyle = I),
      (C.displayName = f),
      (C.shouldForwardProp = A),
      (C.foldedComponentIds = o ? Array.prototype.concat(e.foldedComponentIds, e.styledComponentId) : w$2),
      (C.styledComponentId = g),
      (C.target = o ? e.target : e),
      (C.withComponent = function (e) {
        var r = t.componentId,
          o = (function (e, t) {
            if (null == e) return {}
            var n,
              r,
              o = {},
              s = Object.keys(e)
            for (r = 0; r < s.length; r++) (n = s[r]), t.indexOf(n) >= 0 || (o[n] = e[n])
            return o
          })(t, ['componentId']),
          s = r && r + '-' + (ke$1(e) ? e : Te$1(_(e)))
        return qe$1(e, v$2({}, o, { attrs: S, componentId: s }), n)
      }),
      Object.defineProperty(C, 'defaultProps', {
        get: function () {
          return this._foldedDefaultProps
        },
        set: function (t) {
          this._foldedDefaultProps = o ? Me$1({}, e.defaultProps, t) : t
        },
      }),
      (C.toString = function () {
        return '.' + C.styledComponentId
      }),
      i &&
        hoistNonReactStatics_cjs(C, e, {
          attrs: !0,
          componentStyle: !0,
          displayName: !0,
          foldedComponentIds: !0,
          shouldForwardProp: !0,
          styledComponentId: !0,
          target: !0,
          withComponent: !0,
        }),
      C
    )
  }
  var He$1 = function (e) {
    return (function e(t, r, o) {
      if ((void 0 === o && (o = E$2), !reactIs$2.exports.isValidElementType(r))) return j$1(1, String(r))
      var s = function () {
        return t(r, o, Ce$1.apply(void 0, arguments))
      }
      return (
        (s.withConfig = function (n) {
          return e(t, r, v$2({}, o, {}, n))
        }),
        (s.attrs = function (n) {
          return e(t, r, v$2({}, o, { attrs: Array.prototype.concat(o.attrs, n).filter(Boolean) }))
        }),
        s
      )
    })(qe$1, e)
  }
  ;[
    'a',
    'abbr',
    'address',
    'area',
    'article',
    'aside',
    'audio',
    'b',
    'base',
    'bdi',
    'bdo',
    'big',
    'blockquote',
    'body',
    'br',
    'button',
    'canvas',
    'caption',
    'cite',
    'code',
    'col',
    'colgroup',
    'data',
    'datalist',
    'dd',
    'del',
    'details',
    'dfn',
    'dialog',
    'div',
    'dl',
    'dt',
    'em',
    'embed',
    'fieldset',
    'figcaption',
    'figure',
    'footer',
    'form',
    'h1',
    'h2',
    'h3',
    'h4',
    'h5',
    'h6',
    'head',
    'header',
    'hgroup',
    'hr',
    'html',
    'i',
    'iframe',
    'img',
    'input',
    'ins',
    'kbd',
    'keygen',
    'label',
    'legend',
    'li',
    'link',
    'main',
    'map',
    'mark',
    'marquee',
    'menu',
    'menuitem',
    'meta',
    'meter',
    'nav',
    'noscript',
    'object',
    'ol',
    'optgroup',
    'option',
    'output',
    'p',
    'param',
    'picture',
    'pre',
    'progress',
    'q',
    'rp',
    'rt',
    'ruby',
    's',
    'samp',
    'script',
    'section',
    'select',
    'small',
    'source',
    'span',
    'strong',
    'style',
    'sub',
    'summary',
    'sup',
    'table',
    'tbody',
    'td',
    'textarea',
    'tfoot',
    'th',
    'thead',
    'time',
    'title',
    'tr',
    'track',
    'u',
    'ul',
    'var',
    'video',
    'wbr',
    'circle',
    'clipPath',
    'defs',
    'ellipse',
    'foreignObject',
    'g',
    'image',
    'line',
    'linearGradient',
    'marker',
    'mask',
    'path',
    'pattern',
    'polygon',
    'polyline',
    'radialGradient',
    'rect',
    'stop',
    'svg',
    'text',
    'textPath',
    'tspan',
  ].forEach(function (e) {
    He$1[e] = He$1(e)
  })
  var $e$1 = (function () {
    function e(e, t) {
      ;(this.rules = e), (this.componentId = t), (this.isStatic = re$1(e)), Z$1.registerId(this.componentId + 1)
    }
    var t = e.prototype
    return (
      (t.createStyles = function (e, t, n, r) {
        var o = r(Ne$1(this.rules, t, n, r).join(''), ''),
          s = this.componentId + e
        n.insertRules(s, s, o)
      }),
      (t.removeStyles = function (e, t) {
        t.clearRules(this.componentId + e)
      }),
      (t.renderStyles = function (e, t, n, r) {
        e > 2 && Z$1.registerId(this.componentId + e), this.removeStyles(e, n), this.createStyles(e, t, n, r)
      }),
      e
    )
  })()
  function We$1(e) {
    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), o = 1; o < t; o++) n[o - 1] = arguments[o]
    var i = Ce$1.apply(void 0, [e].concat(n)),
      a = 'sc-global-' + xe$1(JSON.stringify(i)),
      u = new $e$1(i, a)
    function l(e) {
      var t = fe$1(),
        n = me$1(),
        o = React$1.useContext(Ge$1),
        l = React$1.useRef(t.allocateGSInstance(a)).current
      return (
        t.server && h(l, e, t, o, n),
        React$1.useLayoutEffect(
          function () {
            if (!t.server)
              return (
                h(l, e, t, o, n),
                function () {
                  return u.removeStyles(l, t)
                }
              )
          },
          [l, e, t, o, n],
        ),
        null
      )
    }
    function h(e, t, n, r, o) {
      if (u.isStatic) u.renderStyles(e, O$1, n, o)
      else {
        var s = v$2({}, t, { theme: Re$1(t, r, l.defaultProps) })
        u.renderStyles(e, s, n, o)
      }
    }
    return React__default['default'].memo(l)
  }
  function Ue$1(e) {
    for (var t = arguments.length, n = new Array(t > 1 ? t - 1 : 0), r = 1; r < t; r++) n[r - 1] = arguments[r]
    var o = Ce$1.apply(void 0, [e].concat(n)).join(''),
      s = xe$1(o)
    return new ve$1(s, o)
  }
  var Je$1 = (function () {
      function e() {
        var e = this
        ;(this._emitSheetCSS = function () {
          var t = e.instance.toString()
          if (!t) return ''
          var n = q()
          return '<style ' + [n && 'nonce="' + n + '"', A$2 + '="true"', 'data-styled-version="5.3.6"'].filter(Boolean).join(' ') + '>' + t + '</style>'
        }),
          (this.getStyleTags = function () {
            return e.sealed ? j$1(2) : e._emitSheetCSS()
          }),
          (this.getStyleElement = function () {
            var t
            if (e.sealed) return j$1(2)
            var n = (((t = {})[A$2] = ''), (t['data-styled-version'] = '5.3.6'), (t.dangerouslySetInnerHTML = { __html: e.instance.toString() }), t),
              o = q()
            return o && (n.nonce = o), [React__default['default'].createElement('style', v$2({}, n, { key: 'sc-0-0' }))]
          }),
          (this.seal = function () {
            e.sealed = !0
          }),
          (this.instance = new Z$1({ isServer: !0 })),
          (this.sealed = !1)
      }
      var t = e.prototype
      return (
        (t.collectStyles = function (e) {
          return this.sealed ? j$1(2) : React__default['default'].createElement(ye$1, { sheet: this.instance }, e)
        }),
        (t.interleaveWithNodeStream = function (e) {
          return j$1(3)
        }),
        e
      )
    })(),
    Xe$1 = function (e) {
      var t = React__default['default'].forwardRef(function (t, n) {
        var o = React$1.useContext(Ge$1),
          i = e.defaultProps,
          a = Re$1(t, o, i)
        return React__default['default'].createElement(e, v$2({}, t, { theme: a, ref: n }))
      })
      return hoistNonReactStatics_cjs(t, e), (t.displayName = 'WithTheme(' + _(e) + ')'), t
    },
    Ze$1 = function () {
      return React$1.useContext(Ge$1)
    },
    Ke$1 = { StyleSheet: Z$1, masterSheet: he$1 }
  var He$2 = He$1

  var styledComponents_browser_esm = /*#__PURE__*/ Object.freeze({
    __proto__: null,
    default: He$2,
    ServerStyleSheet: Je$1,
    StyleSheetConsumer: le$1,
    StyleSheetContext: ue$1,
    StyleSheetManager: ye$1,
    ThemeConsumer: Le$1,
    ThemeContext: Ge$1,
    ThemeProvider: Fe$1,
    __PRIVATE__: Ke$1,
    createGlobalStyle: We$1,
    css: Ce$1,
    isStyledComponent: N$1,
    keyframes: Ue$1,
    useTheme: Ze$1,
    version: C$1,
    withTheme: Xe$1,
  })

  var index_cjs = {}

  var require$$1 = /*@__PURE__*/ getAugmentedNamespace(styledComponents_browser_esm)

  ;(function (exports) {
    Object.defineProperty(exports, '__esModule', { value: !0 })
    var e = React__default['default'],
      t = require$$1
    function n(e) {
      return e && 'object' == typeof e && 'default' in e ? e : { default: e }
    }
    function o(e) {
      if (e && e.__esModule) return e
      var t = Object.create(null)
      return (
        e &&
          Object.keys(e).forEach(function (n) {
            if ('default' !== n) {
              var o = Object.getOwnPropertyDescriptor(e, n)
              Object.defineProperty(
                t,
                n,
                o.get
                  ? o
                  : {
                      enumerable: !0,
                      get: function () {
                        return e[n]
                      },
                    },
              )
            }
          }),
        (t.default = e),
        Object.freeze(t)
      )
    }
    var a,
      l = o(e),
      r = n(e),
      i = n(t)
    function s(e, t) {
      return e[t]
    }
    function d(e, t) {
      return t.split('.').reduce((e, t) => {
        const n = t.match(/[^\]\\[.]+/g)
        if (n && n.length > 1) for (let t = 0; t < n.length; t++) return e[n[t]][n[t + 1]]
        return e[t]
      }, e)
    }
    function c(e = [], t, n = 0) {
      return [...e.slice(0, n), t, ...e.slice(n)]
    }
    function g(e = [], t, n = 'id') {
      const o = e.slice(),
        a = s(t, n)
      return (
        a
          ? o.splice(
              o.findIndex((e) => s(e, n) === a),
              1,
            )
          : o.splice(
              o.findIndex((e) => e === t),
              1,
            ),
        o
      )
    }
    function u(e) {
      return e.map((e, t) => {
        const n = Object.assign(Object.assign({}, e), { sortable: e.sortable || !!e.sortFunction || void 0 })
        return e.id || (n.id = t + 1), n
      })
    }
    function p(e, t) {
      return Math.ceil(e / t)
    }
    function b(e, t) {
      return Math.min(e, t)
    }
    !(function (e) {
      ;(e.ASC = 'asc'), (e.DESC = 'desc')
    })(a || (a = {}))
    const m = () => null
    function f(e, t = [], n = []) {
      let o = {},
        a = [...n]
      return (
        t.length &&
          t.forEach((t) => {
            if (!t.when || 'function' != typeof t.when) throw new Error('"when" must be defined in the conditional style object and must be function')
            t.when(e) && ((o = t.style || {}), t.classNames && (a = [...a, ...t.classNames]), 'function' == typeof t.style && (o = t.style(e) || {}))
          }),
        { style: o, classNames: a.join(' ') }
      )
    }
    function h(e, t = [], n = 'id') {
      const o = s(e, n)
      return o ? t.some((e) => s(e, n) === o) : t.some((t) => t === e)
    }
    function w(e, t) {
      return t ? e.findIndex((e) => x(e.id, t)) : -1
    }
    function x(e, t) {
      return e == t
    }
    function C(e, t) {
      const n = !e.toggleOnSelectedRowsChange
      switch (t.type) {
        case 'SELECT_ALL_ROWS': {
          const { keyField: n, rows: o, rowCount: a, mergeSelections: l } = t,
            r = !e.allSelected,
            i = !e.toggleOnSelectedRowsChange
          if (l) {
            const t = r ? [...e.selectedRows, ...o.filter((t) => !h(t, e.selectedRows, n))] : e.selectedRows.filter((e) => !h(e, o, n))
            return Object.assign(Object.assign({}, e), { allSelected: r, selectedCount: t.length, selectedRows: t, toggleOnSelectedRowsChange: i })
          }
          return Object.assign(Object.assign({}, e), { allSelected: r, selectedCount: r ? a : 0, selectedRows: r ? o : [], toggleOnSelectedRowsChange: i })
        }
        case 'SELECT_SINGLE_ROW': {
          const { keyField: o, row: a, isSelected: l, rowCount: r, singleSelect: i } = t
          return i
            ? l
              ? Object.assign(Object.assign({}, e), { selectedCount: 0, allSelected: !1, selectedRows: [], toggleOnSelectedRowsChange: n })
              : Object.assign(Object.assign({}, e), { selectedCount: 1, allSelected: !1, selectedRows: [a], toggleOnSelectedRowsChange: n })
            : l
            ? Object.assign(Object.assign({}, e), {
                selectedCount: e.selectedRows.length > 0 ? e.selectedRows.length - 1 : 0,
                allSelected: !1,
                selectedRows: g(e.selectedRows, a, o),
                toggleOnSelectedRowsChange: n,
              })
            : Object.assign(Object.assign({}, e), {
                selectedCount: e.selectedRows.length + 1,
                allSelected: e.selectedRows.length + 1 === r,
                selectedRows: c(e.selectedRows, a),
                toggleOnSelectedRowsChange: n,
              })
        }
        case 'SELECT_MULTIPLE_ROWS': {
          const { keyField: o, selectedRows: a, totalRows: l, mergeSelections: r } = t
          if (r) {
            const t = [...e.selectedRows, ...a.filter((t) => !h(t, e.selectedRows, o))]
            return Object.assign(Object.assign({}, e), { selectedCount: t.length, allSelected: !1, selectedRows: t, toggleOnSelectedRowsChange: n })
          }
          return Object.assign(Object.assign({}, e), { selectedCount: a.length, allSelected: a.length === l, selectedRows: a, toggleOnSelectedRowsChange: n })
        }
        case 'CLEAR_SELECTED_ROWS': {
          const { selectedRowsFlag: n } = t
          return Object.assign(Object.assign({}, e), { allSelected: !1, selectedCount: 0, selectedRows: [], selectedRowsFlag: n })
        }
        case 'SORT_CHANGE': {
          const { sortDirection: o, selectedColumn: a, clearSelectedOnSort: l } = t
          return Object.assign(
            Object.assign(Object.assign({}, e), { selectedColumn: a, sortDirection: o, currentPage: 1 }),
            l && { allSelected: !1, selectedCount: 0, selectedRows: [], toggleOnSelectedRowsChange: n },
          )
        }
        case 'CHANGE_PAGE': {
          const { page: o, paginationServer: a, visibleOnly: l, persistSelectedOnPageChange: r } = t,
            i = a && r,
            s = (a && !r) || l
          return Object.assign(
            Object.assign(Object.assign(Object.assign({}, e), { currentPage: o }), i && { allSelected: !1 }),
            s && { allSelected: !1, selectedCount: 0, selectedRows: [], toggleOnSelectedRowsChange: n },
          )
        }
        case 'CHANGE_ROWS_PER_PAGE': {
          const { rowsPerPage: n, page: o } = t
          return Object.assign(Object.assign({}, e), { currentPage: o, rowsPerPage: n })
        }
      }
    }
    const y = t.css`
	pointer-events: none;
	opacity: 0.4;
`,
      v = i.default.div`
	position: relative;
	box-sizing: border-box;
	display: flex;
	flex-direction: column;
	width: 100%;
	height: 100%;
	max-width: 100%;
	${({ disabled: e }) => e && y};
	${({ theme: e }) => e.table.style};
`,
      R = t.css`
	position: sticky;
	position: -webkit-sticky; /* Safari */
	top: 0;
	z-index: 1;
`,
      S = i.default.div`
	display: flex;
	width: 100%;
	${({ fixedHeader: e }) => e && R};
	${({ theme: e }) => e.head.style};
`,
      E = i.default.div`
	display: flex;
	align-items: stretch;
	width: 100%;
	${({ theme: e }) => e.headRow.style};
	${({ dense: e, theme: t }) => e && t.headRow.denseStyle};
`,
      O = (e, ...n) => t.css`
		@media screen and (max-width: ${599}px) {
			${t.css(e, ...n)}
		}
	`,
      P = (e, ...n) => t.css`
		@media screen and (max-width: ${959}px) {
			${t.css(e, ...n)}
		}
	`,
      k = (e, ...n) => t.css`
		@media screen and (max-width: ${1280}px) {
			${t.css(e, ...n)}
		}
	`,
      D =
        (e) =>
        (n, ...o) =>
          t.css`
				@media screen and (max-width: ${e}px) {
					${t.css(n, ...o)}
				}
			`,
      H = i.default.div`
	position: relative;
	display: flex;
	align-items: center;
	box-sizing: border-box;
	line-height: normal;
	${({ theme: e, headCell: t }) => e[t ? 'headCells' : 'cells'].style};
	${({ noPadding: e }) => e && 'padding: 0'};
`,
      $ = i.default(H)`
	flex-grow: ${({ button: e, grow: t }) => (0 === t || e ? 0 : t || 1)};
	flex-shrink: 0;
	flex-basis: 0;
	max-width: ${({ maxWidth: e }) => e || '100%'};
	min-width: ${({ minWidth: e }) => e || '100px'};
	${({ width: e }) =>
    e &&
    t.css`
			min-width: ${e};
			max-width: ${e};
		`};
	${({ right: e }) => e && 'justify-content: flex-end'};
	${({ button: e, center: t }) => (t || e) && 'justify-content: center'};
	${({ compact: e, button: t }) => (e || t) && 'padding: 0'};

	/* handle hiding cells */
	${({ hide: e }) =>
    e &&
    'sm' === e &&
    O`
    display: none;
  `};
	${({ hide: e }) =>
    e &&
    'md' === e &&
    P`
    display: none;
  `};
	${({ hide: e }) =>
    e &&
    'lg' === e &&
    k`
    display: none;
  `};
	${({ hide: e }) =>
    e &&
    Number.isInteger(e) &&
    D(e)`
    display: none;
  `};
`,
      j = t.css`
	div:first-child {
		white-space: ${({ wrapCell: e }) => (e ? 'normal' : 'nowrap')};
		overflow: ${({ allowOverflow: e }) => (e ? 'visible' : 'hidden')};
		text-overflow: ellipsis;
	}
`,
      F = i.default($).attrs((e) => ({ style: e.style }))`
	${({ renderAsCell: e }) => !e && j};
	${({ theme: e, isDragging: t }) => t && e.cells.draggingStyle};
	${({ cellStyle: e }) => e};
`
    var T = l.memo(function ({ id: e, column: t, row: n, rowIndex: o, dataTag: a, isDragging: r, onDragStart: i, onDragOver: s, onDragEnd: c, onDragEnter: g, onDragLeave: u }) {
      const { style: p, classNames: b } = f(n, t.conditionalCellStyles, ['rdt_TableCell'])
      return l.createElement(
        F,
        {
          id: e,
          'data-column-id': t.id,
          role: 'cell',
          className: b,
          'data-tag': a,
          cellStyle: t.style,
          renderAsCell: !!t.cell,
          allowOverflow: t.allowOverflow,
          button: t.button,
          center: t.center,
          compact: t.compact,
          grow: t.grow,
          hide: t.hide,
          maxWidth: t.maxWidth,
          minWidth: t.minWidth,
          right: t.right,
          width: t.width,
          wrapCell: t.wrap,
          style: p,
          isDragging: r,
          onDragStart: i,
          onDragOver: s,
          onDragEnd: c,
          onDragEnter: g,
          onDragLeave: u,
        },
        !t.cell &&
          l.createElement(
            'div',
            { 'data-tag': a },
            (function (e, t, n, o) {
              if (!t) return null
              if ('string' != typeof t && 'function' != typeof t) throw new Error('selector must be a . delimited string eg (my.property) or function (e.g. row => row.field')
              return n && 'function' == typeof n ? n(e, o) : t && 'function' == typeof t ? t(e, o) : d(e, t)
            })(n, t.selector, t.format, o),
          ),
        t.cell && t.cell(n, o, t, e),
      )
    })
    var I = l.memo(function ({ name: e, component: t = 'input', componentOptions: n = { style: {} }, indeterminate: o = !1, checked: a = !1, disabled: r = !1, onClick: i = m }) {
      const s = t,
        d =
          'input' !== s
            ? n.style
            : ((e) =>
                Object.assign(Object.assign({ fontSize: '18px' }, !e && { cursor: 'pointer' }), { padding: 0, marginTop: '1px', verticalAlign: 'middle', position: 'relative' }))(
                r,
              ),
        c = l.useMemo(
          () =>
            (function (e, ...t) {
              let n
              return (
                Object.keys(e)
                  .map((t) => e[t])
                  .forEach((o, a) => {
                    const l = e
                    'function' == typeof o && (n = Object.assign(Object.assign({}, l), { [Object.keys(e)[a]]: o(...t) }))
                  }),
                n || e
              )
            })(n, o),
          [n, o],
        )
      return l.createElement(
        s,
        Object.assign(
          {
            type: 'checkbox',
            ref: (e) => {
              e && (e.indeterminate = o)
            },
            style: d,
            onClick: r ? m : i,
            name: e,
            'aria-label': e,
            checked: a,
            disabled: r,
          },
          c,
          { onChange: m },
        ),
      )
    })
    const M = i.default(H)`
	flex: 0 0 48px;
	min-width: 48px;
	justify-content: center;
	align-items: center;
	user-select: none;
	white-space: nowrap;
`
    function A({
      name: e,
      keyField: t,
      row: n,
      rowCount: o,
      selected: a,
      selectableRowsComponent: r,
      selectableRowsComponentProps: i,
      selectableRowsSingle: s,
      selectableRowDisabled: d,
      onSelectedRow: c,
    }) {
      const g = !(!d || !d(n))
      return l.createElement(
        M,
        { onClick: (e) => e.stopPropagation(), className: 'rdt_TableCell', noPadding: !0 },
        l.createElement(I, {
          name: e,
          component: r,
          componentOptions: i,
          checked: a,
          'aria-checked': a,
          onClick: () => {
            c({ type: 'SELECT_SINGLE_ROW', row: n, isSelected: a, keyField: t, rowCount: o, singleSelect: s })
          },
          disabled: g,
        }),
      )
    }
    const L = i.default.button`
	display: inline-flex;
	align-items: center;
	user-select: none;
	white-space: nowrap;
	border: none;
	background-color: transparent;
	${({ theme: e }) => e.expanderButton.style};
`
    function _({ disabled: e = !1, expanded: t = !1, expandableIcon: n, id: o, row: a, onToggled: r }) {
      const i = t ? n.expanded : n.collapsed
      return l.createElement(
        L,
        {
          'aria-disabled': e,
          onClick: () => r && r(a),
          'data-testid': `expander-button-${o}`,
          disabled: e,
          'aria-label': t ? 'Collapse Row' : 'Expand Row',
          role: 'button',
          type: 'button',
        },
        i,
      )
    }
    const z = i.default(H)`
	white-space: nowrap;
	font-weight: 400;
	min-width: 48px;
	${({ theme: e }) => e.expanderCell.style};
`
    function N({ row: e, expanded: t = !1, expandableIcon: n, id: o, onToggled: a, disabled: r = !1 }) {
      return l.createElement(
        z,
        { onClick: (e) => e.stopPropagation(), noPadding: !0 },
        l.createElement(_, { id: o, row: e, expanded: t, expandableIcon: n, disabled: r, onToggled: a }),
      )
    }
    const W = i.default.div`
	width: 100%;
	box-sizing: border-box;
	${({ theme: e }) => e.expanderRow.style};
	${({ extendedRowStyle: e }) => e};
`
    var B = l.memo(function ({ data: e, ExpanderComponent: t, expanderComponentProps: n, extendedRowStyle: o, extendedClassNames: a }) {
      const r = ['rdt_ExpanderRow', ...a.split(' ').filter((e) => 'rdt_TableRow' !== e)].join(' ')
      return l.createElement(W, { className: r, extendedRowStyle: o }, l.createElement(t, Object.assign({ data: e }, n)))
    })
    var G, V, U
    ;(exports.Direction = void 0),
      ((G = exports.Direction || (exports.Direction = {})).LTR = 'ltr'),
      (G.RTL = 'rtl'),
      (G.AUTO = 'auto'),
      (exports.Alignment = void 0),
      ((V = exports.Alignment || (exports.Alignment = {})).LEFT = 'left'),
      (V.RIGHT = 'right'),
      (V.CENTER = 'center'),
      (exports.Media = void 0),
      ((U = exports.Media || (exports.Media = {})).SM = 'sm'),
      (U.MD = 'md'),
      (U.LG = 'lg')
    const q = t.css`
	&:hover {
		${({ highlightOnHover: e, theme: t }) => e && t.rows.highlightOnHoverStyle};
	}
`,
      Y = t.css`
	&:hover {
		cursor: pointer;
	}
`,
      K = i.default.div.attrs((e) => ({ style: e.style }))`
	display: flex;
	align-items: stretch;
	align-content: stretch;
	width: 100%;
	box-sizing: border-box;
	${({ theme: e }) => e.rows.style};
	${({ dense: e, theme: t }) => e && t.rows.denseStyle};
	${({ striped: e, theme: t }) => e && t.rows.stripedStyle};
	${({ highlightOnHover: e }) => e && q};
	${({ pointerOnHover: e }) => e && Y};
	${({ selected: e, theme: t }) => e && t.rows.selectedHighlightStyle};
`
    function J({
      columns: e = [],
      conditionalRowStyles: t = [],
      defaultExpanded: n = !1,
      defaultExpanderDisabled: o = !1,
      dense: a = !1,
      expandableIcon: r,
      expandableRows: i = !1,
      expandableRowsComponent: d,
      expandableRowsComponentProps: c,
      expandableRowsHideExpander: g,
      expandOnRowClicked: u = !1,
      expandOnRowDoubleClicked: p = !1,
      highlightOnHover: b = !1,
      id: h,
      expandableInheritConditionalStyles: w,
      keyField: C,
      onRowClicked: y = m,
      onRowDoubleClicked: v = m,
      onRowMouseEnter: R = m,
      onRowMouseLeave: S = m,
      onRowExpandToggled: E = m,
      onSelectedRow: O = m,
      pointerOnHover: P = !1,
      row: k,
      rowCount: D,
      rowIndex: H,
      selectableRowDisabled: $ = null,
      selectableRows: j = !1,
      selectableRowsComponent: F,
      selectableRowsComponentProps: I,
      selectableRowsHighlight: M = !1,
      selectableRowsSingle: L = !1,
      selected: _,
      striped: z = !1,
      draggingColumnId: W,
      onDragStart: G,
      onDragOver: V,
      onDragEnd: U,
      onDragEnter: q,
      onDragLeave: Y,
    }) {
      const [J, Q] = l.useState(n)
      l.useEffect(() => {
        Q(n)
      }, [n])
      const X = l.useCallback(() => {
          Q(!J), E(!J, k)
        }, [J, E, k]),
        Z = P || (i && (u || p)),
        ee = l.useCallback(
          (e) => {
            e.target && 'allowRowEvents' === e.target.getAttribute('data-tag') && (y(k, e), !o && i && u && X())
          },
          [o, u, i, X, y, k],
        ),
        te = l.useCallback(
          (e) => {
            e.target && 'allowRowEvents' === e.target.getAttribute('data-tag') && (v(k, e), !o && i && p && X())
          },
          [o, p, i, X, v, k],
        ),
        ne = l.useCallback(
          (e) => {
            R(k, e)
          },
          [R, k],
        ),
        oe = l.useCallback(
          (e) => {
            S(k, e)
          },
          [S, k],
        ),
        ae = s(k, C),
        { style: le, classNames: re } = f(k, t, ['rdt_TableRow']),
        ie = M && _,
        se = w ? le : {},
        de = z && H % 2 == 0
      return l.createElement(
        l.Fragment,
        null,
        l.createElement(
          K,
          {
            id: `row-${h}`,
            role: 'row',
            striped: de,
            highlightOnHover: b,
            pointerOnHover: !o && Z,
            dense: a,
            onClick: ee,
            onDoubleClick: te,
            onMouseEnter: ne,
            onMouseLeave: oe,
            className: re,
            selected: ie,
            style: le,
          },
          j &&
            l.createElement(A, {
              name: `select-row-${ae}`,
              keyField: C,
              row: k,
              rowCount: D,
              selected: _,
              selectableRowsComponent: F,
              selectableRowsComponentProps: I,
              selectableRowDisabled: $,
              selectableRowsSingle: L,
              onSelectedRow: O,
            }),
          i && !g && l.createElement(N, { id: ae, expandableIcon: r, expanded: J, row: k, onToggled: X, disabled: o }),
          e.map((e) =>
            e.omit
              ? null
              : l.createElement(T, {
                  id: `cell-${e.id}-${ae}`,
                  key: `cell-${e.id}-${ae}`,
                  dataTag: e.ignoreRowClick || e.button ? null : 'allowRowEvents',
                  column: e,
                  row: k,
                  rowIndex: H,
                  isDragging: x(W, e.id),
                  onDragStart: G,
                  onDragOver: V,
                  onDragEnd: U,
                  onDragEnter: q,
                  onDragLeave: Y,
                }),
          ),
        ),
        i && J && l.createElement(B, { key: `expander-${ae}`, data: k, extendedRowStyle: se, extendedClassNames: re, ExpanderComponent: d, expanderComponentProps: c }),
      )
    }
    const Q = i.default.span`
	padding: 2px;
	color: inherit;
	flex-grow: 0;
	flex-shrink: 0;
	${({ sortActive: e }) => (e ? 'opacity: 1' : 'opacity: 0')};
	${({ sortDirection: e }) => 'desc' === e && 'transform: rotate(180deg)'};
`,
      X = ({ sortActive: e, sortDirection: t }) => r.default.createElement(Q, { sortActive: e, sortDirection: t }, '▲'),
      Z = i.default($)`
	${({ button: e }) => e && 'text-align: center'};
	${({ theme: e, isDragging: t }) => t && e.headCells.draggingStyle};
`,
      ee = t.css`
	cursor: pointer;
	span.__rdt_custom_sort_icon__ {
		i,
		svg {
			transform: 'translate3d(0, 0, 0)';
			${({ sortActive: e }) => (e ? 'opacity: 1' : 'opacity: 0')};
			color: inherit;
			font-size: 18px;
			height: 18px;
			width: 18px;
			backface-visibility: hidden;
			transform-style: preserve-3d;
			transition-duration: 95ms;
			transition-property: transform;
		}

		&.asc i,
		&.asc svg {
			transform: rotate(180deg);
		}
	}

	${({ sortActive: e }) =>
    !e &&
    t.css`
			&:hover,
			&:focus {
				opacity: 0.7;

				span,
				span.__rdt_custom_sort_icon__ * {
					opacity: 0.7;
				}
			}
		`};
`,
      te = i.default.div`
	display: inline-flex;
	align-items: center;
	justify-content: inherit;
	height: 100%;
	width: 100%;
	outline: none;
	user-select: none;
	overflow: hidden;
	${({ disabled: e }) => !e && ee};
`,
      ne = i.default.div`
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
`
    var oe = l.memo(function ({
      column: e,
      disabled: t,
      draggingColumnId: n,
      selectedColumn: o = {},
      sortDirection: r,
      sortIcon: i,
      sortServer: s,
      pagination: d,
      paginationServer: c,
      persistSelectedOnSort: g,
      selectableRowsVisibleOnly: u,
      onSort: p,
      onDragStart: b,
      onDragOver: m,
      onDragEnd: f,
      onDragEnter: h,
      onDragLeave: w,
    }) {
      l.useEffect(() => {
        'string' == typeof e.selector &&
          console.error(
            `Warning: ${e.selector} is a string based column selector which has been deprecated as of v7 and will be removed in v8. Instead, use a selector function e.g. row => row[field]...`,
          )
      }, [])
      const [C, y] = l.useState(!1),
        v = l.useRef(null)
      if (
        (l.useEffect(() => {
          v.current && y(v.current.scrollWidth > v.current.clientWidth)
        }, [C]),
        e.omit)
      )
        return null
      const R = () => {
          if (!e.sortable && !e.selector) return
          let t = r
          x(o.id, e.id) && (t = r === a.ASC ? a.DESC : a.ASC), p({ type: 'SORT_CHANGE', sortDirection: t, selectedColumn: e, clearSelectedOnSort: (d && c && !g) || s || u })
        },
        S = (e) => l.createElement(X, { sortActive: e, sortDirection: r }),
        E = () => l.createElement('span', { className: [r, '__rdt_custom_sort_icon__'].join(' ') }, i),
        O = !(!e.sortable || !x(o.id, e.id)),
        P = !e.sortable || t,
        k = e.sortable && !i && !e.right,
        D = e.sortable && !i && e.right,
        H = e.sortable && i && !e.right,
        $ = e.sortable && i && e.right
      return l.createElement(
        Z,
        {
          'data-column-id': e.id,
          className: 'rdt_TableCol',
          headCell: !0,
          allowOverflow: e.allowOverflow,
          button: e.button,
          compact: e.compact,
          grow: e.grow,
          hide: e.hide,
          maxWidth: e.maxWidth,
          minWidth: e.minWidth,
          right: e.right,
          center: e.center,
          width: e.width,
          draggable: e.reorder,
          isDragging: x(e.id, n),
          onDragStart: b,
          onDragOver: m,
          onDragEnd: f,
          onDragEnter: h,
          onDragLeave: w,
        },
        e.name &&
          l.createElement(
            te,
            {
              'data-column-id': e.id,
              'data-sort-id': e.id,
              role: 'columnheader',
              tabIndex: 0,
              className: 'rdt_TableCol_Sortable',
              onClick: P ? void 0 : R,
              onKeyPress: P
                ? void 0
                : (e) => {
                    'Enter' === e.key && R()
                  },
              sortActive: !P && O,
              disabled: P,
            },
            !P && $ && E(),
            !P && D && S(O),
            'string' == typeof e.name ? l.createElement(ne, { title: C ? e.name : void 0, ref: v, 'data-column-id': e.id }, e.name) : e.name,
            !P && H && E(),
            !P && k && S(O),
          ),
      )
    })
    const ae = i.default(H)`
	flex: 0 0 48px;
	justify-content: center;
	align-items: center;
	user-select: none;
	white-space: nowrap;
	font-size: unset;
`
    function le({
      headCell: e = !0,
      rowData: t,
      keyField: n,
      allSelected: o,
      mergeSelections: a,
      selectedRows: r,
      selectableRowsComponent: i,
      selectableRowsComponentProps: s,
      selectableRowDisabled: d,
      onSelectAllRows: c,
    }) {
      const g = r.length > 0 && !o,
        u = d ? t.filter((e) => !d(e)) : t,
        p = 0 === u.length,
        b = Math.min(t.length, u.length)
      return l.createElement(
        ae,
        { className: 'rdt_TableCol', headCell: e, noPadding: !0 },
        l.createElement(I, {
          name: 'select-all-rows',
          component: i,
          componentOptions: s,
          onClick: () => {
            c({ type: 'SELECT_ALL_ROWS', rows: u, rowCount: b, mergeSelections: a, keyField: n })
          },
          checked: o,
          indeterminate: g,
          disabled: p,
        }),
      )
    }
    function re(e = exports.Direction.AUTO) {
      const t = 'object' == typeof window,
        [n, o] = l.useState(!1)
      return (
        l.useEffect(() => {
          if (t)
            if ('auto' !== e) o('rtl' === e)
            else {
              const e = !(!window.document || !window.document.createElement),
                t = document.getElementsByTagName('BODY')[0],
                n = document.getElementsByTagName('HTML')[0],
                a = 'rtl' === t.dir || 'rtl' === n.dir
              o(e && a)
            }
        }, [e, t]),
        n
      )
    }
    const ie = i.default.div`
	display: flex;
	align-items: center;
	flex: 1 0 auto;
	height: 100%;
	color: ${({ theme: e }) => e.contextMenu.fontColor};
	font-size: ${({ theme: e }) => e.contextMenu.fontSize};
	font-weight: 400;
`,
      se = i.default.div`
	display: flex;
	align-items: center;
	justify-content: flex-end;
	flex-wrap: wrap;
`,
      de = i.default.div`
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	box-sizing: inherit;
	z-index: 1;
	align-items: center;
	justify-content: space-between;
	display: flex;
	${({ rtl: e }) => e && 'direction: rtl'};
	${({ theme: e }) => e.contextMenu.style};
	${({ theme: e, visible: t }) => t && e.contextMenu.activeStyle};
`
    function ce({ contextMessage: e, contextActions: t, contextComponent: n, selectedCount: o, direction: a }) {
      const r = re(a),
        i = o > 0
      return n
        ? l.createElement(de, { visible: i }, l.cloneElement(n, { selectedCount: o }))
        : l.createElement(
            de,
            { visible: i, rtl: r },
            l.createElement(
              ie,
              null,
              ((e, t, n) => {
                if (0 === t) return null
                const o = 1 === t ? e.singular : e.plural
                return n ? `${t} ${e.message || ''} ${o}` : `${t} ${o} ${e.message || ''}`
              })(e, o, r),
            ),
            l.createElement(se, null, t),
          )
    }
    const ge = i.default.div`
	position: relative;
	box-sizing: border-box;
	overflow: hidden;
	display: flex;
	flex: 1 1 auto;
	align-items: center;
	justify-content: space-between;
	width: 100%;
	flex-wrap: wrap;
	${({ theme: e }) => e.header.style}
`,
      ue = i.default.div`
	flex: 1 0 auto;
	color: ${({ theme: e }) => e.header.fontColor};
	font-size: ${({ theme: e }) => e.header.fontSize};
	font-weight: 400;
`,
      pe = i.default.div`
	flex: 1 0 auto;
	display: flex;
	align-items: center;
	justify-content: flex-end;

	> * {
		margin-left: 5px;
	}
`,
      be = ({ title: e, actions: t = null, contextMessage: n, contextActions: o, contextComponent: a, selectedCount: r, direction: i, showMenu: s = !0 }) =>
        l.createElement(
          ge,
          { className: 'rdt_TableHeader', role: 'heading', 'aria-level': 1 },
          l.createElement(ue, null, e),
          t && l.createElement(pe, null, t),
          s && l.createElement(ce, { contextMessage: n, contextActions: o, contextComponent: a, direction: i, selectedCount: r }),
        )
    /*! *****************************************************************************
	Copyright (c) Microsoft Corporation.

	Permission to use, copy, modify, and/or distribute this software for any
	purpose with or without fee is hereby granted.

	THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
	REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
	AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
	INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
	LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
	OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
	PERFORMANCE OF THIS SOFTWARE.
	***************************************************************************** */ function me(e, t) {
      var n = {}
      for (var o in e) Object.prototype.hasOwnProperty.call(e, o) && t.indexOf(o) < 0 && (n[o] = e[o])
      if (null != e && 'function' == typeof Object.getOwnPropertySymbols) {
        var a = 0
        for (o = Object.getOwnPropertySymbols(e); a < o.length; a++) t.indexOf(o[a]) < 0 && Object.prototype.propertyIsEnumerable.call(e, o[a]) && (n[o[a]] = e[o[a]])
      }
      return n
    }
    const fe = { left: 'flex-start', right: 'flex-end', center: 'center' },
      he = i.default.header`
	position: relative;
	display: flex;
	flex: 1 1 auto;
	box-sizing: border-box;
	align-items: center;
	padding: 4px 16px 4px 24px;
	width: 100%;
	justify-content: ${({ align: e }) => fe[e]};
	flex-wrap: ${({ wrapContent: e }) => (e ? 'wrap' : 'nowrap')};
	${({ theme: e }) => e.subHeader.style}
`,
      we = (e) => {
        var { align: t = 'right', wrapContent: n = !0 } = e,
          o = me(e, ['align', 'wrapContent'])
        return l.createElement(he, Object.assign({ align: t, wrapContent: n }, o))
      },
      xe = i.default.div`
	display: flex;
	flex-direction: column;
`,
      Ce = i.default.div`
	position: relative;
	width: 100%;
	border-radius: inherit;
	${({ responsive: e, fixedHeader: n }) =>
    e &&
    t.css`
			overflow-x: auto;

			// hidden prevents vertical scrolling in firefox when fixedHeader is disabled
			overflow-y: ${n ? 'auto' : 'hidden'};
			min-height: 0;
		`};

	${({ fixedHeader: e = !1, fixedHeaderScrollHeight: n = '100vh' }) =>
    e &&
    t.css`
			max-height: ${n};
			-webkit-overflow-scrolling: touch;
		`};

	${({ theme: e }) => e.responsiveWrapper.style};
`,
      ye = i.default.div`
	position: relative;
	box-sizing: border-box;
	width: 100%;
	height: 100%;
	${(e) => e.theme.progress.style};
`,
      ve = i.default.div`
	position: relative;
	width: 100%;
	${({ theme: e }) => e.tableWrapper.style};
`,
      Re = i.default(H)`
	white-space: nowrap;
	${({ theme: e }) => e.expanderCell.style};
`,
      Se = i.default.div`
	box-sizing: border-box;
	width: 100%;
	height: 100%;
	${({ theme: e }) => e.noData.style};
`,
      Ee = () =>
        r.default.createElement(
          'svg',
          { xmlns: 'http://www.w3.org/2000/svg', width: '24', height: '24', viewBox: '0 0 24 24' },
          r.default.createElement('path', { d: 'M7 10l5 5 5-5z' }),
          r.default.createElement('path', { d: 'M0 0h24v24H0z', fill: 'none' }),
        ),
      Oe = i.default.select`
	cursor: pointer;
	height: 24px;
	max-width: 100%;
	user-select: none;
	padding-left: 8px;
	padding-right: 24px;
	box-sizing: content-box;
	font-size: inherit;
	color: inherit;
	border: none;
	background-color: transparent;
	appearance: none;
	direction: ltr;
	flex-shrink: 0;

	&::-ms-expand {
		display: none;
	}

	&:disabled::-ms-expand {
		background: #f60;
	}

	option {
		color: initial;
	}
`,
      Pe = i.default.div`
	position: relative;
	flex-shrink: 0;
	font-size: inherit;
	color: inherit;
	margin-top: 1px;

	svg {
		top: 0;
		right: 0;
		color: inherit;
		position: absolute;
		fill: currentColor;
		width: 24px;
		height: 24px;
		display: inline-block;
		user-select: none;
		pointer-events: none;
	}
`,
      ke = (e) => {
        var { defaultValue: t, onChange: n } = e,
          o = me(e, ['defaultValue', 'onChange'])
        return l.createElement(Pe, null, l.createElement(Oe, Object.assign({ onChange: n, defaultValue: t }, o)), l.createElement(Ee, null))
      },
      De = {
        columns: [],
        data: [],
        title: '',
        keyField: 'id',
        selectableRows: !1,
        selectableRowsHighlight: !1,
        selectableRowsNoSelectAll: !1,
        selectableRowSelected: null,
        selectableRowDisabled: null,
        selectableRowsComponent: 'input',
        selectableRowsComponentProps: {},
        selectableRowsVisibleOnly: !1,
        selectableRowsSingle: !1,
        clearSelectedRows: !1,
        expandableRows: !1,
        expandableRowDisabled: null,
        expandableRowExpanded: null,
        expandOnRowClicked: !1,
        expandableRowsHideExpander: !1,
        expandOnRowDoubleClicked: !1,
        expandableInheritConditionalStyles: !1,
        expandableRowsComponent: function () {
          return r.default.createElement(
            'div',
            null,
            'To add an expander pass in a component instance via ',
            r.default.createElement('strong', null, 'expandableRowsComponent'),
            '. You can then access props.data from this component.',
          )
        },
        expandableIcon: {
          collapsed: r.default.createElement(
            () =>
              r.default.createElement(
                'svg',
                { fill: 'currentColor', height: '24', viewBox: '0 0 24 24', width: '24', xmlns: 'http://www.w3.org/2000/svg' },
                r.default.createElement('path', { d: 'M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z' }),
                r.default.createElement('path', { d: 'M0-.25h24v24H0z', fill: 'none' }),
              ),
            null,
          ),
          expanded: r.default.createElement(
            () =>
              r.default.createElement(
                'svg',
                { fill: 'currentColor', height: '24', viewBox: '0 0 24 24', width: '24', xmlns: 'http://www.w3.org/2000/svg' },
                r.default.createElement('path', { d: 'M7.41 7.84L12 12.42l4.59-4.58L18 9.25l-6 6-6-6z' }),
                r.default.createElement('path', { d: 'M0-.75h24v24H0z', fill: 'none' }),
              ),
            null,
          ),
        },
        expandableRowsComponentProps: {},
        progressPending: !1,
        progressComponent: r.default.createElement('div', { style: { fontSize: '24px', fontWeight: 700, padding: '24px' } }, 'Loading...'),
        persistTableHead: !1,
        sortIcon: null,
        sortFunction: null,
        sortServer: !1,
        striped: !1,
        highlightOnHover: !1,
        pointerOnHover: !1,
        noContextMenu: !1,
        contextMessage: { singular: 'item', plural: 'items', message: 'selected' },
        actions: null,
        contextActions: null,
        contextComponent: null,
        defaultSortFieldId: null,
        defaultSortAsc: !0,
        responsive: !0,
        noDataComponent: r.default.createElement('div', { style: { padding: '24px' } }, 'There are no records to display'),
        disabled: !1,
        noTableHead: !1,
        noHeader: !1,
        subHeader: !1,
        subHeaderAlign: exports.Alignment.RIGHT,
        subHeaderWrap: !0,
        subHeaderComponent: null,
        fixedHeader: !1,
        fixedHeaderScrollHeight: '100vh',
        pagination: !1,
        paginationServer: !1,
        paginationServerOptions: { persistSelectedOnSort: !1, persistSelectedOnPageChange: !1 },
        paginationDefaultPage: 1,
        paginationResetDefaultPage: !1,
        paginationTotalRows: 0,
        paginationPerPage: 10,
        paginationRowsPerPageOptions: [10, 15, 20, 25, 30],
        paginationComponent: null,
        paginationComponentOptions: {},
        paginationIconFirstPage: r.default.createElement(
          () =>
            r.default.createElement(
              'svg',
              { xmlns: 'http://www.w3.org/2000/svg', width: '24', height: '24', viewBox: '0 0 24 24', 'aria-hidden': 'true', role: 'presentation' },
              r.default.createElement('path', { d: 'M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z' }),
              r.default.createElement('path', { fill: 'none', d: 'M24 24H0V0h24v24z' }),
            ),
          null,
        ),
        paginationIconLastPage: r.default.createElement(
          () =>
            r.default.createElement(
              'svg',
              { xmlns: 'http://www.w3.org/2000/svg', width: '24', height: '24', viewBox: '0 0 24 24', 'aria-hidden': 'true', role: 'presentation' },
              r.default.createElement('path', { d: 'M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z' }),
              r.default.createElement('path', { fill: 'none', d: 'M0 0h24v24H0V0z' }),
            ),
          null,
        ),
        paginationIconNext: r.default.createElement(
          () =>
            r.default.createElement(
              'svg',
              { xmlns: 'http://www.w3.org/2000/svg', width: '24', height: '24', viewBox: '0 0 24 24', 'aria-hidden': 'true', role: 'presentation' },
              r.default.createElement('path', { d: 'M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z' }),
              r.default.createElement('path', { d: 'M0 0h24v24H0z', fill: 'none' }),
            ),
          null,
        ),
        paginationIconPrevious: r.default.createElement(
          () =>
            r.default.createElement(
              'svg',
              { xmlns: 'http://www.w3.org/2000/svg', width: '24', height: '24', viewBox: '0 0 24 24', 'aria-hidden': 'true', role: 'presentation' },
              r.default.createElement('path', { d: 'M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z' }),
              r.default.createElement('path', { d: 'M0 0h24v24H0z', fill: 'none' }),
            ),
          null,
        ),
        dense: !1,
        conditionalRowStyles: [],
        theme: 'default',
        customStyles: {},
        direction: exports.Direction.AUTO,
        onChangePage: m,
        onChangeRowsPerPage: m,
        onRowClicked: m,
        onRowDoubleClicked: m,
        onRowMouseEnter: m,
        onRowMouseLeave: m,
        onRowExpandToggled: m,
        onSelectedRowsChange: m,
        onSort: m,
        onColumnOrderChange: m,
      },
      He = { rowsPerPageText: 'Rows per page:', rangeSeparatorText: 'of', noRowsPerPage: !1, selectAllRowsItem: !1, selectAllRowsItemText: 'All' },
      $e = i.default.nav`
	display: flex;
	flex: 1 1 auto;
	justify-content: flex-end;
	align-items: center;
	box-sizing: border-box;
	padding-right: 8px;
	padding-left: 8px;
	width: 100%;
	${({ theme: e }) => e.pagination.style};
`,
      je = i.default.button`
	position: relative;
	display: block;
	user-select: none;
	border: none;
	${({ theme: e }) => e.pagination.pageButtonsStyle};
	${({ isRTL: e }) => e && 'transform: scale(-1, -1)'};
`,
      Fe = i.default.div`
	display: flex;
	align-items: center;
	border-radius: 4px;
	white-space: nowrap;
	${O`
    width: 100%;
    justify-content: space-around;
  `};
`,
      Te = i.default.span`
	flex-shrink: 1;
	user-select: none;
`,
      Ie = i.default(Te)`
	margin: 0 24px;
`,
      Me = i.default(Te)`
	margin: 0 4px;
`
    var Ae = l.memo(function ({
      rowsPerPage: e,
      rowCount: t,
      currentPage: n,
      direction: o = De.direction,
      paginationRowsPerPageOptions: a = De.paginationRowsPerPageOptions,
      paginationIconLastPage: r = De.paginationIconLastPage,
      paginationIconFirstPage: i = De.paginationIconFirstPage,
      paginationIconNext: s = De.paginationIconNext,
      paginationIconPrevious: d = De.paginationIconPrevious,
      paginationComponentOptions: c = De.paginationComponentOptions,
      onChangeRowsPerPage: g = De.onChangeRowsPerPage,
      onChangePage: u = De.onChangePage,
    }) {
      const b = (() => {
          const e = 'object' == typeof window
          function t() {
            return { width: e ? window.innerWidth : void 0, height: e ? window.innerHeight : void 0 }
          }
          const [n, o] = l.useState(t)
          return (
            l.useEffect(() => {
              if (!e) return () => null
              function n() {
                o(t())
              }
              return window.addEventListener('resize', n), () => window.removeEventListener('resize', n)
            }, []),
            n
          )
        })(),
        m = re(o),
        f = b.width && b.width > 599,
        h = p(t, e),
        w = n * e,
        x = w - e + 1,
        C = 1 === n,
        y = n === h,
        v = Object.assign(Object.assign({}, He), c),
        R = n === h ? `${x}-${t} ${v.rangeSeparatorText} ${t}` : `${x}-${w} ${v.rangeSeparatorText} ${t}`,
        S = l.useCallback(() => u(n - 1), [n, u]),
        E = l.useCallback(() => u(n + 1), [n, u]),
        O = l.useCallback(() => u(1), [u]),
        P = l.useCallback(() => u(p(t, e)), [u, t, e]),
        k = l.useCallback((e) => g(Number(e.target.value), n), [n, g]),
        D = a.map((e) => l.createElement('option', { key: e, value: e }, e))
      v.selectAllRowsItem && D.push(l.createElement('option', { key: -1, value: t }, v.selectAllRowsItemText))
      const H = l.createElement(ke, { onChange: k, defaultValue: e, 'aria-label': v.rowsPerPageText }, D)
      return l.createElement(
        $e,
        { className: 'rdt_Pagination' },
        !v.noRowsPerPage && f && l.createElement(l.Fragment, null, l.createElement(Me, null, v.rowsPerPageText), H),
        f && l.createElement(Ie, null, R),
        l.createElement(
          Fe,
          null,
          l.createElement(je, { id: 'pagination-first-page', type: 'button', 'aria-label': 'First Page', 'aria-disabled': C, onClick: O, disabled: C, isRTL: m }, i),
          l.createElement(je, { id: 'pagination-previous-page', type: 'button', 'aria-label': 'Previous Page', 'aria-disabled': C, onClick: S, disabled: C, isRTL: m }, d),
          !f && H,
          l.createElement(je, { id: 'pagination-next-page', type: 'button', 'aria-label': 'Next Page', 'aria-disabled': y, onClick: E, disabled: y, isRTL: m }, s),
          l.createElement(je, { id: 'pagination-last-page', type: 'button', 'aria-label': 'Last Page', 'aria-disabled': y, onClick: P, disabled: y, isRTL: m }, r),
        ),
      )
    })
    const Le = (e, t) => {
      const n = l.useRef(!0)
      l.useEffect(() => {
        n.current ? (n.current = !1) : e()
      }, t)
    }
    var _e = function (e) {
      return (
        (function (e) {
          return !!e && 'object' == typeof e
        })(e) &&
        !(function (e) {
          var t = Object.prototype.toString.call(e)
          return (
            '[object RegExp]' === t ||
            '[object Date]' === t ||
            (function (e) {
              return e.$$typeof === ze
            })(e)
          )
        })(e)
      )
    }
    var ze = 'function' == typeof Symbol && Symbol.for ? Symbol.for('react.element') : 60103
    function Ne(e, t) {
      return !1 !== t.clone && t.isMergeableObject(e) ? Ue(((n = e), Array.isArray(n) ? [] : {}), e, t) : e
      var n
    }
    function We(e, t, n) {
      return e.concat(t).map(function (e) {
        return Ne(e, n)
      })
    }
    function Be(e) {
      return Object.keys(e).concat(
        (function (e) {
          return Object.getOwnPropertySymbols
            ? Object.getOwnPropertySymbols(e).filter(function (t) {
                return e.propertyIsEnumerable(t)
              })
            : []
        })(e),
      )
    }
    function Ge(e, t) {
      try {
        return t in e
      } catch (e) {
        return !1
      }
    }
    function Ve(e, t, n) {
      var o = {}
      return (
        n.isMergeableObject(e) &&
          Be(e).forEach(function (t) {
            o[t] = Ne(e[t], n)
          }),
        Be(t).forEach(function (a) {
          ;(function (e, t) {
            return Ge(e, t) && !(Object.hasOwnProperty.call(e, t) && Object.propertyIsEnumerable.call(e, t))
          })(e, a) ||
            (Ge(e, a) && n.isMergeableObject(t[a])
              ? (o[a] = (function (e, t) {
                  if (!t.customMerge) return Ue
                  var n = t.customMerge(e)
                  return 'function' == typeof n ? n : Ue
                })(a, n)(e[a], t[a], n))
              : (o[a] = Ne(t[a], n)))
        }),
        o
      )
    }
    function Ue(e, t, n) {
      ;((n = n || {}).arrayMerge = n.arrayMerge || We), (n.isMergeableObject = n.isMergeableObject || _e), (n.cloneUnlessOtherwiseSpecified = Ne)
      var o = Array.isArray(t)
      return o === Array.isArray(e) ? (o ? n.arrayMerge(e, t, n) : Ve(e, t, n)) : Ne(t, n)
    }
    Ue.all = function (e, t) {
      if (!Array.isArray(e)) throw new Error('first argument should be an array')
      return e.reduce(function (e, n) {
        return Ue(e, n, t)
      }, {})
    }
    var qe = Ue
    const Ye = {
        text: { primary: 'rgba(0, 0, 0, 0.87)', secondary: 'rgba(0, 0, 0, 0.54)', disabled: 'rgba(0, 0, 0, 0.38)' },
        background: { default: '#FFFFFF' },
        context: { background: '#e3f2fd', text: 'rgba(0, 0, 0, 0.87)' },
        divider: { default: 'rgba(0,0,0,.12)' },
        button: { default: 'rgba(0,0,0,.54)', focus: 'rgba(0,0,0,.12)', hover: 'rgba(0,0,0,.12)', disabled: 'rgba(0, 0, 0, .18)' },
        selected: { default: '#e3f2fd', text: 'rgba(0, 0, 0, 0.87)' },
        highlightOnHover: { default: '#EEEEEE', text: 'rgba(0, 0, 0, 0.87)' },
        striped: { default: '#FAFAFA', text: 'rgba(0, 0, 0, 0.87)' },
      },
      Ke = {
        default: Ye,
        light: Ye,
        dark: {
          text: { primary: '#FFFFFF', secondary: 'rgba(255, 255, 255, 0.7)', disabled: 'rgba(0,0,0,.12)' },
          background: { default: '#424242' },
          context: { background: '#E91E63', text: '#FFFFFF' },
          divider: { default: 'rgba(81, 81, 81, 1)' },
          button: { default: '#FFFFFF', focus: 'rgba(255, 255, 255, .54)', hover: 'rgba(255, 255, 255, .12)', disabled: 'rgba(255, 255, 255, .18)' },
          selected: { default: 'rgba(0, 0, 0, .7)', text: '#FFFFFF' },
          highlightOnHover: { default: 'rgba(0, 0, 0, .7)', text: '#FFFFFF' },
          striped: { default: 'rgba(0, 0, 0, .87)', text: '#FFFFFF' },
        },
      }
    function Je(e, t, n, o) {
      const [r, i] = l.useState(() => u(e)),
        [s, d] = l.useState(''),
        c = l.useRef('')
      Le(() => {
        i(u(e))
      }, [e])
      const g = l.useCallback(
          (e) => {
            var t, n, o
            const { attributes: a } = e.target,
              l = null === (t = a.getNamedItem('data-column-id')) || void 0 === t ? void 0 : t.value
            l && ((c.current = (null === (o = null === (n = r[w(r, l)]) || void 0 === n ? void 0 : n.id) || void 0 === o ? void 0 : o.toString()) || ''), d(c.current))
          },
          [r],
        ),
        p = l.useCallback(
          (e) => {
            var n
            const { attributes: o } = e.target,
              a = null === (n = o.getNamedItem('data-column-id')) || void 0 === n ? void 0 : n.value
            if (a && c.current && a !== c.current) {
              const e = w(r, c.current),
                n = w(r, a),
                o = [...r]
              ;(o[e] = r[n]), (o[n] = r[e]), i(o), t(o)
            }
          },
          [t, r],
        ),
        b = l.useCallback((e) => {
          e.preventDefault()
        }, []),
        m = l.useCallback((e) => {
          e.preventDefault()
        }, []),
        f = l.useCallback((e) => {
          e.preventDefault(), (c.current = ''), d('')
        }, []),
        h = (function (e = !1) {
          return e ? a.ASC : a.DESC
        })(o),
        x = l.useMemo(() => r[w(r, null == n ? void 0 : n.toString())] || {}, [n, r])
      return {
        tableColumns: r,
        draggingColumnId: s,
        handleDragStart: g,
        handleDragEnter: p,
        handleDragOver: b,
        handleDragLeave: m,
        handleDragEnd: f,
        defaultSortDirection: h,
        defaultSortColumn: x,
      }
    }
    var Qe = l.memo(function (e) {
      const {
          data: n = De.data,
          columns: o = De.columns,
          title: r = De.title,
          actions: i = De.actions,
          keyField: c = De.keyField,
          striped: g = De.striped,
          highlightOnHover: u = De.highlightOnHover,
          pointerOnHover: m = De.pointerOnHover,
          dense: f = De.dense,
          selectableRows: w = De.selectableRows,
          selectableRowsSingle: x = De.selectableRowsSingle,
          selectableRowsHighlight: y = De.selectableRowsHighlight,
          selectableRowsNoSelectAll: R = De.selectableRowsNoSelectAll,
          selectableRowsVisibleOnly: O = De.selectableRowsVisibleOnly,
          selectableRowSelected: P = De.selectableRowSelected,
          selectableRowDisabled: k = De.selectableRowDisabled,
          selectableRowsComponent: D = De.selectableRowsComponent,
          selectableRowsComponentProps: $ = De.selectableRowsComponentProps,
          onRowExpandToggled: j = De.onRowExpandToggled,
          onSelectedRowsChange: F = De.onSelectedRowsChange,
          expandableIcon: T = De.expandableIcon,
          onChangeRowsPerPage: I = De.onChangeRowsPerPage,
          onChangePage: M = De.onChangePage,
          paginationServer: A = De.paginationServer,
          paginationServerOptions: L = De.paginationServerOptions,
          paginationTotalRows: _ = De.paginationTotalRows,
          paginationDefaultPage: z = De.paginationDefaultPage,
          paginationResetDefaultPage: N = De.paginationResetDefaultPage,
          paginationPerPage: W = De.paginationPerPage,
          paginationRowsPerPageOptions: B = De.paginationRowsPerPageOptions,
          paginationIconLastPage: G = De.paginationIconLastPage,
          paginationIconFirstPage: V = De.paginationIconFirstPage,
          paginationIconNext: U = De.paginationIconNext,
          paginationIconPrevious: q = De.paginationIconPrevious,
          paginationComponent: Y = De.paginationComponent,
          paginationComponentOptions: K = De.paginationComponentOptions,
          responsive: Q = De.responsive,
          progressPending: X = De.progressPending,
          progressComponent: Z = De.progressComponent,
          persistTableHead: ee = De.persistTableHead,
          noDataComponent: te = De.noDataComponent,
          disabled: ne = De.disabled,
          noTableHead: ae = De.noTableHead,
          noHeader: re = De.noHeader,
          fixedHeader: ie = De.fixedHeader,
          fixedHeaderScrollHeight: se = De.fixedHeaderScrollHeight,
          pagination: de = De.pagination,
          subHeader: ce = De.subHeader,
          subHeaderAlign: ge = De.subHeaderAlign,
          subHeaderWrap: ue = De.subHeaderWrap,
          subHeaderComponent: pe = De.subHeaderComponent,
          noContextMenu: me = De.noContextMenu,
          contextMessage: fe = De.contextMessage,
          contextActions: he = De.contextActions,
          contextComponent: Ee = De.contextComponent,
          expandableRows: Oe = De.expandableRows,
          onRowClicked: Pe = De.onRowClicked,
          onRowDoubleClicked: ke = De.onRowDoubleClicked,
          onRowMouseEnter: He = De.onRowMouseEnter,
          onRowMouseLeave: $e = De.onRowMouseLeave,
          sortIcon: je = De.sortIcon,
          onSort: Fe = De.onSort,
          sortFunction: Te = De.sortFunction,
          sortServer: Ie = De.sortServer,
          expandableRowsComponent: Me = De.expandableRowsComponent,
          expandableRowsComponentProps: _e = De.expandableRowsComponentProps,
          expandableRowDisabled: ze = De.expandableRowDisabled,
          expandableRowsHideExpander: Ne = De.expandableRowsHideExpander,
          expandOnRowClicked: We = De.expandOnRowClicked,
          expandOnRowDoubleClicked: Be = De.expandOnRowDoubleClicked,
          expandableRowExpanded: Ge = De.expandableRowExpanded,
          expandableInheritConditionalStyles: Ve = De.expandableInheritConditionalStyles,
          defaultSortFieldId: Ue = De.defaultSortFieldId,
          defaultSortAsc: Ye = De.defaultSortAsc,
          clearSelectedRows: Qe = De.clearSelectedRows,
          conditionalRowStyles: Xe = De.conditionalRowStyles,
          theme: Ze = De.theme,
          customStyles: et = De.customStyles,
          direction: tt = De.direction,
          onColumnOrderChange: nt = De.onColumnOrderChange,
          className: ot,
        } = e,
        {
          tableColumns: at,
          draggingColumnId: lt,
          handleDragStart: rt,
          handleDragEnter: it,
          handleDragOver: st,
          handleDragLeave: dt,
          handleDragEnd: ct,
          defaultSortDirection: gt,
          defaultSortColumn: ut,
        } = Je(o, nt, Ue, Ye),
        [{ rowsPerPage: pt, currentPage: bt, selectedRows: mt, allSelected: ft, selectedCount: ht, selectedColumn: wt, sortDirection: xt, toggleOnSelectedRowsChange: Ct }, yt] =
          l.useReducer(C, {
            allSelected: !1,
            selectedCount: 0,
            selectedRows: [],
            selectedColumn: ut,
            toggleOnSelectedRowsChange: !1,
            sortDirection: gt,
            currentPage: z,
            rowsPerPage: W,
            selectedRowsFlag: !1,
            contextMessage: De.contextMessage,
          }),
        { persistSelectedOnSort: vt = !1, persistSelectedOnPageChange: Rt = !1 } = L,
        St = !(!A || (!Rt && !vt)),
        Et = de && !X && n.length > 0,
        Ot = Y || Ae,
        Pt = l.useMemo(
          () =>
            ((e = {}, t = 'default', n = 'default') => {
              const o = Ke[t] ? t : n
              return qe(
                {
                  table: { style: { color: (a = Ke[o]).text.primary, backgroundColor: a.background.default } },
                  tableWrapper: { style: { display: 'table' } },
                  responsiveWrapper: { style: {} },
                  header: {
                    style: { fontSize: '22px', color: a.text.primary, backgroundColor: a.background.default, minHeight: '56px', paddingLeft: '16px', paddingRight: '8px' },
                  },
                  subHeader: { style: { backgroundColor: a.background.default, minHeight: '52px' } },
                  head: { style: { color: a.text.primary, fontSize: '12px', fontWeight: 500 } },
                  headRow: {
                    style: { backgroundColor: a.background.default, minHeight: '52px', borderBottomWidth: '1px', borderBottomColor: a.divider.default, borderBottomStyle: 'solid' },
                    denseStyle: { minHeight: '32px' },
                  },
                  headCells: { style: { paddingLeft: '16px', paddingRight: '16px' }, draggingStyle: { cursor: 'move' } },
                  contextMenu: {
                    style: {
                      backgroundColor: a.context.background,
                      fontSize: '18px',
                      fontWeight: 400,
                      color: a.context.text,
                      paddingLeft: '16px',
                      paddingRight: '8px',
                      transform: 'translate3d(0, -100%, 0)',
                      transitionDuration: '125ms',
                      transitionTimingFunction: 'cubic-bezier(0, 0, 0.2, 1)',
                      willChange: 'transform',
                    },
                    activeStyle: { transform: 'translate3d(0, 0, 0)' },
                  },
                  cells: { style: { paddingLeft: '16px', paddingRight: '16px', wordBreak: 'break-word' }, draggingStyle: {} },
                  rows: {
                    style: {
                      fontSize: '13px',
                      fontWeight: 400,
                      color: a.text.primary,
                      backgroundColor: a.background.default,
                      minHeight: '48px',
                      '&:not(:last-of-type)': { borderBottomStyle: 'solid', borderBottomWidth: '1px', borderBottomColor: a.divider.default },
                    },
                    denseStyle: { minHeight: '32px' },
                    selectedHighlightStyle: { '&:nth-of-type(n)': { color: a.selected.text, backgroundColor: a.selected.default, borderBottomColor: a.background.default } },
                    highlightOnHoverStyle: {
                      color: a.highlightOnHover.text,
                      backgroundColor: a.highlightOnHover.default,
                      transitionDuration: '0.15s',
                      transitionProperty: 'background-color',
                      borderBottomColor: a.background.default,
                      outlineStyle: 'solid',
                      outlineWidth: '1px',
                      outlineColor: a.background.default,
                    },
                    stripedStyle: { color: a.striped.text, backgroundColor: a.striped.default },
                  },
                  expanderRow: { style: { color: a.text.primary, backgroundColor: a.background.default } },
                  expanderCell: { style: { flex: '0 0 48px' } },
                  expanderButton: {
                    style: {
                      color: a.button.default,
                      fill: a.button.default,
                      backgroundColor: 'transparent',
                      borderRadius: '2px',
                      transition: '0.25s',
                      height: '100%',
                      width: '100%',
                      '&:hover:enabled': { cursor: 'pointer' },
                      '&:disabled': { color: a.button.disabled },
                      '&:hover:not(:disabled)': { cursor: 'pointer', backgroundColor: a.button.hover },
                      '&:focus': { outline: 'none', backgroundColor: a.button.focus },
                      svg: { margin: 'auto' },
                    },
                  },
                  pagination: {
                    style: {
                      color: a.text.secondary,
                      fontSize: '13px',
                      minHeight: '56px',
                      backgroundColor: a.background.default,
                      borderTopStyle: 'solid',
                      borderTopWidth: '1px',
                      borderTopColor: a.divider.default,
                    },
                    pageButtonsStyle: {
                      borderRadius: '50%',
                      height: '40px',
                      width: '40px',
                      padding: '8px',
                      margin: 'px',
                      cursor: 'pointer',
                      transition: '0.4s',
                      color: a.button.default,
                      fill: a.button.default,
                      backgroundColor: 'transparent',
                      '&:disabled': { cursor: 'unset', color: a.button.disabled, fill: a.button.disabled },
                      '&:hover:not(:disabled)': { backgroundColor: a.button.hover },
                      '&:focus': { outline: 'none', backgroundColor: a.button.focus },
                    },
                  },
                  noData: { style: { display: 'flex', alignItems: 'center', justifyContent: 'center', color: a.text.primary, backgroundColor: a.background.default } },
                  progress: { style: { display: 'flex', alignItems: 'center', justifyContent: 'center', color: a.text.primary, backgroundColor: a.background.default } },
                },
                e,
              )
              var a
            })(et, Ze),
          [et, Ze],
        ),
        kt = l.useMemo(() => Object.assign({}, 'auto' !== tt && { dir: tt }), [tt]),
        Dt = l.useMemo(() => {
          if (Ie) return n
          if ((null == wt ? void 0 : wt.sortFunction) && 'function' == typeof wt.sortFunction) {
            const e = wt.sortFunction,
              t = xt === a.ASC ? e : (t, n) => -1 * e(t, n)
            return [...n].sort(t)
          }
          return (function (e, t, n, o) {
            return t
              ? o && 'function' == typeof o
                ? o(e.slice(0), t, n)
                : e.slice(0).sort((e, o) => {
                    let a, l
                    if (('string' == typeof t ? ((a = d(e, t)), (l = d(o, t))) : ((a = t(e)), (l = t(o))), 'asc' === n)) {
                      if (a < l) return -1
                      if (a > l) return 1
                    }
                    if ('desc' === n) {
                      if (a > l) return -1
                      if (a < l) return 1
                    }
                    return 0
                  })
              : e
          })(n, null == wt ? void 0 : wt.selector, xt, Te)
        }, [Ie, wt, xt, n, Te]),
        Ht = l.useMemo(() => {
          if (de && !A) {
            const e = bt * pt,
              t = e - pt
            return Dt.slice(t, e)
          }
          return Dt
        }, [bt, de, A, pt, Dt]),
        $t = l.useCallback((e) => {
          yt(e)
        }, []),
        jt = l.useCallback((e) => {
          yt(e)
        }, []),
        Ft = l.useCallback((e) => {
          yt(e)
        }, []),
        Tt = l.useCallback((e, t) => Pe(e, t), [Pe]),
        It = l.useCallback((e, t) => ke(e, t), [ke]),
        Mt = l.useCallback((e, t) => He(e, t), [He]),
        At = l.useCallback((e, t) => $e(e, t), [$e]),
        Lt = l.useCallback((e) => yt({ type: 'CHANGE_PAGE', page: e, paginationServer: A, visibleOnly: O, persistSelectedOnPageChange: Rt }), [A, Rt, O]),
        _t = l.useCallback(
          (e) => {
            const t = p(_ || Ht.length, e),
              n = b(bt, t)
            A || Lt(n), yt({ type: 'CHANGE_ROWS_PER_PAGE', page: n, rowsPerPage: e })
          },
          [bt, Lt, A, _, Ht.length],
        )
      if (de && !A && Dt.length > 0 && 0 === Ht.length) {
        const e = p(Dt.length, pt),
          t = b(bt, e)
        Lt(t)
      }
      Le(() => {
        F({ allSelected: ft, selectedCount: ht, selectedRows: mt.slice(0) })
      }, [Ct]),
        Le(() => {
          Fe(wt, xt, Dt.slice(0))
        }, [wt, xt]),
        Le(() => {
          M(bt, _ || Dt.length)
        }, [bt]),
        Le(() => {
          I(pt, bt)
        }, [pt]),
        Le(() => {
          Lt(z)
        }, [z, N]),
        Le(() => {
          if (de && A && _ > 0) {
            const e = p(_, pt),
              t = b(bt, e)
            bt !== t && Lt(t)
          }
        }, [_]),
        l.useEffect(() => {
          yt({ type: 'CLEAR_SELECTED_ROWS', selectedRowsFlag: Qe })
        }, [x, Qe]),
        l.useEffect(() => {
          if (!P) return
          const e = Dt.filter((e) => P(e)),
            t = x ? e.slice(0, 1) : e
          yt({ type: 'SELECT_MULTIPLE_ROWS', keyField: c, selectedRows: t, totalRows: Dt.length, mergeSelections: St })
        }, [n, P])
      const zt = O ? Ht : Dt,
        Nt = Rt || x || R
      return l.createElement(
        t.ThemeProvider,
        { theme: Pt },
        !re &&
          (!!r || !!i) &&
          l.createElement(be, { title: r, actions: i, showMenu: !me, selectedCount: ht, direction: tt, contextActions: he, contextComponent: Ee, contextMessage: fe }),
        ce && l.createElement(we, { align: ge, wrapContent: ue }, pe),
        l.createElement(
          Ce,
          Object.assign({ responsive: Q, fixedHeader: ie, fixedHeaderScrollHeight: se, className: ot }, kt),
          l.createElement(
            ve,
            null,
            X && !ee && l.createElement(ye, null, Z),
            l.createElement(
              v,
              { disabled: ne, className: 'rdt_Table', role: 'table' },
              !ae &&
                (!!ee || (Dt.length > 0 && !X)) &&
                l.createElement(
                  S,
                  { className: 'rdt_TableHead', role: 'rowgroup', fixedHeader: ie },
                  l.createElement(
                    E,
                    { className: 'rdt_TableHeadRow', role: 'row', dense: f },
                    w &&
                      (Nt
                        ? l.createElement(H, { style: { flex: '0 0 48px' } })
                        : l.createElement(le, {
                            allSelected: ft,
                            selectedRows: mt,
                            selectableRowsComponent: D,
                            selectableRowsComponentProps: $,
                            selectableRowDisabled: k,
                            rowData: zt,
                            keyField: c,
                            mergeSelections: St,
                            onSelectAllRows: jt,
                          })),
                    Oe && !Ne && l.createElement(Re, null),
                    at.map((e) =>
                      l.createElement(oe, {
                        key: e.id,
                        column: e,
                        selectedColumn: wt,
                        disabled: X || 0 === Dt.length,
                        pagination: de,
                        paginationServer: A,
                        persistSelectedOnSort: vt,
                        selectableRowsVisibleOnly: O,
                        sortDirection: xt,
                        sortIcon: je,
                        sortServer: Ie,
                        onSort: $t,
                        onDragStart: rt,
                        onDragOver: st,
                        onDragEnd: ct,
                        onDragEnter: it,
                        onDragLeave: dt,
                        draggingColumnId: lt,
                      }),
                    ),
                  ),
                ),
              !Dt.length && !X && l.createElement(Se, null, te),
              X && ee && l.createElement(ye, null, Z),
              !X &&
                Dt.length > 0 &&
                l.createElement(
                  xe,
                  { className: 'rdt_TableBody', role: 'rowgroup' },
                  Ht.map((e, t) => {
                    const n = s(e, c),
                      o = (function (e = '') {
                        return 'number' != typeof e && (!e || 0 === e.length)
                      })(n)
                        ? t
                        : n,
                      a = h(e, mt, c),
                      r = !!(Oe && Ge && Ge(e)),
                      i = !!(Oe && ze && ze(e))
                    return l.createElement(J, {
                      id: o,
                      key: o,
                      keyField: c,
                      'data-row-id': o,
                      columns: at,
                      row: e,
                      rowCount: Dt.length,
                      rowIndex: t,
                      selectableRows: w,
                      expandableRows: Oe,
                      expandableIcon: T,
                      highlightOnHover: u,
                      pointerOnHover: m,
                      dense: f,
                      expandOnRowClicked: We,
                      expandOnRowDoubleClicked: Be,
                      expandableRowsComponent: Me,
                      expandableRowsComponentProps: _e,
                      expandableRowsHideExpander: Ne,
                      defaultExpanderDisabled: i,
                      defaultExpanded: r,
                      expandableInheritConditionalStyles: Ve,
                      conditionalRowStyles: Xe,
                      selected: a,
                      selectableRowsHighlight: y,
                      selectableRowsComponent: D,
                      selectableRowsComponentProps: $,
                      selectableRowDisabled: k,
                      selectableRowsSingle: x,
                      striped: g,
                      onRowExpandToggled: j,
                      onRowClicked: Tt,
                      onRowDoubleClicked: It,
                      onRowMouseEnter: Mt,
                      onRowMouseLeave: At,
                      onSelectedRow: Ft,
                      draggingColumnId: lt,
                      onDragStart: rt,
                      onDragOver: st,
                      onDragEnd: ct,
                      onDragEnter: it,
                      onDragLeave: dt,
                    })
                  }),
                ),
            ),
          ),
        ),
        Et &&
          l.createElement(
            'div',
            null,
            l.createElement(Ot, {
              onChangePage: Lt,
              onChangeRowsPerPage: _t,
              rowCount: _ || Dt.length,
              currentPage: bt,
              rowsPerPage: pt,
              direction: tt,
              paginationRowsPerPageOptions: B,
              paginationIconLastPage: G,
              paginationIconFirstPage: V,
              paginationIconNext: U,
              paginationIconPrevious: q,
              paginationComponentOptions: K,
            }),
          ),
      )
    })
    ;(exports.STOP_PROP_TAG = 'allowRowEvents'),
      (exports.createTheme = function (e = 'default', t, n = 'default') {
        return Ke[e] || (Ke[e] = qe(Ke[n], t || {})), (Ke[e] = qe(Ke[e], t || {})), Ke[e]
      }),
      (exports.default = Qe),
      (exports.defaultThemes = Ke)
  })(index_cjs)

  var DataTable = /*@__PURE__*/ getDefaultExportFromCjs(index_cjs)

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true,
      })
    } else {
      obj[key] = value
    }

    return obj
  }

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object)

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object)
      enumerableOnly &&
        (symbols = symbols.filter(function (sym) {
          return Object.getOwnPropertyDescriptor(object, sym).enumerable
        })),
        keys.push.apply(keys, symbols)
    }

    return keys
  }

  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = null != arguments[i] ? arguments[i] : {}
      i % 2
        ? ownKeys(Object(source), !0).forEach(function (key) {
            _defineProperty(target, key, source[key])
          })
        : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))
        : ownKeys(Object(source)).forEach(function (key) {
            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key))
          })
    }

    return target
  }

  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr
  }

  function _iterableToArrayLimit(arr, i) {
    var _i = arr == null ? null : (typeof Symbol !== 'undefined' && arr[Symbol.iterator]) || arr['@@iterator']

    if (_i == null) return
    var _arr = []
    var _n = true
    var _d = false

    var _s, _e

    try {
      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value)

        if (i && _arr.length === i) break
      }
    } catch (err) {
      _d = true
      _e = err
    } finally {
      try {
        if (!_n && _i['return'] != null) _i['return']()
      } finally {
        if (_d) throw _e
      }
    }

    return _arr
  }

  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length

    for (var i = 0, arr2 = new Array(len); i < len; i++) {
      arr2[i] = arr[i]
    }

    return arr2
  }

  function _unsupportedIterableToArray(o, minLen) {
    if (!o) return
    if (typeof o === 'string') return _arrayLikeToArray(o, minLen)
    var n = Object.prototype.toString.call(o).slice(8, -1)
    if (n === 'Object' && o.constructor) n = o.constructor.name
    if (n === 'Map' || n === 'Set') return Array.from(o)
    if (n === 'Arguments' || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen)
  }

  function _nonIterableRest() {
    throw new TypeError('Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.')
  }

  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest()
  }

  function _objectWithoutPropertiesLoose(source, excluded) {
    if (source == null) return {}
    var target = {}
    var sourceKeys = Object.keys(source)
    var key, i

    for (i = 0; i < sourceKeys.length; i++) {
      key = sourceKeys[i]
      if (excluded.indexOf(key) >= 0) continue
      target[key] = source[key]
    }

    return target
  }

  function _objectWithoutProperties(source, excluded) {
    if (source == null) return {}
    var target = _objectWithoutPropertiesLoose(source, excluded)
    var key, i

    if (Object.getOwnPropertySymbols) {
      var sourceSymbolKeys = Object.getOwnPropertySymbols(source)

      for (i = 0; i < sourceSymbolKeys.length; i++) {
        key = sourceSymbolKeys[i]
        if (excluded.indexOf(key) >= 0) continue
        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue
        target[key] = source[key]
      }
    }

    return target
  }

  var _excluded$8 = ['defaultInputValue', 'defaultMenuIsOpen', 'defaultValue', 'inputValue', 'menuIsOpen', 'onChange', 'onInputChange', 'onMenuClose', 'onMenuOpen', 'value']
  function useStateManager(_ref) {
    var _ref$defaultInputValu = _ref.defaultInputValue,
      defaultInputValue = _ref$defaultInputValu === void 0 ? '' : _ref$defaultInputValu,
      _ref$defaultMenuIsOpe = _ref.defaultMenuIsOpen,
      defaultMenuIsOpen = _ref$defaultMenuIsOpe === void 0 ? false : _ref$defaultMenuIsOpe,
      _ref$defaultValue = _ref.defaultValue,
      defaultValue = _ref$defaultValue === void 0 ? null : _ref$defaultValue,
      propsInputValue = _ref.inputValue,
      propsMenuIsOpen = _ref.menuIsOpen,
      propsOnChange = _ref.onChange,
      propsOnInputChange = _ref.onInputChange,
      propsOnMenuClose = _ref.onMenuClose,
      propsOnMenuOpen = _ref.onMenuOpen,
      propsValue = _ref.value,
      restSelectProps = _objectWithoutProperties(_ref, _excluded$8)
    var _useState = React$1.useState(propsInputValue !== undefined ? propsInputValue : defaultInputValue),
      _useState2 = _slicedToArray(_useState, 2),
      stateInputValue = _useState2[0],
      setStateInputValue = _useState2[1]
    var _useState3 = React$1.useState(propsMenuIsOpen !== undefined ? propsMenuIsOpen : defaultMenuIsOpen),
      _useState4 = _slicedToArray(_useState3, 2),
      stateMenuIsOpen = _useState4[0],
      setStateMenuIsOpen = _useState4[1]
    var _useState5 = React$1.useState(propsValue !== undefined ? propsValue : defaultValue),
      _useState6 = _slicedToArray(_useState5, 2),
      stateValue = _useState6[0],
      setStateValue = _useState6[1]
    var onChange = React$1.useCallback(
      function (value, actionMeta) {
        if (typeof propsOnChange === 'function') {
          propsOnChange(value, actionMeta)
        }
        setStateValue(value)
      },
      [propsOnChange],
    )
    var onInputChange = React$1.useCallback(
      function (value, actionMeta) {
        var newValue
        if (typeof propsOnInputChange === 'function') {
          newValue = propsOnInputChange(value, actionMeta)
        }
        setStateInputValue(newValue !== undefined ? newValue : value)
      },
      [propsOnInputChange],
    )
    var onMenuOpen = React$1.useCallback(
      function () {
        if (typeof propsOnMenuOpen === 'function') {
          propsOnMenuOpen()
        }
        setStateMenuIsOpen(true)
      },
      [propsOnMenuOpen],
    )
    var onMenuClose = React$1.useCallback(
      function () {
        if (typeof propsOnMenuClose === 'function') {
          propsOnMenuClose()
        }
        setStateMenuIsOpen(false)
      },
      [propsOnMenuClose],
    )
    var inputValue = propsInputValue !== undefined ? propsInputValue : stateInputValue
    var menuIsOpen = propsMenuIsOpen !== undefined ? propsMenuIsOpen : stateMenuIsOpen
    var value = propsValue !== undefined ? propsValue : stateValue
    return _objectSpread2(
      _objectSpread2({}, restSelectProps),
      {},
      {
        inputValue: inputValue,
        menuIsOpen: menuIsOpen,
        onChange: onChange,
        onInputChange: onInputChange,
        onMenuClose: onMenuClose,
        onMenuOpen: onMenuOpen,
        value: value,
      },
    )
  }

  function _extends$1() {
    _extends$1 = Object.assign
      ? Object.assign.bind()
      : function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i]

            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key]
              }
            }
          }

          return target
        }
    return _extends$1.apply(this, arguments)
  }

  function _classCallCheck(instance, Constructor) {
    if (!(instance instanceof Constructor)) {
      throw new TypeError('Cannot call a class as a function')
    }
  }

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i]
      descriptor.enumerable = descriptor.enumerable || false
      descriptor.configurable = true
      if ('value' in descriptor) descriptor.writable = true
      Object.defineProperty(target, descriptor.key, descriptor)
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps)
    if (staticProps) _defineProperties(Constructor, staticProps)
    Object.defineProperty(Constructor, 'prototype', {
      writable: false,
    })
    return Constructor
  }

  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf
      ? Object.setPrototypeOf.bind()
      : function _setPrototypeOf(o, p) {
          o.__proto__ = p
          return o
        }
    return _setPrototypeOf(o, p)
  }

  function _inherits(subClass, superClass) {
    if (typeof superClass !== 'function' && superClass !== null) {
      throw new TypeError('Super expression must either be null or a function')
    }

    subClass.prototype = Object.create(superClass && superClass.prototype, {
      constructor: {
        value: subClass,
        writable: true,
        configurable: true,
      },
    })
    Object.defineProperty(subClass, 'prototype', {
      writable: false,
    })
    if (superClass) _setPrototypeOf(subClass, superClass)
  }

  function _getPrototypeOf(o) {
    _getPrototypeOf = Object.setPrototypeOf
      ? Object.getPrototypeOf.bind()
      : function _getPrototypeOf(o) {
          return o.__proto__ || Object.getPrototypeOf(o)
        }
    return _getPrototypeOf(o)
  }

  function _isNativeReflectConstruct() {
    if (typeof Reflect === 'undefined' || !Reflect.construct) return false
    if (Reflect.construct.sham) return false
    if (typeof Proxy === 'function') return true

    try {
      Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}))
      return true
    } catch (e) {
      return false
    }
  }

  function _typeof(obj) {
    '@babel/helpers - typeof'

    return (
      (_typeof =
        'function' == typeof Symbol && 'symbol' == typeof Symbol.iterator
          ? function (obj) {
              return typeof obj
            }
          : function (obj) {
              return obj && 'function' == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? 'symbol' : typeof obj
            }),
      _typeof(obj)
    )
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called")
    }

    return self
  }

  function _possibleConstructorReturn(self, call) {
    if (call && (_typeof(call) === 'object' || typeof call === 'function')) {
      return call
    } else if (call !== void 0) {
      throw new TypeError('Derived constructors may only return object or undefined')
    }

    return _assertThisInitialized(self)
  }

  function _createSuper(Derived) {
    var hasNativeReflectConstruct = _isNativeReflectConstruct()
    return function _createSuperInternal() {
      var Super = _getPrototypeOf(Derived),
        result

      if (hasNativeReflectConstruct) {
        var NewTarget = _getPrototypeOf(this).constructor
        result = Reflect.construct(Super, arguments, NewTarget)
      } else {
        result = Super.apply(this, arguments)
      }

      return _possibleConstructorReturn(this, result)
    }
  }

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr)
  }

  function _iterableToArray(iter) {
    if ((typeof Symbol !== 'undefined' && iter[Symbol.iterator] != null) || iter['@@iterator'] != null) return Array.from(iter)
  }

  function _nonIterableSpread() {
    throw new TypeError('Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.')
  }

  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread()
  }

  /*

	Based off glamor's StyleSheet, thanks Sunil ❤️

	high performance StyleSheet for css-in-js systems

	- uses multiple style tags behind the scenes for millions of rules
	- uses `insertRule` for appending in production for *much* faster performance

	// usage

	import { StyleSheet } from '@emotion/sheet'

	let styleSheet = new StyleSheet({ key: '', container: document.head })

	styleSheet.insert('#box { border: 1px solid red; }')
	- appends a css rule into the stylesheet

	styleSheet.flush()
	- empties the stylesheet of all its contents

	*/
  // $FlowFixMe
  function sheetForTag(tag) {
    if (tag.sheet) {
      // $FlowFixMe
      return tag.sheet
    } // this weirdness brought to you by firefox

    /* istanbul ignore next */

    for (var i = 0; i < document.styleSheets.length; i++) {
      if (document.styleSheets[i].ownerNode === tag) {
        // $FlowFixMe
        return document.styleSheets[i]
      }
    }
  }

  function createStyleElement(options) {
    var tag = document.createElement('style')
    tag.setAttribute('data-emotion', options.key)

    if (options.nonce !== undefined) {
      tag.setAttribute('nonce', options.nonce)
    }

    tag.appendChild(document.createTextNode(''))
    tag.setAttribute('data-s', '')
    return tag
  }

  var StyleSheet = /*#__PURE__*/ (function () {
    // Using Node instead of HTMLElement since container may be a ShadowRoot
    function StyleSheet(options) {
      var _this = this

      this._insertTag = function (tag) {
        var before

        if (_this.tags.length === 0) {
          if (_this.insertionPoint) {
            before = _this.insertionPoint.nextSibling
          } else if (_this.prepend) {
            before = _this.container.firstChild
          } else {
            before = _this.before
          }
        } else {
          before = _this.tags[_this.tags.length - 1].nextSibling
        }

        _this.container.insertBefore(tag, before)

        _this.tags.push(tag)
      }

      this.isSpeedy = options.speedy === undefined ? 'production' === 'production' : options.speedy
      this.tags = []
      this.ctr = 0
      this.nonce = options.nonce // key is the value of the data-emotion attribute, it's used to identify different sheets

      this.key = options.key
      this.container = options.container
      this.prepend = options.prepend
      this.insertionPoint = options.insertionPoint
      this.before = null
    }

    var _proto = StyleSheet.prototype

    _proto.hydrate = function hydrate(nodes) {
      nodes.forEach(this._insertTag)
    }

    _proto.insert = function insert(rule) {
      // the max length is how many rules we have per style tag, it's 65000 in speedy mode
      // it's 1 in dev because we insert source maps that map a single rule to a location
      // and you can only have one source map per style tag
      if (this.ctr % (this.isSpeedy ? 65000 : 1) === 0) {
        this._insertTag(createStyleElement(this))
      }

      var tag = this.tags[this.tags.length - 1]

      if (this.isSpeedy) {
        var sheet = sheetForTag(tag)

        try {
          // this is the ultrafast version, works across browsers
          // the big drawback is that the css won't be editable in devtools
          sheet.insertRule(rule, sheet.cssRules.length)
        } catch (e) {}
      } else {
        tag.appendChild(document.createTextNode(rule))
      }

      this.ctr++
    }

    _proto.flush = function flush() {
      // $FlowFixMe
      this.tags.forEach(function (tag) {
        return tag.parentNode && tag.parentNode.removeChild(tag)
      })
      this.tags = []
      this.ctr = 0
    }

    return StyleSheet
  })()

  var MS = '-ms-'
  var MOZ = '-moz-'
  var WEBKIT = '-webkit-'

  var COMMENT = 'comm'
  var RULESET = 'rule'
  var DECLARATION = 'decl'
  var IMPORT = '@import'
  var KEYFRAMES = '@keyframes'

  /**
   * @param {number}
   * @return {number}
   */
  var abs = Math.abs

  /**
   * @param {number}
   * @return {string}
   */
  var from = String.fromCharCode

  /**
   * @param {object}
   * @return {object}
   */
  var assign = Object.assign

  /**
   * @param {string} value
   * @param {number} length
   * @return {number}
   */
  function hash(value, length) {
    return charat(value, 0) ^ 45 ? (((((((length << 2) ^ charat(value, 0)) << 2) ^ charat(value, 1)) << 2) ^ charat(value, 2)) << 2) ^ charat(value, 3) : 0
  }

  /**
   * @param {string} value
   * @return {string}
   */
  function trim(value) {
    return value.trim()
  }

  /**
   * @param {string} value
   * @param {RegExp} pattern
   * @return {string?}
   */
  function match(value, pattern) {
    return (value = pattern.exec(value)) ? value[0] : value
  }

  /**
   * @param {string} value
   * @param {(string|RegExp)} pattern
   * @param {string} replacement
   * @return {string}
   */
  function replace(value, pattern, replacement) {
    return value.replace(pattern, replacement)
  }

  /**
   * @param {string} value
   * @param {string} search
   * @return {number}
   */
  function indexof(value, search) {
    return value.indexOf(search)
  }

  /**
   * @param {string} value
   * @param {number} index
   * @return {number}
   */
  function charat(value, index) {
    return value.charCodeAt(index) | 0
  }

  /**
   * @param {string} value
   * @param {number} begin
   * @param {number} end
   * @return {string}
   */
  function substr(value, begin, end) {
    return value.slice(begin, end)
  }

  /**
   * @param {string} value
   * @return {number}
   */
  function strlen(value) {
    return value.length
  }

  /**
   * @param {any[]} value
   * @return {number}
   */
  function sizeof(value) {
    return value.length
  }

  /**
   * @param {any} value
   * @param {any[]} array
   * @return {any}
   */
  function append(value, array) {
    return array.push(value), value
  }

  /**
   * @param {string[]} array
   * @param {function} callback
   * @return {string}
   */
  function combine(array, callback) {
    return array.map(callback).join('')
  }

  var line = 1
  var column = 1
  var length = 0
  var position = 0
  var character = 0
  var characters = ''

  /**
   * @param {string} value
   * @param {object | null} root
   * @param {object | null} parent
   * @param {string} type
   * @param {string[] | string} props
   * @param {object[] | string} children
   * @param {number} length
   */
  function node(value, root, parent, type, props, children, length) {
    return { value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: '' }
  }

  /**
   * @param {object} root
   * @param {object} props
   * @return {object}
   */
  function copy(root, props) {
    return assign(node('', null, null, '', null, null, 0), root, { length: -root.length }, props)
  }

  /**
   * @return {number}
   */
  function char() {
    return character
  }

  /**
   * @return {number}
   */
  function prev() {
    character = position > 0 ? charat(characters, --position) : 0

    if ((column--, character === 10)) (column = 1), line--

    return character
  }

  /**
   * @return {number}
   */
  function next() {
    character = position < length ? charat(characters, position++) : 0

    if ((column++, character === 10)) (column = 1), line++

    return character
  }

  /**
   * @return {number}
   */
  function peek() {
    return charat(characters, position)
  }

  /**
   * @return {number}
   */
  function caret() {
    return position
  }

  /**
   * @param {number} begin
   * @param {number} end
   * @return {string}
   */
  function slice(begin, end) {
    return substr(characters, begin, end)
  }

  /**
   * @param {number} type
   * @return {number}
   */
  function token(type) {
    switch (type) {
      // \0 \t \n \r \s whitespace token
      case 0:
      case 9:
      case 10:
      case 13:
      case 32:
        return 5
      // ! + , / > @ ~ isolate token
      case 33:
      case 43:
      case 44:
      case 47:
      case 62:
      case 64:
      case 126:
      // ; { } breakpoint token
      case 59:
      case 123:
      case 125:
        return 4
      // : accompanied token
      case 58:
        return 3
      // " ' ( [ opening delimit token
      case 34:
      case 39:
      case 40:
      case 91:
        return 2
      // ) ] closing delimit token
      case 41:
      case 93:
        return 1
    }

    return 0
  }

  /**
   * @param {string} value
   * @return {any[]}
   */
  function alloc(value) {
    return (line = column = 1), (length = strlen((characters = value))), (position = 0), []
  }

  /**
   * @param {any} value
   * @return {any}
   */
  function dealloc(value) {
    return (characters = ''), value
  }

  /**
   * @param {number} type
   * @return {string}
   */
  function delimit(type) {
    return trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))
  }

  /**
   * @param {number} type
   * @return {string}
   */
  function whitespace(type) {
    while ((character = peek()))
      if (character < 33) next()
      else break

    return token(type) > 2 || token(character) > 3 ? '' : ' '
  }

  /**
   * @param {number} index
   * @param {number} count
   * @return {string}
   */
  function escaping(index, count) {
    while (--count && next())
      // not 0-9 A-F a-f
      if (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97)) break

    return slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))
  }

  /**
   * @param {number} type
   * @return {number}
   */
  function delimiter(type) {
    while (next())
      switch (character) {
        // ] ) " '
        case type:
          return position
        // " '
        case 34:
        case 39:
          if (type !== 34 && type !== 39) delimiter(character)
          break
        // (
        case 40:
          if (type === 41) delimiter(type)
          break
        // \
        case 92:
          next()
          break
      }

    return position
  }

  /**
   * @param {number} type
   * @param {number} index
   * @return {number}
   */
  function commenter(type, index) {
    while (next())
      // //
      if (type + character === 47 + 10) break
      // /*
      else if (type + character === 42 + 42 && peek() === 47) break

    return '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())
  }

  /**
   * @param {number} index
   * @return {string}
   */
  function identifier(index) {
    while (!token(peek())) next()

    return slice(index, position)
  }

  /**
   * @param {string} value
   * @return {object[]}
   */
  function compile(value) {
    return dealloc(parse('', null, null, null, [''], (value = alloc(value)), 0, [0], value))
  }

  /**
   * @param {string} value
   * @param {object} root
   * @param {object?} parent
   * @param {string[]} rule
   * @param {string[]} rules
   * @param {string[]} rulesets
   * @param {number[]} pseudo
   * @param {number[]} points
   * @param {string[]} declarations
   * @return {object}
   */
  function parse(value, root, parent, rule, rules, rulesets, pseudo, points, declarations) {
    var index = 0
    var offset = 0
    var length = pseudo
    var atrule = 0
    var property = 0
    var previous = 0
    var variable = 1
    var scanning = 1
    var ampersand = 1
    var character = 0
    var type = ''
    var props = rules
    var children = rulesets
    var reference = rule
    var characters = type

    while (scanning)
      switch (((previous = character), (character = next()))) {
        // (
        case 40:
          if (previous != 108 && charat(characters, length - 1) == 58) {
            if (indexof((characters += replace(delimit(character), '&', '&\f')), '&\f') != -1) ampersand = -1
            break
          }
        // " ' [
        case 34:
        case 39:
        case 91:
          characters += delimit(character)
          break
        // \t \n \r \s
        case 9:
        case 10:
        case 13:
        case 32:
          characters += whitespace(previous)
          break
        // \
        case 92:
          characters += escaping(caret() - 1, 7)
          continue
        // /
        case 47:
          switch (peek()) {
            case 42:
            case 47:
              append(comment(commenter(next(), caret()), root, parent), declarations)
              break
            default:
              characters += '/'
          }
          break
        // {
        case 123 * variable:
          points[index++] = strlen(characters) * ampersand
        // } ; \0
        case 125 * variable:
        case 59:
        case 0:
          switch (character) {
            // \0 }
            case 0:
            case 125:
              scanning = 0
            // ;
            case 59 + offset:
              if (property > 0 && strlen(characters) - length)
                append(
                  property > 32 ? declaration(characters + ';', rule, parent, length - 1) : declaration(replace(characters, ' ', '') + ';', rule, parent, length - 2),
                  declarations,
                )
              break
            // @ ;
            case 59:
              characters += ';'
            // { rule/at-rule
            default:
              append((reference = ruleset(characters, root, parent, index, offset, rules, points, type, (props = []), (children = []), length)), rulesets)

              if (character === 123)
                if (offset === 0) parse(characters, root, reference, reference, props, rulesets, length, points, children)
                else
                  switch (atrule === 99 && charat(characters, 3) === 110 ? 100 : atrule) {
                    // d m s
                    case 100:
                    case 109:
                    case 115:
                      parse(
                        value,
                        reference,
                        reference,
                        rule && append(ruleset(value, reference, reference, 0, 0, rules, points, type, rules, (props = []), length), children),
                        rules,
                        children,
                        length,
                        points,
                        rule ? props : children,
                      )
                      break
                    default:
                      parse(characters, reference, reference, reference, [''], children, 0, points, children)
                  }
          }

          ;(index = offset = property = 0), (variable = ampersand = 1), (type = characters = ''), (length = pseudo)
          break
        // :
        case 58:
          ;(length = 1 + strlen(characters)), (property = previous)
        default:
          if (variable < 1)
            if (character == 123) --variable
            else if (character == 125 && variable++ == 0 && prev() == 125) continue

          switch (((characters += from(character)), character * variable)) {
            // &
            case 38:
              ampersand = offset > 0 ? 1 : ((characters += '\f'), -1)
              break
            // ,
            case 44:
              ;(points[index++] = (strlen(characters) - 1) * ampersand), (ampersand = 1)
              break
            // @
            case 64:
              // -
              if (peek() === 45) characters += delimit(next())
              ;(atrule = peek()), (offset = length = strlen((type = characters += identifier(caret())))), character++
              break
            // -
            case 45:
              if (previous === 45 && strlen(characters) == 2) variable = 0
          }
      }

    return rulesets
  }

  /**
   * @param {string} value
   * @param {object} root
   * @param {object?} parent
   * @param {number} index
   * @param {number} offset
   * @param {string[]} rules
   * @param {number[]} points
   * @param {string} type
   * @param {string[]} props
   * @param {string[]} children
   * @param {number} length
   * @return {object}
   */
  function ruleset(value, root, parent, index, offset, rules, points, type, props, children, length) {
    var post = offset - 1
    var rule = offset === 0 ? rules : ['']
    var size = sizeof(rule)

    for (var i = 0, j = 0, k = 0; i < index; ++i)
      for (var x = 0, y = substr(value, post + 1, (post = abs((j = points[i])))), z = value; x < size; ++x)
        if ((z = trim(j > 0 ? rule[x] + ' ' + y : replace(y, /&\f/g, rule[x])))) props[k++] = z

    return node(value, root, parent, offset === 0 ? RULESET : type, props, children, length)
  }

  /**
   * @param {number} value
   * @param {object} root
   * @param {object?} parent
   * @return {object}
   */
  function comment(value, root, parent) {
    return node(value, root, parent, COMMENT, from(char()), substr(value, 2, -2), 0)
  }

  /**
   * @param {string} value
   * @param {object} root
   * @param {object?} parent
   * @param {number} length
   * @return {object}
   */
  function declaration(value, root, parent, length) {
    return node(value, root, parent, DECLARATION, substr(value, 0, length), substr(value, length + 1, -1), length)
  }

  /**
   * @param {object[]} children
   * @param {function} callback
   * @return {string}
   */
  function serialize$7(children, callback) {
    var output = ''
    var length = sizeof(children)

    for (var i = 0; i < length; i++) output += callback(children[i], i, children, callback) || ''

    return output
  }

  /**
   * @param {object} element
   * @param {number} index
   * @param {object[]} children
   * @param {function} callback
   * @return {string}
   */
  function stringify(element, index, children, callback) {
    switch (element.type) {
      case IMPORT:
      case DECLARATION:
        return (element.return = element.return || element.value)
      case COMMENT:
        return ''
      case KEYFRAMES:
        return (element.return = element.value + '{' + serialize$7(element.children, callback) + '}')
      case RULESET:
        element.value = element.props.join(',')
    }

    return strlen((children = serialize$7(element.children, callback))) ? (element.return = element.value + '{' + children + '}') : ''
  }

  /**
   * @param {function[]} collection
   * @return {function}
   */
  function middleware(collection) {
    var length = sizeof(collection)

    return function (element, index, children, callback) {
      var output = ''

      for (var i = 0; i < length; i++) output += collection[i](element, index, children, callback) || ''

      return output
    }
  }

  /**
   * @param {function} callback
   * @return {function}
   */
  function rulesheet(callback) {
    return function (element) {
      if (!element.root) if ((element = element.return)) callback(element)
    }
  }

  var identifierWithPointTracking = function identifierWithPointTracking(begin, points, index) {
    var previous = 0
    var character = 0

    while (true) {
      previous = character
      character = peek() // &\f

      if (previous === 38 && character === 12) {
        points[index] = 1
      }

      if (token(character)) {
        break
      }

      next()
    }

    return slice(begin, position)
  }

  var toRules = function toRules(parsed, points) {
    // pretend we've started with a comma
    var index = -1
    var character = 44

    do {
      switch (token(character)) {
        case 0:
          // &\f
          if (character === 38 && peek() === 12) {
            // this is not 100% correct, we don't account for literal sequences here - like for example quoted strings
            // stylis inserts \f after & to know when & where it should replace this sequence with the context selector
            // and when it should just concatenate the outer and inner selectors
            // it's very unlikely for this sequence to actually appear in a different context, so we just leverage this fact here
            points[index] = 1
          }

          parsed[index] += identifierWithPointTracking(position - 1, points, index)
          break

        case 2:
          parsed[index] += delimit(character)
          break

        case 4:
          // comma
          if (character === 44) {
            // colon
            parsed[++index] = peek() === 58 ? '&\f' : ''
            points[index] = parsed[index].length
            break
          }

        // fallthrough

        default:
          parsed[index] += from(character)
      }
    } while ((character = next()))

    return parsed
  }

  var getRules = function getRules(value, points) {
    return dealloc(toRules(alloc(value), points))
  } // WeakSet would be more appropriate, but only WeakMap is supported in IE11

  var fixedElements = /* #__PURE__ */ new WeakMap()
  var compat = function compat(element) {
    if (
      element.type !== 'rule' ||
      !element.parent || // positive .length indicates that this rule contains pseudo
      // negative .length indicates that this rule has been already prefixed
      element.length < 1
    ) {
      return
    }

    var value = element.value,
      parent = element.parent
    var isImplicitRule = element.column === parent.column && element.line === parent.line

    while (parent.type !== 'rule') {
      parent = parent.parent
      if (!parent) return
    } // short-circuit for the simplest case

    if (
      element.props.length === 1 &&
      value.charCodeAt(0) !== 58 &&
      /* colon */
      !fixedElements.get(parent)
    ) {
      return
    } // if this is an implicitly inserted rule (the one eagerly inserted at the each new nested level)
    // then the props has already been manipulated beforehand as they that array is shared between it and its "rule parent"

    if (isImplicitRule) {
      return
    }

    fixedElements.set(element, true)
    var points = []
    var rules = getRules(value, points)
    var parentRules = parent.props

    for (var i = 0, k = 0; i < rules.length; i++) {
      for (var j = 0; j < parentRules.length; j++, k++) {
        element.props[k] = points[i] ? rules[i].replace(/&\f/g, parentRules[j]) : parentRules[j] + ' ' + rules[i]
      }
    }
  }
  var removeLabel = function removeLabel(element) {
    if (element.type === 'decl') {
      var value = element.value

      if (
        // charcode for l
        value.charCodeAt(0) === 108 && // charcode for b
        value.charCodeAt(2) === 98
      ) {
        // this ignores label
        element['return'] = ''
        element.value = ''
      }
    }
  }

  /* eslint-disable no-fallthrough */

  function prefix(value, length) {
    switch (hash(value, length)) {
      // color-adjust
      case 5103:
        return WEBKIT + 'print-' + value + value
      // animation, animation-(delay|direction|duration|fill-mode|iteration-count|name|play-state|timing-function)

      case 5737:
      case 4201:
      case 3177:
      case 3433:
      case 1641:
      case 4457:
      case 2921: // text-decoration, filter, clip-path, backface-visibility, column, box-decoration-break

      case 5572:
      case 6356:
      case 5844:
      case 3191:
      case 6645:
      case 3005: // mask, mask-image, mask-(mode|clip|size), mask-(repeat|origin), mask-position, mask-composite,

      case 6391:
      case 5879:
      case 5623:
      case 6135:
      case 4599:
      case 4855: // background-clip, columns, column-(count|fill|gap|rule|rule-color|rule-style|rule-width|span|width)

      case 4215:
      case 6389:
      case 5109:
      case 5365:
      case 5621:
      case 3829:
        return WEBKIT + value + value
      // appearance, user-select, transform, hyphens, text-size-adjust

      case 5349:
      case 4246:
      case 4810:
      case 6968:
      case 2756:
        return WEBKIT + value + MOZ + value + MS + value + value
      // flex, flex-direction

      case 6828:
      case 4268:
        return WEBKIT + value + MS + value + value
      // order

      case 6165:
        return WEBKIT + value + MS + 'flex-' + value + value
      // align-items

      case 5187:
        return WEBKIT + value + replace(value, /(\w+).+(:[^]+)/, WEBKIT + 'box-$1$2' + MS + 'flex-$1$2') + value
      // align-self

      case 5443:
        return WEBKIT + value + MS + 'flex-item-' + replace(value, /flex-|-self/, '') + value
      // align-content

      case 4675:
        return WEBKIT + value + MS + 'flex-line-pack' + replace(value, /align-content|flex-|-self/, '') + value
      // flex-shrink

      case 5548:
        return WEBKIT + value + MS + replace(value, 'shrink', 'negative') + value
      // flex-basis

      case 5292:
        return WEBKIT + value + MS + replace(value, 'basis', 'preferred-size') + value
      // flex-grow

      case 6060:
        return WEBKIT + 'box-' + replace(value, '-grow', '') + WEBKIT + value + MS + replace(value, 'grow', 'positive') + value
      // transition

      case 4554:
        return WEBKIT + replace(value, /([^-])(transform)/g, '$1' + WEBKIT + '$2') + value
      // cursor

      case 6187:
        return replace(replace(replace(value, /(zoom-|grab)/, WEBKIT + '$1'), /(image-set)/, WEBKIT + '$1'), value, '') + value
      // background, background-image

      case 5495:
      case 3959:
        return replace(value, /(image-set\([^]*)/, WEBKIT + '$1' + '$`$1')
      // justify-content

      case 4968:
        return replace(replace(value, /(.+:)(flex-)?(.*)/, WEBKIT + 'box-pack:$3' + MS + 'flex-pack:$3'), /s.+-b[^;]+/, 'justify') + WEBKIT + value + value
      // (margin|padding)-inline-(start|end)

      case 4095:
      case 3583:
      case 4068:
      case 2532:
        return replace(value, /(.+)-inline(.+)/, WEBKIT + '$1$2') + value
      // (min|max)?(width|height|inline-size|block-size)

      case 8116:
      case 7059:
      case 5753:
      case 5535:
      case 5445:
      case 5701:
      case 4933:
      case 4677:
      case 5533:
      case 5789:
      case 5021:
      case 4765:
        // stretch, max-content, min-content, fill-available
        if (strlen(value) - 1 - length > 6)
          switch (charat(value, length + 1)) {
            // (m)ax-content, (m)in-content
            case 109:
              // -
              if (charat(value, length + 4) !== 45) break
            // (f)ill-available, (f)it-content

            case 102:
              return replace(value, /(.+:)(.+)-([^]+)/, '$1' + WEBKIT + '$2-$3' + '$1' + MOZ + (charat(value, length + 3) == 108 ? '$3' : '$2-$3')) + value
            // (s)tretch

            case 115:
              return ~indexof(value, 'stretch') ? prefix(replace(value, 'stretch', 'fill-available'), length) + value : value
          }
        break
      // position: sticky

      case 4949:
        // (s)ticky?
        if (charat(value, length + 1) !== 115) break
      // display: (flex|inline-flex)

      case 6444:
        switch (charat(value, strlen(value) - 3 - (~indexof(value, '!important') && 10))) {
          // stic(k)y
          case 107:
            return replace(value, ':', ':' + WEBKIT) + value
          // (inline-)?fl(e)x

          case 101:
            return (
              replace(value, /(.+:)([^;!]+)(;|!.+)?/, '$1' + WEBKIT + (charat(value, 14) === 45 ? 'inline-' : '') + 'box$3' + '$1' + WEBKIT + '$2$3' + '$1' + MS + '$2box$3') +
              value
            )
        }

        break
      // writing-mode

      case 5936:
        switch (charat(value, length + 11)) {
          // vertical-l(r)
          case 114:
            return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, 'tb') + value
          // vertical-r(l)

          case 108:
            return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, 'tb-rl') + value
          // horizontal(-)tb

          case 45:
            return WEBKIT + value + MS + replace(value, /[svh]\w+-[tblr]{2}/, 'lr') + value
        }

        return WEBKIT + value + MS + value + value
    }

    return value
  }

  var prefixer = function prefixer(element, index, children, callback) {
    if (element.length > -1)
      if (!element['return'])
        switch (element.type) {
          case DECLARATION:
            element['return'] = prefix(element.value, element.length)
            break

          case KEYFRAMES:
            return serialize$7(
              [
                copy(element, {
                  value: replace(element.value, '@', '@' + WEBKIT),
                }),
              ],
              callback,
            )

          case RULESET:
            if (element.length)
              return combine(element.props, function (value) {
                switch (match(value, /(::plac\w+|:read-\w+)/)) {
                  // :read-(only|write)
                  case ':read-only':
                  case ':read-write':
                    return serialize$7(
                      [
                        copy(element, {
                          props: [replace(value, /:(read-\w+)/, ':' + MOZ + '$1')],
                        }),
                      ],
                      callback,
                    )
                  // :placeholder

                  case '::placeholder':
                    return serialize$7(
                      [
                        copy(element, {
                          props: [replace(value, /:(plac\w+)/, ':' + WEBKIT + 'input-$1')],
                        }),
                        copy(element, {
                          props: [replace(value, /:(plac\w+)/, ':' + MOZ + '$1')],
                        }),
                        copy(element, {
                          props: [replace(value, /:(plac\w+)/, MS + 'input-$1')],
                        }),
                      ],
                      callback,
                    )
                }

                return ''
              })
        }
  }

  var defaultStylisPlugins = [prefixer]

  var createCache = function createCache(options) {
    var key = options.key

    if (key === 'css') {
      var ssrStyles = document.querySelectorAll('style[data-emotion]:not([data-s])') // get SSRed styles out of the way of React's hydration
      // document.head is a safe place to move them to(though note document.head is not necessarily the last place they will be)
      // note this very very intentionally targets all style elements regardless of the key to ensure
      // that creating a cache works inside of render of a React component

      Array.prototype.forEach.call(ssrStyles, function (node) {
        // we want to only move elements which have a space in the data-emotion attribute value
        // because that indicates that it is an Emotion 11 server-side rendered style elements
        // while we will already ignore Emotion 11 client-side inserted styles because of the :not([data-s]) part in the selector
        // Emotion 10 client-side inserted styles did not have data-s (but importantly did not have a space in their data-emotion attributes)
        // so checking for the space ensures that loading Emotion 11 after Emotion 10 has inserted some styles
        // will not result in the Emotion 10 styles being destroyed
        var dataEmotionAttribute = node.getAttribute('data-emotion')

        if (dataEmotionAttribute.indexOf(' ') === -1) {
          return
        }
        document.head.appendChild(node)
        node.setAttribute('data-s', '')
      })
    }

    var stylisPlugins = options.stylisPlugins || defaultStylisPlugins

    var inserted = {}
    var container
    var nodesToHydrate = []

    {
      container = options.container || document.head
      Array.prototype.forEach.call(
        // this means we will ignore elements which don't have a space in them which
        // means that the style elements we're looking at are only Emotion 11 server-rendered style elements
        document.querySelectorAll('style[data-emotion^="' + key + ' "]'),
        function (node) {
          var attrib = node.getAttribute('data-emotion').split(' ') // $FlowFixMe

          for (var i = 1; i < attrib.length; i++) {
            inserted[attrib[i]] = true
          }

          nodesToHydrate.push(node)
        },
      )
    }

    var _insert

    var omnipresentPlugins = [compat, removeLabel]

    {
      var currentSheet
      var finalizingPlugins = [
        stringify,
        rulesheet(function (rule) {
          currentSheet.insert(rule)
        }),
      ]
      var serializer = middleware(omnipresentPlugins.concat(stylisPlugins, finalizingPlugins))

      var stylis = function stylis(styles) {
        return serialize$7(compile(styles), serializer)
      }

      _insert = function insert(selector, serialized, sheet, shouldCache) {
        currentSheet = sheet

        stylis(selector ? selector + '{' + serialized.styles + '}' : serialized.styles)

        if (shouldCache) {
          cache.inserted[serialized.name] = true
        }
      }
    }

    var cache = {
      key: key,
      sheet: new StyleSheet({
        key: key,
        container: container,
        nonce: options.nonce,
        speedy: options.speedy,
        prepend: options.prepend,
        insertionPoint: options.insertionPoint,
      }),
      nonce: options.nonce,
      inserted: inserted,
      registered: {},
      insert: _insert,
    }
    cache.sheet.hydrate(nodesToHydrate)
    return cache
  }

  var isBrowser = 'object' !== 'undefined'
  function getRegisteredStyles(registered, registeredStyles, classNames) {
    var rawClassName = ''
    classNames.split(' ').forEach(function (className) {
      if (registered[className] !== undefined) {
        registeredStyles.push(registered[className] + ';')
      } else {
        rawClassName += className + ' '
      }
    })
    return rawClassName
  }
  var registerStyles = function registerStyles(cache, serialized, isStringTag) {
    var className = cache.key + '-' + serialized.name

    if (
      // we only need to add the styles to the registered cache if the
      // class name could be used further down
      // the tree but if it's a string tag, we know it won't
      // so we don't have to add it to registered cache.
      // this improves memory usage since we can avoid storing the whole style string
      (isStringTag === false || // we need to always store it if we're in compat mode and
        // in node since emotion-server relies on whether a style is in
        // the registered cache to know whether a style is global or not
        // also, note that this check will be dead code eliminated in the browser
        isBrowser === false) &&
      cache.registered[className] === undefined
    ) {
      cache.registered[className] = serialized.styles
    }
  }
  var insertStyles = function insertStyles(cache, serialized, isStringTag) {
    registerStyles(cache, serialized, isStringTag)
    var className = cache.key + '-' + serialized.name

    if (cache.inserted[serialized.name] === undefined) {
      var current = serialized

      do {
        cache.insert(serialized === current ? '.' + className : '', current, cache.sheet, true)

        current = current.next
      } while (current !== undefined)
    }
  }

  /* eslint-disable */
  // Inspired by https://github.com/garycourt/murmurhash-js
  // Ported from https://github.com/aappleby/smhasher/blob/61a0530f28277f2e850bfc39600ce61d02b518de/src/MurmurHash2.cpp#L37-L86
  function murmur2(str) {
    // 'm' and 'r' are mixing constants generated offline.
    // They're not really 'magic', they just happen to work well.
    // const m = 0x5bd1e995;
    // const r = 24;
    // Initialize the hash
    var h = 0 // Mix 4 bytes at a time into the hash

    var k,
      i = 0,
      len = str.length

    for (; len >= 4; ++i, len -= 4) {
      k = (str.charCodeAt(i) & 0xff) | ((str.charCodeAt(++i) & 0xff) << 8) | ((str.charCodeAt(++i) & 0xff) << 16) | ((str.charCodeAt(++i) & 0xff) << 24)
      k =
        /* Math.imul(k, m): */
        (k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0xe995) << 16)
      k ^=
        /* k >>> r: */
        k >>> 24
      h =
        /* Math.imul(k, m): */
        ((k & 0xffff) * 0x5bd1e995 + (((k >>> 16) * 0xe995) << 16)) ^
        /* Math.imul(h, m): */
        ((h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0xe995) << 16))
    } // Handle the last few bytes of the input array

    switch (len) {
      case 3:
        h ^= (str.charCodeAt(i + 2) & 0xff) << 16

      case 2:
        h ^= (str.charCodeAt(i + 1) & 0xff) << 8

      case 1:
        h ^= str.charCodeAt(i) & 0xff
        h =
          /* Math.imul(h, m): */
          (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0xe995) << 16)
    } // Do a few final mixes of the hash to ensure the last few
    // bytes are well-incorporated.

    h ^= h >>> 13
    h =
      /* Math.imul(h, m): */
      (h & 0xffff) * 0x5bd1e995 + (((h >>> 16) * 0xe995) << 16)
    return ((h ^ (h >>> 15)) >>> 0).toString(36)
  }

  var unitlessKeys = {
    animationIterationCount: 1,
    borderImageOutset: 1,
    borderImageSlice: 1,
    borderImageWidth: 1,
    boxFlex: 1,
    boxFlexGroup: 1,
    boxOrdinalGroup: 1,
    columnCount: 1,
    columns: 1,
    flex: 1,
    flexGrow: 1,
    flexPositive: 1,
    flexShrink: 1,
    flexNegative: 1,
    flexOrder: 1,
    gridRow: 1,
    gridRowEnd: 1,
    gridRowSpan: 1,
    gridRowStart: 1,
    gridColumn: 1,
    gridColumnEnd: 1,
    gridColumnSpan: 1,
    gridColumnStart: 1,
    msGridRow: 1,
    msGridRowSpan: 1,
    msGridColumn: 1,
    msGridColumnSpan: 1,
    fontWeight: 1,
    lineHeight: 1,
    opacity: 1,
    order: 1,
    orphans: 1,
    tabSize: 1,
    widows: 1,
    zIndex: 1,
    zoom: 1,
    WebkitLineClamp: 1,
    // SVG-related properties
    fillOpacity: 1,
    floodOpacity: 1,
    stopOpacity: 1,
    strokeDasharray: 1,
    strokeDashoffset: 1,
    strokeMiterlimit: 1,
    strokeOpacity: 1,
    strokeWidth: 1,
  }

  var hyphenateRegex = /[A-Z]|^ms/g
  var animationRegex = /_EMO_([^_]+?)_([^]*?)_EMO_/g

  var isCustomProperty = function isCustomProperty(property) {
    return property.charCodeAt(1) === 45
  }

  var isProcessableValue = function isProcessableValue(value) {
    return value != null && typeof value !== 'boolean'
  }

  var processStyleName = /* #__PURE__ */ memoize(function (styleName) {
    return isCustomProperty(styleName) ? styleName : styleName.replace(hyphenateRegex, '-$&').toLowerCase()
  })

  var processStyleValue = function processStyleValue(key, value) {
    switch (key) {
      case 'animation':
      case 'animationName': {
        if (typeof value === 'string') {
          return value.replace(animationRegex, function (match, p1, p2) {
            cursor = {
              name: p1,
              styles: p2,
              next: cursor,
            }
            return p1
          })
        }
      }
    }

    if (unitlessKeys[key] !== 1 && !isCustomProperty(key) && typeof value === 'number' && value !== 0) {
      return value + 'px'
    }

    return value
  }

  var noComponentSelectorMessage =
    'Component selectors can only be used in conjunction with ' + '@emotion/babel-plugin, the swc Emotion plugin, or another Emotion-aware ' + 'compiler transform.'

  function handleInterpolation(mergedProps, registered, interpolation) {
    if (interpolation == null) {
      return ''
    }

    if (interpolation.__emotion_styles !== undefined) {
      return interpolation
    }

    switch (typeof interpolation) {
      case 'boolean': {
        return ''
      }

      case 'object': {
        if (interpolation.anim === 1) {
          cursor = {
            name: interpolation.name,
            styles: interpolation.styles,
            next: cursor,
          }
          return interpolation.name
        }

        if (interpolation.styles !== undefined) {
          var next = interpolation.next

          if (next !== undefined) {
            // not the most efficient thing ever but this is a pretty rare case
            // and there will be very few iterations of this generally
            while (next !== undefined) {
              cursor = {
                name: next.name,
                styles: next.styles,
                next: cursor,
              }
              next = next.next
            }
          }

          var styles = interpolation.styles + ';'

          return styles
        }

        return createStringFromObject(mergedProps, registered, interpolation)
      }

      case 'function': {
        if (mergedProps !== undefined) {
          var previousCursor = cursor
          var result = interpolation(mergedProps)
          cursor = previousCursor
          return handleInterpolation(mergedProps, registered, result)
        }

        break
      }
    } // finalize string values (regular strings and functions interpolated into css calls)

    if (registered == null) {
      return interpolation
    }

    var cached = registered[interpolation]
    return cached !== undefined ? cached : interpolation
  }

  function createStringFromObject(mergedProps, registered, obj) {
    var string = ''

    if (Array.isArray(obj)) {
      for (var i = 0; i < obj.length; i++) {
        string += handleInterpolation(mergedProps, registered, obj[i]) + ';'
      }
    } else {
      for (var _key in obj) {
        var value = obj[_key]

        if (typeof value !== 'object') {
          if (registered != null && registered[value] !== undefined) {
            string += _key + '{' + registered[value] + '}'
          } else if (isProcessableValue(value)) {
            string += processStyleName(_key) + ':' + processStyleValue(_key, value) + ';'
          }
        } else {
          if (_key === 'NO_COMPONENT_SELECTOR' && 'production' !== 'production') {
            throw new Error(noComponentSelectorMessage)
          }

          if (Array.isArray(value) && typeof value[0] === 'string' && (registered == null || registered[value[0]] === undefined)) {
            for (var _i = 0; _i < value.length; _i++) {
              if (isProcessableValue(value[_i])) {
                string += processStyleName(_key) + ':' + processStyleValue(_key, value[_i]) + ';'
              }
            }
          } else {
            var interpolated = handleInterpolation(mergedProps, registered, value)

            switch (_key) {
              case 'animation':
              case 'animationName': {
                string += processStyleName(_key) + ':' + interpolated + ';'
                break
              }

              default: {
                string += _key + '{' + interpolated + '}'
              }
            }
          }
        }
      }
    }

    return string
  }

  var labelPattern = /label:\s*([^\s;\n{]+)\s*(;|$)/g
  // keyframes are stored on the SerializedStyles object as a linked list

  var cursor
  var serializeStyles = function serializeStyles(args, registered, mergedProps) {
    if (args.length === 1 && typeof args[0] === 'object' && args[0] !== null && args[0].styles !== undefined) {
      return args[0]
    }

    var stringMode = true
    var styles = ''
    cursor = undefined
    var strings = args[0]

    if (strings == null || strings.raw === undefined) {
      stringMode = false
      styles += handleInterpolation(mergedProps, registered, strings)
    } else {
      styles += strings[0]
    } // we start at 1 since we've already handled the first arg

    for (var i = 1; i < args.length; i++) {
      styles += handleInterpolation(mergedProps, registered, args[i])

      if (stringMode) {
        styles += strings[i]
      }
    }

    labelPattern.lastIndex = 0
    var identifierName = ''
    var match // https://esbench.com/bench/5b809c2cf2949800a0f61fb5

    while ((match = labelPattern.exec(styles)) !== null) {
      identifierName +=
        '-' + // $FlowFixMe we know it's not null
        match[1]
    }

    var name = murmur2(styles) + identifierName

    return {
      name: name,
      styles: styles,
      next: cursor,
    }
  }

  var syncFallback = function syncFallback(create) {
    return create()
  }

  var useInsertionEffect = React__namespace['useInsertion' + 'Effect'] ? React__namespace['useInsertion' + 'Effect'] : false
  var useInsertionEffectAlwaysWithSyncFallback = useInsertionEffect || syncFallback

  var hasOwnProperty$1 = {}.hasOwnProperty

  var EmotionCacheContext = /* #__PURE__ */ React$1.createContext(
    // we're doing this to avoid preconstruct's dead code elimination in this one case
    // because this module is primarily intended for the browser and node
    // but it's also required in react native and similar environments sometimes
    // and we could have a special build just for that
    // but this is much easier and the native packages
    // might use a different theme context in the future anyway
    typeof HTMLElement !== 'undefined'
      ? /* #__PURE__ */ createCache({
          key: 'css',
        })
      : null,
  )

  EmotionCacheContext.Provider

  var withEmotionCache = function withEmotionCache(func) {
    // $FlowFixMe
    return /*#__PURE__*/ React$1.forwardRef(function (props, ref) {
      // the cache will never be null in the browser
      var cache = React$1.useContext(EmotionCacheContext)
      return func(props, cache, ref)
    })
  }

  var ThemeContext = /* #__PURE__ */ React$1.createContext({})

  var typePropName = '__EMOTION_TYPE_PLEASE_DO_NOT_USE__'
  var createEmotionProps = function createEmotionProps(type, props) {
    var newProps = {}

    for (var key in props) {
      if (hasOwnProperty$1.call(props, key)) {
        newProps[key] = props[key]
      }
    }

    newProps[typePropName] = type // For performance, only call getLabelFromStackTrace in development and when

    return newProps
  }

  var Insertion = function Insertion(_ref) {
    var cache = _ref.cache,
      serialized = _ref.serialized,
      isStringTag = _ref.isStringTag
    registerStyles(cache, serialized, isStringTag)
    useInsertionEffectAlwaysWithSyncFallback(function () {
      return insertStyles(cache, serialized, isStringTag)
    })

    return null
  }

  var Emotion = /* #__PURE__ */ withEmotionCache(function (props, cache, ref) {
    var cssProp = props.css // so that using `css` from `emotion` and passing the result to the css prop works
    // not passing the registered cache to serializeStyles because it would
    // make certain babel optimisations not possible

    if (typeof cssProp === 'string' && cache.registered[cssProp] !== undefined) {
      cssProp = cache.registered[cssProp]
    }

    var WrappedComponent = props[typePropName]
    var registeredStyles = [cssProp]
    var className = ''

    if (typeof props.className === 'string') {
      className = getRegisteredStyles(cache.registered, registeredStyles, props.className)
    } else if (props.className != null) {
      className = props.className + ' '
    }

    var serialized = serializeStyles(registeredStyles, undefined, React$1.useContext(ThemeContext))

    className += cache.key + '-' + serialized.name
    var newProps = {}

    for (var key in props) {
      if (hasOwnProperty$1.call(props, key) && key !== 'css' && key !== typePropName && 'production' === 'production') {
        newProps[key] = props[key]
      }
    }

    newProps.ref = ref
    newProps.className = className
    return /*#__PURE__*/ React$1.createElement(
      React$1.Fragment,
      null,
      /*#__PURE__*/ React$1.createElement(Insertion, {
        cache: cache,
        serialized: serialized,
        isStringTag: typeof WrappedComponent === 'string',
      }),
      /*#__PURE__*/ React$1.createElement(WrappedComponent, newProps),
    )
  })

  var jsx = function jsx(type, props) {
    var args = arguments

    if (props == null || !hasOwnProperty$1.call(props, 'css')) {
      // $FlowFixMe
      return React$1.createElement.apply(undefined, args)
    }

    var argsLength = args.length
    var createElementArgArray = new Array(argsLength)
    createElementArgArray[0] = Emotion
    createElementArgArray[1] = createEmotionProps(type, props)

    for (var i = 2; i < argsLength; i++) {
      createElementArgArray[i] = args[i]
    } // $FlowFixMe

    return React$1.createElement.apply(null, createElementArgArray)
  }

  function css$2() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key]
    }

    return serializeStyles(args)
  }

  var keyframes = function keyframes() {
    var insertable = css$2.apply(void 0, arguments)
    var name = 'animation-' + insertable.name // $FlowFixMe

    return {
      name: name,
      styles: '@keyframes ' + name + '{' + insertable.styles + '}',
      anim: 1,
      toString: function toString() {
        return '_EMO_' + this.name + '_' + this.styles + '_EMO_'
      },
    }
  }

  function _taggedTemplateLiteral(strings, raw) {
    if (!raw) {
      raw = strings.slice(0)
    }

    return Object.freeze(
      Object.defineProperties(strings, {
        raw: {
          value: Object.freeze(raw),
        },
      }),
    )
  }

  var reactDom = { exports: {} }

  var reactDom_production_min = {}

  var scheduler = { exports: {} }

  var scheduler_production_min = {}

  /**
   * @license React
   * scheduler.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  ;(function (exports) {
    function f(a, b) {
      var c = a.length
      a.push(b)
      a: for (; 0 < c; ) {
        var d = (c - 1) >>> 1,
          e = a[d]
        if (0 < g(e, b)) (a[d] = b), (a[c] = e), (c = d)
        else break a
      }
    }
    function h(a) {
      return 0 === a.length ? null : a[0]
    }
    function k(a) {
      if (0 === a.length) return null
      var b = a[0],
        c = a.pop()
      if (c !== b) {
        a[0] = c
        a: for (var d = 0, e = a.length, w = e >>> 1; d < w; ) {
          var m = 2 * (d + 1) - 1,
            C = a[m],
            n = m + 1,
            x = a[n]
          if (0 > g(C, c)) n < e && 0 > g(x, C) ? ((a[d] = x), (a[n] = c), (d = n)) : ((a[d] = C), (a[m] = c), (d = m))
          else if (n < e && 0 > g(x, c)) (a[d] = x), (a[n] = c), (d = n)
          else break a
        }
      }
      return b
    }
    function g(a, b) {
      var c = a.sortIndex - b.sortIndex
      return 0 !== c ? c : a.id - b.id
    }
    if ('object' === typeof performance && 'function' === typeof performance.now) {
      var l = performance
      exports.unstable_now = function () {
        return l.now()
      }
    } else {
      var p = Date,
        q = p.now()
      exports.unstable_now = function () {
        return p.now() - q
      }
    }
    var r = [],
      t = [],
      u = 1,
      v = null,
      y = 3,
      z = !1,
      A = !1,
      B = !1,
      D = 'function' === typeof setTimeout ? setTimeout : null,
      E = 'function' === typeof clearTimeout ? clearTimeout : null,
      F = 'undefined' !== typeof setImmediate ? setImmediate : null
    'undefined' !== typeof navigator &&
      void 0 !== navigator.scheduling &&
      void 0 !== navigator.scheduling.isInputPending &&
      navigator.scheduling.isInputPending.bind(navigator.scheduling)
    function G(a) {
      for (var b = h(t); null !== b; ) {
        if (null === b.callback) k(t)
        else if (b.startTime <= a) k(t), (b.sortIndex = b.expirationTime), f(r, b)
        else break
        b = h(t)
      }
    }
    function H(a) {
      B = !1
      G(a)
      if (!A)
        if (null !== h(r)) (A = !0), I(J)
        else {
          var b = h(t)
          null !== b && K(H, b.startTime - a)
        }
    }
    function J(a, b) {
      A = !1
      B && ((B = !1), E(L), (L = -1))
      z = !0
      var c = y
      try {
        G(b)
        for (v = h(r); null !== v && (!(v.expirationTime > b) || (a && !M())); ) {
          var d = v.callback
          if ('function' === typeof d) {
            v.callback = null
            y = v.priorityLevel
            var e = d(v.expirationTime <= b)
            b = exports.unstable_now()
            'function' === typeof e ? (v.callback = e) : v === h(r) && k(r)
            G(b)
          } else k(r)
          v = h(r)
        }
        if (null !== v) var w = !0
        else {
          var m = h(t)
          null !== m && K(H, m.startTime - b)
          w = !1
        }
        return w
      } finally {
        ;(v = null), (y = c), (z = !1)
      }
    }
    var N = !1,
      O = null,
      L = -1,
      P = 5,
      Q = -1
    function M() {
      return exports.unstable_now() - Q < P ? !1 : !0
    }
    function R() {
      if (null !== O) {
        var a = exports.unstable_now()
        Q = a
        var b = !0
        try {
          b = O(!0, a)
        } finally {
          b ? S() : ((N = !1), (O = null))
        }
      } else N = !1
    }
    var S
    if ('function' === typeof F)
      S = function () {
        F(R)
      }
    else if ('undefined' !== typeof MessageChannel) {
      var T = new MessageChannel(),
        U = T.port2
      T.port1.onmessage = R
      S = function () {
        U.postMessage(null)
      }
    } else
      S = function () {
        D(R, 0)
      }
    function I(a) {
      O = a
      N || ((N = !0), S())
    }
    function K(a, b) {
      L = D(function () {
        a(exports.unstable_now())
      }, b)
    }
    exports.unstable_IdlePriority = 5
    exports.unstable_ImmediatePriority = 1
    exports.unstable_LowPriority = 4
    exports.unstable_NormalPriority = 3
    exports.unstable_Profiling = null
    exports.unstable_UserBlockingPriority = 2
    exports.unstable_cancelCallback = function (a) {
      a.callback = null
    }
    exports.unstable_continueExecution = function () {
      A || z || ((A = !0), I(J))
    }
    exports.unstable_forceFrameRate = function (a) {
      0 > a || 125 < a
        ? console.error('forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported')
        : (P = 0 < a ? Math.floor(1e3 / a) : 5)
    }
    exports.unstable_getCurrentPriorityLevel = function () {
      return y
    }
    exports.unstable_getFirstCallbackNode = function () {
      return h(r)
    }
    exports.unstable_next = function (a) {
      switch (y) {
        case 1:
        case 2:
        case 3:
          var b = 3
          break
        default:
          b = y
      }
      var c = y
      y = b
      try {
        return a()
      } finally {
        y = c
      }
    }
    exports.unstable_pauseExecution = function () {}
    exports.unstable_requestPaint = function () {}
    exports.unstable_runWithPriority = function (a, b) {
      switch (a) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break
        default:
          a = 3
      }
      var c = y
      y = a
      try {
        return b()
      } finally {
        y = c
      }
    }
    exports.unstable_scheduleCallback = function (a, b, c) {
      var d = exports.unstable_now()
      'object' === typeof c && null !== c ? ((c = c.delay), (c = 'number' === typeof c && 0 < c ? d + c : d)) : (c = d)
      switch (a) {
        case 1:
          var e = -1
          break
        case 2:
          e = 250
          break
        case 5:
          e = 1073741823
          break
        case 4:
          e = 1e4
          break
        default:
          e = 5e3
      }
      e = c + e
      a = { id: u++, callback: b, priorityLevel: a, startTime: c, expirationTime: e, sortIndex: -1 }
      c > d ? ((a.sortIndex = c), f(t, a), null === h(r) && a === h(t) && (B ? (E(L), (L = -1)) : (B = !0), K(H, c - d))) : ((a.sortIndex = e), f(r, a), A || z || ((A = !0), I(J)))
      return a
    }
    exports.unstable_shouldYield = M
    exports.unstable_wrapCallback = function (a) {
      var b = y
      return function () {
        var c = y
        y = b
        try {
          return a.apply(this, arguments)
        } finally {
          y = c
        }
      }
    }
  })(scheduler_production_min)

  {
    scheduler.exports = scheduler_production_min
  }

  /**
   * @license React
   * react-dom.production.min.js
   *
   * Copyright (c) Facebook, Inc. and its affiliates.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  var aa = React__default['default'],
    ca = scheduler.exports
  function p$1(a) {
    for (var b = 'https://reactjs.org/docs/error-decoder.html?invariant=' + a, c = 1; c < arguments.length; c++) b += '&args[]=' + encodeURIComponent(arguments[c])
    return 'Minified React error #' + a + '; visit ' + b + ' for the full message or use the non-minified dev environment for full errors and additional helpful warnings.'
  }
  var da = new Set(),
    ea = {}
  function fa(a, b) {
    ha(a, b)
    ha(a + 'Capture', b)
  }
  function ha(a, b) {
    ea[a] = b
    for (a = 0; a < b.length; a++) da.add(b[a])
  }
  var ia = !('undefined' === typeof window || 'undefined' === typeof window.document || 'undefined' === typeof window.document.createElement),
    ja = Object.prototype.hasOwnProperty,
    ka =
      /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
    la = {},
    ma = {}
  function oa(a) {
    if (ja.call(ma, a)) return !0
    if (ja.call(la, a)) return !1
    if (ka.test(a)) return (ma[a] = !0)
    la[a] = !0
    return !1
  }
  function pa(a, b, c, d) {
    if (null !== c && 0 === c.type) return !1
    switch (typeof b) {
      case 'function':
      case 'symbol':
        return !0
      case 'boolean':
        if (d) return !1
        if (null !== c) return !c.acceptsBooleans
        a = a.toLowerCase().slice(0, 5)
        return 'data-' !== a && 'aria-' !== a
      default:
        return !1
    }
  }
  function qa(a, b, c, d) {
    if (null === b || 'undefined' === typeof b || pa(a, b, c, d)) return !0
    if (d) return !1
    if (null !== c)
      switch (c.type) {
        case 3:
          return !b
        case 4:
          return !1 === b
        case 5:
          return isNaN(b)
        case 6:
          return isNaN(b) || 1 > b
      }
    return !1
  }
  function v$1(a, b, c, d, e, f, g) {
    this.acceptsBooleans = 2 === b || 3 === b || 4 === b
    this.attributeName = d
    this.attributeNamespace = e
    this.mustUseProperty = c
    this.propertyName = a
    this.type = b
    this.sanitizeURL = f
    this.removeEmptyString = g
  }
  var z$1 = {}
  'children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style'.split(' ').forEach(function (a) {
    z$1[a] = new v$1(a, 0, !1, a, null, !1, !1)
  })
  ;[
    ['acceptCharset', 'accept-charset'],
    ['className', 'class'],
    ['htmlFor', 'for'],
    ['httpEquiv', 'http-equiv'],
  ].forEach(function (a) {
    var b = a[0]
    z$1[b] = new v$1(b, 1, !1, a[1], null, !1, !1)
  })
  ;['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (a) {
    z$1[a] = new v$1(a, 2, !1, a.toLowerCase(), null, !1, !1)
  })
  ;['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (a) {
    z$1[a] = new v$1(a, 2, !1, a, null, !1, !1)
  })
  'allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope'
    .split(' ')
    .forEach(function (a) {
      z$1[a] = new v$1(a, 3, !1, a.toLowerCase(), null, !1, !1)
    })
  ;['checked', 'multiple', 'muted', 'selected'].forEach(function (a) {
    z$1[a] = new v$1(a, 3, !0, a, null, !1, !1)
  })
  ;['capture', 'download'].forEach(function (a) {
    z$1[a] = new v$1(a, 4, !1, a, null, !1, !1)
  })
  ;['cols', 'rows', 'size', 'span'].forEach(function (a) {
    z$1[a] = new v$1(a, 6, !1, a, null, !1, !1)
  })
  ;['rowSpan', 'start'].forEach(function (a) {
    z$1[a] = new v$1(a, 5, !1, a.toLowerCase(), null, !1, !1)
  })
  var ra = /[\-:]([a-z])/g
  function sa(a) {
    return a[1].toUpperCase()
  }
  'accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height'
    .split(' ')
    .forEach(function (a) {
      var b = a.replace(ra, sa)
      z$1[b] = new v$1(b, 1, !1, a, null, !1, !1)
    })
  'xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type'.split(' ').forEach(function (a) {
    var b = a.replace(ra, sa)
    z$1[b] = new v$1(b, 1, !1, a, 'http://www.w3.org/1999/xlink', !1, !1)
  })
  ;['xml:base', 'xml:lang', 'xml:space'].forEach(function (a) {
    var b = a.replace(ra, sa)
    z$1[b] = new v$1(b, 1, !1, a, 'http://www.w3.org/XML/1998/namespace', !1, !1)
  })
  ;['tabIndex', 'crossOrigin'].forEach(function (a) {
    z$1[a] = new v$1(a, 1, !1, a.toLowerCase(), null, !1, !1)
  })
  z$1.xlinkHref = new v$1('xlinkHref', 1, !1, 'xlink:href', 'http://www.w3.org/1999/xlink', !0, !1)
  ;['src', 'href', 'action', 'formAction'].forEach(function (a) {
    z$1[a] = new v$1(a, 1, !1, a.toLowerCase(), null, !0, !0)
  })
  function ta(a, b, c, d) {
    var e = z$1.hasOwnProperty(b) ? z$1[b] : null
    if (null !== e ? 0 !== e.type : d || !(2 < b.length) || ('o' !== b[0] && 'O' !== b[0]) || ('n' !== b[1] && 'N' !== b[1]))
      qa(b, c, e, d) && (c = null),
        d || null === e
          ? oa(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, '' + c))
          : e.mustUseProperty
          ? (a[e.propertyName] = null === c ? (3 === e.type ? !1 : '') : c)
          : ((b = e.attributeName),
            (d = e.attributeNamespace),
            null === c ? a.removeAttribute(b) : ((e = e.type), (c = 3 === e || (4 === e && !0 === c) ? '' : '' + c), d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c)))
  }
  var ua = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
    va = Symbol.for('react.element'),
    wa = Symbol.for('react.portal'),
    ya = Symbol.for('react.fragment'),
    za = Symbol.for('react.strict_mode'),
    Aa = Symbol.for('react.profiler'),
    Ba = Symbol.for('react.provider'),
    Ca = Symbol.for('react.context'),
    Da = Symbol.for('react.forward_ref'),
    Ea = Symbol.for('react.suspense'),
    Fa = Symbol.for('react.suspense_list'),
    Ga = Symbol.for('react.memo'),
    Ha = Symbol.for('react.lazy')
  var Ia = Symbol.for('react.offscreen')
  var Ja = Symbol.iterator
  function Ka(a) {
    if (null === a || 'object' !== typeof a) return null
    a = (Ja && a[Ja]) || a['@@iterator']
    return 'function' === typeof a ? a : null
  }
  var A$1 = Object.assign,
    La
  function Ma(a) {
    if (void 0 === La)
      try {
        throw Error()
      } catch (c) {
        var b = c.stack.trim().match(/\n( *(at )?)/)
        La = (b && b[1]) || ''
      }
    return '\n' + La + a
  }
  var Na = !1
  function Oa(a, b) {
    if (!a || Na) return ''
    Na = !0
    var c = Error.prepareStackTrace
    Error.prepareStackTrace = void 0
    try {
      if (b)
        if (
          ((b = function () {
            throw Error()
          }),
          Object.defineProperty(b.prototype, 'props', {
            set: function () {
              throw Error()
            },
          }),
          'object' === typeof Reflect && Reflect.construct)
        ) {
          try {
            Reflect.construct(b, [])
          } catch (l) {
            var d = l
          }
          Reflect.construct(a, [], b)
        } else {
          try {
            b.call()
          } catch (l) {
            d = l
          }
          a.call(b.prototype)
        }
      else {
        try {
          throw Error()
        } catch (l) {
          d = l
        }
        a()
      }
    } catch (l) {
      if (l && d && 'string' === typeof l.stack) {
        for (var e = l.stack.split('\n'), f = d.stack.split('\n'), g = e.length - 1, h = f.length - 1; 1 <= g && 0 <= h && e[g] !== f[h]; ) h--
        for (; 1 <= g && 0 <= h; g--, h--)
          if (e[g] !== f[h]) {
            if (1 !== g || 1 !== h) {
              do
                if ((g--, h--, 0 > h || e[g] !== f[h])) {
                  var k = '\n' + e[g].replace(' at new ', ' at ')
                  a.displayName && k.includes('<anonymous>') && (k = k.replace('<anonymous>', a.displayName))
                  return k
                }
              while (1 <= g && 0 <= h)
            }
            break
          }
      }
    } finally {
      ;(Na = !1), (Error.prepareStackTrace = c)
    }
    return (a = a ? a.displayName || a.name : '') ? Ma(a) : ''
  }
  function Pa(a) {
    switch (a.tag) {
      case 5:
        return Ma(a.type)
      case 16:
        return Ma('Lazy')
      case 13:
        return Ma('Suspense')
      case 19:
        return Ma('SuspenseList')
      case 0:
      case 2:
      case 15:
        return (a = Oa(a.type, !1)), a
      case 11:
        return (a = Oa(a.type.render, !1)), a
      case 1:
        return (a = Oa(a.type, !0)), a
      default:
        return ''
    }
  }
  function Qa(a) {
    if (null == a) return null
    if ('function' === typeof a) return a.displayName || a.name || null
    if ('string' === typeof a) return a
    switch (a) {
      case ya:
        return 'Fragment'
      case wa:
        return 'Portal'
      case Aa:
        return 'Profiler'
      case za:
        return 'StrictMode'
      case Ea:
        return 'Suspense'
      case Fa:
        return 'SuspenseList'
    }
    if ('object' === typeof a)
      switch (a.$$typeof) {
        case Ca:
          return (a.displayName || 'Context') + '.Consumer'
        case Ba:
          return (a._context.displayName || 'Context') + '.Provider'
        case Da:
          var b = a.render
          a = a.displayName
          a || ((a = b.displayName || b.name || ''), (a = '' !== a ? 'ForwardRef(' + a + ')' : 'ForwardRef'))
          return a
        case Ga:
          return (b = a.displayName || null), null !== b ? b : Qa(a.type) || 'Memo'
        case Ha:
          b = a._payload
          a = a._init
          try {
            return Qa(a(b))
          } catch (c) {}
      }
    return null
  }
  function Ra(a) {
    var b = a.type
    switch (a.tag) {
      case 24:
        return 'Cache'
      case 9:
        return (b.displayName || 'Context') + '.Consumer'
      case 10:
        return (b._context.displayName || 'Context') + '.Provider'
      case 18:
        return 'DehydratedFragment'
      case 11:
        return (a = b.render), (a = a.displayName || a.name || ''), b.displayName || ('' !== a ? 'ForwardRef(' + a + ')' : 'ForwardRef')
      case 7:
        return 'Fragment'
      case 5:
        return b
      case 4:
        return 'Portal'
      case 3:
        return 'Root'
      case 6:
        return 'Text'
      case 16:
        return Qa(b)
      case 8:
        return b === za ? 'StrictMode' : 'Mode'
      case 22:
        return 'Offscreen'
      case 12:
        return 'Profiler'
      case 21:
        return 'Scope'
      case 13:
        return 'Suspense'
      case 19:
        return 'SuspenseList'
      case 25:
        return 'TracingMarker'
      case 1:
      case 0:
      case 17:
      case 2:
      case 14:
      case 15:
        if ('function' === typeof b) return b.displayName || b.name || null
        if ('string' === typeof b) return b
    }
    return null
  }
  function Sa(a) {
    switch (typeof a) {
      case 'boolean':
      case 'number':
      case 'string':
      case 'undefined':
        return a
      case 'object':
        return a
      default:
        return ''
    }
  }
  function Ta(a) {
    var b = a.type
    return (a = a.nodeName) && 'input' === a.toLowerCase() && ('checkbox' === b || 'radio' === b)
  }
  function Ua(a) {
    var b = Ta(a) ? 'checked' : 'value',
      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),
      d = '' + a[b]
    if (!a.hasOwnProperty(b) && 'undefined' !== typeof c && 'function' === typeof c.get && 'function' === typeof c.set) {
      var e = c.get,
        f = c.set
      Object.defineProperty(a, b, {
        configurable: !0,
        get: function () {
          return e.call(this)
        },
        set: function (a) {
          d = '' + a
          f.call(this, a)
        },
      })
      Object.defineProperty(a, b, { enumerable: c.enumerable })
      return {
        getValue: function () {
          return d
        },
        setValue: function (a) {
          d = '' + a
        },
        stopTracking: function () {
          a._valueTracker = null
          delete a[b]
        },
      }
    }
  }
  function Va(a) {
    a._valueTracker || (a._valueTracker = Ua(a))
  }
  function Wa(a) {
    if (!a) return !1
    var b = a._valueTracker
    if (!b) return !0
    var c = b.getValue()
    var d = ''
    a && (d = Ta(a) ? (a.checked ? 'true' : 'false') : a.value)
    a = d
    return a !== c ? (b.setValue(a), !0) : !1
  }
  function Xa(a) {
    a = a || ('undefined' !== typeof document ? document : void 0)
    if ('undefined' === typeof a) return null
    try {
      return a.activeElement || a.body
    } catch (b) {
      return a.body
    }
  }
  function Ya(a, b) {
    var c = b.checked
    return A$1({}, b, { defaultChecked: void 0, defaultValue: void 0, value: void 0, checked: null != c ? c : a._wrapperState.initialChecked })
  }
  function Za(a, b) {
    var c = null == b.defaultValue ? '' : b.defaultValue,
      d = null != b.checked ? b.checked : b.defaultChecked
    c = Sa(null != b.value ? b.value : c)
    a._wrapperState = { initialChecked: d, initialValue: c, controlled: 'checkbox' === b.type || 'radio' === b.type ? null != b.checked : null != b.value }
  }
  function ab(a, b) {
    b = b.checked
    null != b && ta(a, 'checked', b, !1)
  }
  function bb(a, b) {
    ab(a, b)
    var c = Sa(b.value),
      d = b.type
    if (null != c)
      if ('number' === d) {
        if ((0 === c && '' === a.value) || a.value != c) a.value = '' + c
      } else a.value !== '' + c && (a.value = '' + c)
    else if ('submit' === d || 'reset' === d) {
      a.removeAttribute('value')
      return
    }
    b.hasOwnProperty('value') ? cb(a, b.type, c) : b.hasOwnProperty('defaultValue') && cb(a, b.type, Sa(b.defaultValue))
    null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked)
  }
  function db(a, b, c) {
    if (b.hasOwnProperty('value') || b.hasOwnProperty('defaultValue')) {
      var d = b.type
      if (!(('submit' !== d && 'reset' !== d) || (void 0 !== b.value && null !== b.value))) return
      b = '' + a._wrapperState.initialValue
      c || b === a.value || (a.value = b)
      a.defaultValue = b
    }
    c = a.name
    '' !== c && (a.name = '')
    a.defaultChecked = !!a._wrapperState.initialChecked
    '' !== c && (a.name = c)
  }
  function cb(a, b, c) {
    if ('number' !== b || Xa(a.ownerDocument) !== a) null == c ? (a.defaultValue = '' + a._wrapperState.initialValue) : a.defaultValue !== '' + c && (a.defaultValue = '' + c)
  }
  var eb = Array.isArray
  function fb(a, b, c, d) {
    a = a.options
    if (b) {
      b = {}
      for (var e = 0; e < c.length; e++) b['$' + c[e]] = !0
      for (c = 0; c < a.length; c++) (e = b.hasOwnProperty('$' + a[c].value)), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0)
    } else {
      c = '' + Sa(c)
      b = null
      for (e = 0; e < a.length; e++) {
        if (a[e].value === c) {
          a[e].selected = !0
          d && (a[e].defaultSelected = !0)
          return
        }
        null !== b || a[e].disabled || (b = a[e])
      }
      null !== b && (b.selected = !0)
    }
  }
  function gb(a, b) {
    if (null != b.dangerouslySetInnerHTML) throw Error(p$1(91))
    return A$1({}, b, { value: void 0, defaultValue: void 0, children: '' + a._wrapperState.initialValue })
  }
  function hb(a, b) {
    var c = b.value
    if (null == c) {
      c = b.children
      b = b.defaultValue
      if (null != c) {
        if (null != b) throw Error(p$1(92))
        if (eb(c)) {
          if (1 < c.length) throw Error(p$1(93))
          c = c[0]
        }
        b = c
      }
      null == b && (b = '')
      c = b
    }
    a._wrapperState = { initialValue: Sa(c) }
  }
  function ib(a, b) {
    var c = Sa(b.value),
      d = Sa(b.defaultValue)
    null != c && ((c = '' + c), c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c))
    null != d && (a.defaultValue = '' + d)
  }
  function jb(a) {
    var b = a.textContent
    b === a._wrapperState.initialValue && '' !== b && null !== b && (a.value = b)
  }
  function kb(a) {
    switch (a) {
      case 'svg':
        return 'http://www.w3.org/2000/svg'
      case 'math':
        return 'http://www.w3.org/1998/Math/MathML'
      default:
        return 'http://www.w3.org/1999/xhtml'
    }
  }
  function lb(a, b) {
    return null == a || 'http://www.w3.org/1999/xhtml' === a ? kb(b) : 'http://www.w3.org/2000/svg' === a && 'foreignObject' === b ? 'http://www.w3.org/1999/xhtml' : a
  }
  var mb,
    nb = (function (a) {
      return 'undefined' !== typeof MSApp && MSApp.execUnsafeLocalFunction
        ? function (b, c, d, e) {
            MSApp.execUnsafeLocalFunction(function () {
              return a(b, c, d, e)
            })
          }
        : a
    })(function (a, b) {
      if ('http://www.w3.org/2000/svg' !== a.namespaceURI || 'innerHTML' in a) a.innerHTML = b
      else {
        mb = mb || document.createElement('div')
        mb.innerHTML = '<svg>' + b.valueOf().toString() + '</svg>'
        for (b = mb.firstChild; a.firstChild; ) a.removeChild(a.firstChild)
        for (; b.firstChild; ) a.appendChild(b.firstChild)
      }
    })
  function ob(a, b) {
    if (b) {
      var c = a.firstChild
      if (c && c === a.lastChild && 3 === c.nodeType) {
        c.nodeValue = b
        return
      }
    }
    a.textContent = b
  }
  var pb = {
      animationIterationCount: !0,
      aspectRatio: !0,
      borderImageOutset: !0,
      borderImageSlice: !0,
      borderImageWidth: !0,
      boxFlex: !0,
      boxFlexGroup: !0,
      boxOrdinalGroup: !0,
      columnCount: !0,
      columns: !0,
      flex: !0,
      flexGrow: !0,
      flexPositive: !0,
      flexShrink: !0,
      flexNegative: !0,
      flexOrder: !0,
      gridArea: !0,
      gridRow: !0,
      gridRowEnd: !0,
      gridRowSpan: !0,
      gridRowStart: !0,
      gridColumn: !0,
      gridColumnEnd: !0,
      gridColumnSpan: !0,
      gridColumnStart: !0,
      fontWeight: !0,
      lineClamp: !0,
      lineHeight: !0,
      opacity: !0,
      order: !0,
      orphans: !0,
      tabSize: !0,
      widows: !0,
      zIndex: !0,
      zoom: !0,
      fillOpacity: !0,
      floodOpacity: !0,
      stopOpacity: !0,
      strokeDasharray: !0,
      strokeDashoffset: !0,
      strokeMiterlimit: !0,
      strokeOpacity: !0,
      strokeWidth: !0,
    },
    qb = ['Webkit', 'ms', 'Moz', 'O']
  Object.keys(pb).forEach(function (a) {
    qb.forEach(function (b) {
      b = b + a.charAt(0).toUpperCase() + a.substring(1)
      pb[b] = pb[a]
    })
  })
  function rb(a, b, c) {
    return null == b || 'boolean' === typeof b || '' === b ? '' : c || 'number' !== typeof b || 0 === b || (pb.hasOwnProperty(a) && pb[a]) ? ('' + b).trim() : b + 'px'
  }
  function sb(a, b) {
    a = a.style
    for (var c in b)
      if (b.hasOwnProperty(c)) {
        var d = 0 === c.indexOf('--'),
          e = rb(c, b[c], d)
        'float' === c && (c = 'cssFloat')
        d ? a.setProperty(c, e) : (a[c] = e)
      }
  }
  var tb = A$1(
    { menuitem: !0 },
    { area: !0, base: !0, br: !0, col: !0, embed: !0, hr: !0, img: !0, input: !0, keygen: !0, link: !0, meta: !0, param: !0, source: !0, track: !0, wbr: !0 },
  )
  function ub(a, b) {
    if (b) {
      if (tb[a] && (null != b.children || null != b.dangerouslySetInnerHTML)) throw Error(p$1(137, a))
      if (null != b.dangerouslySetInnerHTML) {
        if (null != b.children) throw Error(p$1(60))
        if ('object' !== typeof b.dangerouslySetInnerHTML || !('__html' in b.dangerouslySetInnerHTML)) throw Error(p$1(61))
      }
      if (null != b.style && 'object' !== typeof b.style) throw Error(p$1(62))
    }
  }
  function vb(a, b) {
    if (-1 === a.indexOf('-')) return 'string' === typeof b.is
    switch (a) {
      case 'annotation-xml':
      case 'color-profile':
      case 'font-face':
      case 'font-face-src':
      case 'font-face-uri':
      case 'font-face-format':
      case 'font-face-name':
      case 'missing-glyph':
        return !1
      default:
        return !0
    }
  }
  var wb = null
  function xb(a) {
    a = a.target || a.srcElement || window
    a.correspondingUseElement && (a = a.correspondingUseElement)
    return 3 === a.nodeType ? a.parentNode : a
  }
  var yb = null,
    zb = null,
    Ab = null
  function Bb(a) {
    if ((a = Cb(a))) {
      if ('function' !== typeof yb) throw Error(p$1(280))
      var b = a.stateNode
      b && ((b = Db(b)), yb(a.stateNode, a.type, b))
    }
  }
  function Eb(a) {
    zb ? (Ab ? Ab.push(a) : (Ab = [a])) : (zb = a)
  }
  function Fb() {
    if (zb) {
      var a = zb,
        b = Ab
      Ab = zb = null
      Bb(a)
      if (b) for (a = 0; a < b.length; a++) Bb(b[a])
    }
  }
  function Gb(a, b) {
    return a(b)
  }
  function Hb() {}
  var Ib = !1
  function Jb(a, b, c) {
    if (Ib) return a(b, c)
    Ib = !0
    try {
      return Gb(a, b, c)
    } finally {
      if (((Ib = !1), null !== zb || null !== Ab)) Hb(), Fb()
    }
  }
  function Kb(a, b) {
    var c = a.stateNode
    if (null === c) return null
    var d = Db(c)
    if (null === d) return null
    c = d[b]
    a: switch (b) {
      case 'onClick':
      case 'onClickCapture':
      case 'onDoubleClick':
      case 'onDoubleClickCapture':
      case 'onMouseDown':
      case 'onMouseDownCapture':
      case 'onMouseMove':
      case 'onMouseMoveCapture':
      case 'onMouseUp':
      case 'onMouseUpCapture':
      case 'onMouseEnter':
        ;(d = !d.disabled) || ((a = a.type), (d = !('button' === a || 'input' === a || 'select' === a || 'textarea' === a)))
        a = !d
        break a
      default:
        a = !1
    }
    if (a) return null
    if (c && 'function' !== typeof c) throw Error(p$1(231, b, typeof c))
    return c
  }
  var Lb = !1
  if (ia)
    try {
      var Mb = {}
      Object.defineProperty(Mb, 'passive', {
        get: function () {
          Lb = !0
        },
      })
      window.addEventListener('test', Mb, Mb)
      window.removeEventListener('test', Mb, Mb)
    } catch (a) {
      Lb = !1
    }
  function Nb(a, b, c, d, e, f, g, h, k) {
    var l = Array.prototype.slice.call(arguments, 3)
    try {
      b.apply(c, l)
    } catch (m) {
      this.onError(m)
    }
  }
  var Ob = !1,
    Pb = null,
    Qb = !1,
    Rb = null,
    Sb = {
      onError: function (a) {
        Ob = !0
        Pb = a
      },
    }
  function Tb(a, b, c, d, e, f, g, h, k) {
    Ob = !1
    Pb = null
    Nb.apply(Sb, arguments)
  }
  function Ub(a, b, c, d, e, f, g, h, k) {
    Tb.apply(this, arguments)
    if (Ob) {
      if (Ob) {
        var l = Pb
        Ob = !1
        Pb = null
      } else throw Error(p$1(198))
      Qb || ((Qb = !0), (Rb = l))
    }
  }
  function Vb(a) {
    var b = a,
      c = a
    if (a.alternate) for (; b.return; ) b = b.return
    else {
      a = b
      do (b = a), 0 !== (b.flags & 4098) && (c = b.return), (a = b.return)
      while (a)
    }
    return 3 === b.tag ? c : null
  }
  function Wb(a) {
    if (13 === a.tag) {
      var b = a.memoizedState
      null === b && ((a = a.alternate), null !== a && (b = a.memoizedState))
      if (null !== b) return b.dehydrated
    }
    return null
  }
  function Xb(a) {
    if (Vb(a) !== a) throw Error(p$1(188))
  }
  function Yb(a) {
    var b = a.alternate
    if (!b) {
      b = Vb(a)
      if (null === b) throw Error(p$1(188))
      return b !== a ? null : a
    }
    for (var c = a, d = b; ; ) {
      var e = c.return
      if (null === e) break
      var f = e.alternate
      if (null === f) {
        d = e.return
        if (null !== d) {
          c = d
          continue
        }
        break
      }
      if (e.child === f.child) {
        for (f = e.child; f; ) {
          if (f === c) return Xb(e), a
          if (f === d) return Xb(e), b
          f = f.sibling
        }
        throw Error(p$1(188))
      }
      if (c.return !== d.return) (c = e), (d = f)
      else {
        for (var g = !1, h = e.child; h; ) {
          if (h === c) {
            g = !0
            c = e
            d = f
            break
          }
          if (h === d) {
            g = !0
            d = e
            c = f
            break
          }
          h = h.sibling
        }
        if (!g) {
          for (h = f.child; h; ) {
            if (h === c) {
              g = !0
              c = f
              d = e
              break
            }
            if (h === d) {
              g = !0
              d = f
              c = e
              break
            }
            h = h.sibling
          }
          if (!g) throw Error(p$1(189))
        }
      }
      if (c.alternate !== d) throw Error(p$1(190))
    }
    if (3 !== c.tag) throw Error(p$1(188))
    return c.stateNode.current === c ? a : b
  }
  function Zb(a) {
    a = Yb(a)
    return null !== a ? $b(a) : null
  }
  function $b(a) {
    if (5 === a.tag || 6 === a.tag) return a
    for (a = a.child; null !== a; ) {
      var b = $b(a)
      if (null !== b) return b
      a = a.sibling
    }
    return null
  }
  var ac = ca.unstable_scheduleCallback,
    bc = ca.unstable_cancelCallback,
    cc = ca.unstable_shouldYield,
    dc = ca.unstable_requestPaint,
    B = ca.unstable_now,
    ec = ca.unstable_getCurrentPriorityLevel,
    fc = ca.unstable_ImmediatePriority,
    gc = ca.unstable_UserBlockingPriority,
    hc = ca.unstable_NormalPriority,
    ic = ca.unstable_LowPriority,
    jc = ca.unstable_IdlePriority,
    kc = null,
    lc = null
  function mc(a) {
    if (lc && 'function' === typeof lc.onCommitFiberRoot)
      try {
        lc.onCommitFiberRoot(kc, a, void 0, 128 === (a.current.flags & 128))
      } catch (b) {}
  }
  var oc = Math.clz32 ? Math.clz32 : nc,
    pc = Math.log,
    qc = Math.LN2
  function nc(a) {
    a >>>= 0
    return 0 === a ? 32 : (31 - ((pc(a) / qc) | 0)) | 0
  }
  var rc = 64,
    sc = 4194304
  function tc(a) {
    switch (a & -a) {
      case 1:
        return 1
      case 2:
        return 2
      case 4:
        return 4
      case 8:
        return 8
      case 16:
        return 16
      case 32:
        return 32
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return a & 4194240
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return a & 130023424
      case 134217728:
        return 134217728
      case 268435456:
        return 268435456
      case 536870912:
        return 536870912
      case 1073741824:
        return 1073741824
      default:
        return a
    }
  }
  function uc(a, b) {
    var c = a.pendingLanes
    if (0 === c) return 0
    var d = 0,
      e = a.suspendedLanes,
      f = a.pingedLanes,
      g = c & 268435455
    if (0 !== g) {
      var h = g & ~e
      0 !== h ? (d = tc(h)) : ((f &= g), 0 !== f && (d = tc(f)))
    } else (g = c & ~e), 0 !== g ? (d = tc(g)) : 0 !== f && (d = tc(f))
    if (0 === d) return 0
    if (0 !== b && b !== d && 0 === (b & e) && ((e = d & -d), (f = b & -b), e >= f || (16 === e && 0 !== (f & 4194240)))) return b
    0 !== (d & 4) && (d |= c & 16)
    b = a.entangledLanes
    if (0 !== b) for (a = a.entanglements, b &= d; 0 < b; ) (c = 31 - oc(b)), (e = 1 << c), (d |= a[c]), (b &= ~e)
    return d
  }
  function vc(a, b) {
    switch (a) {
      case 1:
      case 2:
      case 4:
        return b + 250
      case 8:
      case 16:
      case 32:
      case 64:
      case 128:
      case 256:
      case 512:
      case 1024:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
      case 131072:
      case 262144:
      case 524288:
      case 1048576:
      case 2097152:
        return b + 5e3
      case 4194304:
      case 8388608:
      case 16777216:
      case 33554432:
      case 67108864:
        return -1
      case 134217728:
      case 268435456:
      case 536870912:
      case 1073741824:
        return -1
      default:
        return -1
    }
  }
  function wc(a, b) {
    for (var c = a.suspendedLanes, d = a.pingedLanes, e = a.expirationTimes, f = a.pendingLanes; 0 < f; ) {
      var g = 31 - oc(f),
        h = 1 << g,
        k = e[g]
      if (-1 === k) {
        if (0 === (h & c) || 0 !== (h & d)) e[g] = vc(h, b)
      } else k <= b && (a.expiredLanes |= h)
      f &= ~h
    }
  }
  function xc(a) {
    a = a.pendingLanes & -1073741825
    return 0 !== a ? a : a & 1073741824 ? 1073741824 : 0
  }
  function yc() {
    var a = rc
    rc <<= 1
    0 === (rc & 4194240) && (rc = 64)
    return a
  }
  function zc(a) {
    for (var b = [], c = 0; 31 > c; c++) b.push(a)
    return b
  }
  function Ac(a, b, c) {
    a.pendingLanes |= b
    536870912 !== b && ((a.suspendedLanes = 0), (a.pingedLanes = 0))
    a = a.eventTimes
    b = 31 - oc(b)
    a[b] = c
  }
  function Bc(a, b) {
    var c = a.pendingLanes & ~b
    a.pendingLanes = b
    a.suspendedLanes = 0
    a.pingedLanes = 0
    a.expiredLanes &= b
    a.mutableReadLanes &= b
    a.entangledLanes &= b
    b = a.entanglements
    var d = a.eventTimes
    for (a = a.expirationTimes; 0 < c; ) {
      var e = 31 - oc(c),
        f = 1 << e
      b[e] = 0
      d[e] = -1
      a[e] = -1
      c &= ~f
    }
  }
  function Cc(a, b) {
    var c = (a.entangledLanes |= b)
    for (a = a.entanglements; c; ) {
      var d = 31 - oc(c),
        e = 1 << d
      ;(e & b) | (a[d] & b) && (a[d] |= b)
      c &= ~e
    }
  }
  var C = 0
  function Dc(a) {
    a &= -a
    return 1 < a ? (4 < a ? (0 !== (a & 268435455) ? 16 : 536870912) : 4) : 1
  }
  var Ec,
    Fc,
    Gc,
    Hc,
    Ic,
    Jc = !1,
    Kc = [],
    Lc = null,
    Mc = null,
    Nc = null,
    Oc = new Map(),
    Pc = new Map(),
    Qc = [],
    Rc =
      'mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit'.split(
        ' ',
      )
  function Sc(a, b) {
    switch (a) {
      case 'focusin':
      case 'focusout':
        Lc = null
        break
      case 'dragenter':
      case 'dragleave':
        Mc = null
        break
      case 'mouseover':
      case 'mouseout':
        Nc = null
        break
      case 'pointerover':
      case 'pointerout':
        Oc.delete(b.pointerId)
        break
      case 'gotpointercapture':
      case 'lostpointercapture':
        Pc.delete(b.pointerId)
    }
  }
  function Tc(a, b, c, d, e, f) {
    if (null === a || a.nativeEvent !== f)
      return (a = { blockedOn: b, domEventName: c, eventSystemFlags: d, nativeEvent: f, targetContainers: [e] }), null !== b && ((b = Cb(b)), null !== b && Fc(b)), a
    a.eventSystemFlags |= d
    b = a.targetContainers
    null !== e && -1 === b.indexOf(e) && b.push(e)
    return a
  }
  function Uc(a, b, c, d, e) {
    switch (b) {
      case 'focusin':
        return (Lc = Tc(Lc, a, b, c, d, e)), !0
      case 'dragenter':
        return (Mc = Tc(Mc, a, b, c, d, e)), !0
      case 'mouseover':
        return (Nc = Tc(Nc, a, b, c, d, e)), !0
      case 'pointerover':
        var f = e.pointerId
        Oc.set(f, Tc(Oc.get(f) || null, a, b, c, d, e))
        return !0
      case 'gotpointercapture':
        return (f = e.pointerId), Pc.set(f, Tc(Pc.get(f) || null, a, b, c, d, e)), !0
    }
    return !1
  }
  function Vc(a) {
    var b = Wc(a.target)
    if (null !== b) {
      var c = Vb(b)
      if (null !== c)
        if (((b = c.tag), 13 === b)) {
          if (((b = Wb(c)), null !== b)) {
            a.blockedOn = b
            Ic(a.priority, function () {
              Gc(c)
            })
            return
          }
        } else if (3 === b && c.stateNode.current.memoizedState.isDehydrated) {
          a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null
          return
        }
    }
    a.blockedOn = null
  }
  function Xc(a) {
    if (null !== a.blockedOn) return !1
    for (var b = a.targetContainers; 0 < b.length; ) {
      var c = Yc(a.domEventName, a.eventSystemFlags, b[0], a.nativeEvent)
      if (null === c) {
        c = a.nativeEvent
        var d = new c.constructor(c.type, c)
        wb = d
        c.target.dispatchEvent(d)
        wb = null
      } else return (b = Cb(c)), null !== b && Fc(b), (a.blockedOn = c), !1
      b.shift()
    }
    return !0
  }
  function Zc(a, b, c) {
    Xc(a) && c.delete(b)
  }
  function $c() {
    Jc = !1
    null !== Lc && Xc(Lc) && (Lc = null)
    null !== Mc && Xc(Mc) && (Mc = null)
    null !== Nc && Xc(Nc) && (Nc = null)
    Oc.forEach(Zc)
    Pc.forEach(Zc)
  }
  function ad(a, b) {
    a.blockedOn === b && ((a.blockedOn = null), Jc || ((Jc = !0), ca.unstable_scheduleCallback(ca.unstable_NormalPriority, $c)))
  }
  function bd(a) {
    function b(b) {
      return ad(b, a)
    }
    if (0 < Kc.length) {
      ad(Kc[0], a)
      for (var c = 1; c < Kc.length; c++) {
        var d = Kc[c]
        d.blockedOn === a && (d.blockedOn = null)
      }
    }
    null !== Lc && ad(Lc, a)
    null !== Mc && ad(Mc, a)
    null !== Nc && ad(Nc, a)
    Oc.forEach(b)
    Pc.forEach(b)
    for (c = 0; c < Qc.length; c++) (d = Qc[c]), d.blockedOn === a && (d.blockedOn = null)
    for (; 0 < Qc.length && ((c = Qc[0]), null === c.blockedOn); ) Vc(c), null === c.blockedOn && Qc.shift()
  }
  var cd = ua.ReactCurrentBatchConfig,
    dd = !0
  function ed(a, b, c, d) {
    var e = C,
      f = cd.transition
    cd.transition = null
    try {
      ;(C = 1), fd(a, b, c, d)
    } finally {
      ;(C = e), (cd.transition = f)
    }
  }
  function gd(a, b, c, d) {
    var e = C,
      f = cd.transition
    cd.transition = null
    try {
      ;(C = 4), fd(a, b, c, d)
    } finally {
      ;(C = e), (cd.transition = f)
    }
  }
  function fd(a, b, c, d) {
    if (dd) {
      var e = Yc(a, b, c, d)
      if (null === e) hd(a, b, d, id, c), Sc(a, d)
      else if (Uc(e, a, b, c, d)) d.stopPropagation()
      else if ((Sc(a, d), b & 4 && -1 < Rc.indexOf(a))) {
        for (; null !== e; ) {
          var f = Cb(e)
          null !== f && Ec(f)
          f = Yc(a, b, c, d)
          null === f && hd(a, b, d, id, c)
          if (f === e) break
          e = f
        }
        null !== e && d.stopPropagation()
      } else hd(a, b, d, null, c)
    }
  }
  var id = null
  function Yc(a, b, c, d) {
    id = null
    a = xb(d)
    a = Wc(a)
    if (null !== a)
      if (((b = Vb(a)), null === b)) a = null
      else if (((c = b.tag), 13 === c)) {
        a = Wb(b)
        if (null !== a) return a
        a = null
      } else if (3 === c) {
        if (b.stateNode.current.memoizedState.isDehydrated) return 3 === b.tag ? b.stateNode.containerInfo : null
        a = null
      } else b !== a && (a = null)
    id = a
    return null
  }
  function jd(a) {
    switch (a) {
      case 'cancel':
      case 'click':
      case 'close':
      case 'contextmenu':
      case 'copy':
      case 'cut':
      case 'auxclick':
      case 'dblclick':
      case 'dragend':
      case 'dragstart':
      case 'drop':
      case 'focusin':
      case 'focusout':
      case 'input':
      case 'invalid':
      case 'keydown':
      case 'keypress':
      case 'keyup':
      case 'mousedown':
      case 'mouseup':
      case 'paste':
      case 'pause':
      case 'play':
      case 'pointercancel':
      case 'pointerdown':
      case 'pointerup':
      case 'ratechange':
      case 'reset':
      case 'resize':
      case 'seeked':
      case 'submit':
      case 'touchcancel':
      case 'touchend':
      case 'touchstart':
      case 'volumechange':
      case 'change':
      case 'selectionchange':
      case 'textInput':
      case 'compositionstart':
      case 'compositionend':
      case 'compositionupdate':
      case 'beforeblur':
      case 'afterblur':
      case 'beforeinput':
      case 'blur':
      case 'fullscreenchange':
      case 'focus':
      case 'hashchange':
      case 'popstate':
      case 'select':
      case 'selectstart':
        return 1
      case 'drag':
      case 'dragenter':
      case 'dragexit':
      case 'dragleave':
      case 'dragover':
      case 'mousemove':
      case 'mouseout':
      case 'mouseover':
      case 'pointermove':
      case 'pointerout':
      case 'pointerover':
      case 'scroll':
      case 'toggle':
      case 'touchmove':
      case 'wheel':
      case 'mouseenter':
      case 'mouseleave':
      case 'pointerenter':
      case 'pointerleave':
        return 4
      case 'message':
        switch (ec()) {
          case fc:
            return 1
          case gc:
            return 4
          case hc:
          case ic:
            return 16
          case jc:
            return 536870912
          default:
            return 16
        }
      default:
        return 16
    }
  }
  var kd = null,
    ld = null,
    md = null
  function nd() {
    if (md) return md
    var a,
      b = ld,
      c = b.length,
      d,
      e = 'value' in kd ? kd.value : kd.textContent,
      f = e.length
    for (a = 0; a < c && b[a] === e[a]; a++);
    var g = c - a
    for (d = 1; d <= g && b[c - d] === e[f - d]; d++);
    return (md = e.slice(a, 1 < d ? 1 - d : void 0))
  }
  function od(a) {
    var b = a.keyCode
    'charCode' in a ? ((a = a.charCode), 0 === a && 13 === b && (a = 13)) : (a = b)
    10 === a && (a = 13)
    return 32 <= a || 13 === a ? a : 0
  }
  function pd() {
    return !0
  }
  function qd() {
    return !1
  }
  function rd(a) {
    function b(b, d, e, f, g) {
      this._reactName = b
      this._targetInst = e
      this.type = d
      this.nativeEvent = f
      this.target = g
      this.currentTarget = null
      for (var c in a) a.hasOwnProperty(c) && ((b = a[c]), (this[c] = b ? b(f) : f[c]))
      this.isDefaultPrevented = (null != f.defaultPrevented ? f.defaultPrevented : !1 === f.returnValue) ? pd : qd
      this.isPropagationStopped = qd
      return this
    }
    A$1(b.prototype, {
      preventDefault: function () {
        this.defaultPrevented = !0
        var a = this.nativeEvent
        a && (a.preventDefault ? a.preventDefault() : 'unknown' !== typeof a.returnValue && (a.returnValue = !1), (this.isDefaultPrevented = pd))
      },
      stopPropagation: function () {
        var a = this.nativeEvent
        a && (a.stopPropagation ? a.stopPropagation() : 'unknown' !== typeof a.cancelBubble && (a.cancelBubble = !0), (this.isPropagationStopped = pd))
      },
      persist: function () {},
      isPersistent: pd,
    })
    return b
  }
  var sd = {
      eventPhase: 0,
      bubbles: 0,
      cancelable: 0,
      timeStamp: function (a) {
        return a.timeStamp || Date.now()
      },
      defaultPrevented: 0,
      isTrusted: 0,
    },
    td = rd(sd),
    ud = A$1({}, sd, { view: 0, detail: 0 }),
    vd = rd(ud),
    wd,
    xd,
    yd,
    Ad = A$1({}, ud, {
      screenX: 0,
      screenY: 0,
      clientX: 0,
      clientY: 0,
      pageX: 0,
      pageY: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      getModifierState: zd,
      button: 0,
      buttons: 0,
      relatedTarget: function (a) {
        return void 0 === a.relatedTarget ? (a.fromElement === a.srcElement ? a.toElement : a.fromElement) : a.relatedTarget
      },
      movementX: function (a) {
        if ('movementX' in a) return a.movementX
        a !== yd && (yd && 'mousemove' === a.type ? ((wd = a.screenX - yd.screenX), (xd = a.screenY - yd.screenY)) : (xd = wd = 0), (yd = a))
        return wd
      },
      movementY: function (a) {
        return 'movementY' in a ? a.movementY : xd
      },
    }),
    Bd = rd(Ad),
    Cd = A$1({}, Ad, { dataTransfer: 0 }),
    Dd = rd(Cd),
    Ed = A$1({}, ud, { relatedTarget: 0 }),
    Fd = rd(Ed),
    Gd = A$1({}, sd, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
    Hd = rd(Gd),
    Id = A$1({}, sd, {
      clipboardData: function (a) {
        return 'clipboardData' in a ? a.clipboardData : window.clipboardData
      },
    }),
    Jd = rd(Id),
    Kd = A$1({}, sd, { data: 0 }),
    Ld = rd(Kd),
    Md = {
      Esc: 'Escape',
      Spacebar: ' ',
      Left: 'ArrowLeft',
      Up: 'ArrowUp',
      Right: 'ArrowRight',
      Down: 'ArrowDown',
      Del: 'Delete',
      Win: 'OS',
      Menu: 'ContextMenu',
      Apps: 'ContextMenu',
      Scroll: 'ScrollLock',
      MozPrintableKey: 'Unidentified',
    },
    Nd = {
      8: 'Backspace',
      9: 'Tab',
      12: 'Clear',
      13: 'Enter',
      16: 'Shift',
      17: 'Control',
      18: 'Alt',
      19: 'Pause',
      20: 'CapsLock',
      27: 'Escape',
      32: ' ',
      33: 'PageUp',
      34: 'PageDown',
      35: 'End',
      36: 'Home',
      37: 'ArrowLeft',
      38: 'ArrowUp',
      39: 'ArrowRight',
      40: 'ArrowDown',
      45: 'Insert',
      46: 'Delete',
      112: 'F1',
      113: 'F2',
      114: 'F3',
      115: 'F4',
      116: 'F5',
      117: 'F6',
      118: 'F7',
      119: 'F8',
      120: 'F9',
      121: 'F10',
      122: 'F11',
      123: 'F12',
      144: 'NumLock',
      145: 'ScrollLock',
      224: 'Meta',
    },
    Od = { Alt: 'altKey', Control: 'ctrlKey', Meta: 'metaKey', Shift: 'shiftKey' }
  function Pd(a) {
    var b = this.nativeEvent
    return b.getModifierState ? b.getModifierState(a) : (a = Od[a]) ? !!b[a] : !1
  }
  function zd() {
    return Pd
  }
  var Qd = A$1({}, ud, {
      key: function (a) {
        if (a.key) {
          var b = Md[a.key] || a.key
          if ('Unidentified' !== b) return b
        }
        return 'keypress' === a.type
          ? ((a = od(a)), 13 === a ? 'Enter' : String.fromCharCode(a))
          : 'keydown' === a.type || 'keyup' === a.type
          ? Nd[a.keyCode] || 'Unidentified'
          : ''
      },
      code: 0,
      location: 0,
      ctrlKey: 0,
      shiftKey: 0,
      altKey: 0,
      metaKey: 0,
      repeat: 0,
      locale: 0,
      getModifierState: zd,
      charCode: function (a) {
        return 'keypress' === a.type ? od(a) : 0
      },
      keyCode: function (a) {
        return 'keydown' === a.type || 'keyup' === a.type ? a.keyCode : 0
      },
      which: function (a) {
        return 'keypress' === a.type ? od(a) : 'keydown' === a.type || 'keyup' === a.type ? a.keyCode : 0
      },
    }),
    Rd = rd(Qd),
    Sd = A$1({}, Ad, { pointerId: 0, width: 0, height: 0, pressure: 0, tangentialPressure: 0, tiltX: 0, tiltY: 0, twist: 0, pointerType: 0, isPrimary: 0 }),
    Td = rd(Sd),
    Ud = A$1({}, ud, { touches: 0, targetTouches: 0, changedTouches: 0, altKey: 0, metaKey: 0, ctrlKey: 0, shiftKey: 0, getModifierState: zd }),
    Vd = rd(Ud),
    Wd = A$1({}, sd, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
    Xd = rd(Wd),
    Yd = A$1({}, Ad, {
      deltaX: function (a) {
        return 'deltaX' in a ? a.deltaX : 'wheelDeltaX' in a ? -a.wheelDeltaX : 0
      },
      deltaY: function (a) {
        return 'deltaY' in a ? a.deltaY : 'wheelDeltaY' in a ? -a.wheelDeltaY : 'wheelDelta' in a ? -a.wheelDelta : 0
      },
      deltaZ: 0,
      deltaMode: 0,
    }),
    Zd = rd(Yd),
    $d = [9, 13, 27, 32],
    ae = ia && 'CompositionEvent' in window,
    be = null
  ia && 'documentMode' in document && (be = document.documentMode)
  var ce = ia && 'TextEvent' in window && !be,
    de = ia && (!ae || (be && 8 < be && 11 >= be)),
    ee = String.fromCharCode(32),
    fe = !1
  function ge(a, b) {
    switch (a) {
      case 'keyup':
        return -1 !== $d.indexOf(b.keyCode)
      case 'keydown':
        return 229 !== b.keyCode
      case 'keypress':
      case 'mousedown':
      case 'focusout':
        return !0
      default:
        return !1
    }
  }
  function he(a) {
    a = a.detail
    return 'object' === typeof a && 'data' in a ? a.data : null
  }
  var ie = !1
  function je(a, b) {
    switch (a) {
      case 'compositionend':
        return he(b)
      case 'keypress':
        if (32 !== b.which) return null
        fe = !0
        return ee
      case 'textInput':
        return (a = b.data), a === ee && fe ? null : a
      default:
        return null
    }
  }
  function ke(a, b) {
    if (ie) return 'compositionend' === a || (!ae && ge(a, b)) ? ((a = nd()), (md = ld = kd = null), (ie = !1), a) : null
    switch (a) {
      case 'paste':
        return null
      case 'keypress':
        if (!(b.ctrlKey || b.altKey || b.metaKey) || (b.ctrlKey && b.altKey)) {
          if (b.char && 1 < b.char.length) return b.char
          if (b.which) return String.fromCharCode(b.which)
        }
        return null
      case 'compositionend':
        return de && 'ko' !== b.locale ? null : b.data
      default:
        return null
    }
  }
  var le = {
    color: !0,
    date: !0,
    datetime: !0,
    'datetime-local': !0,
    email: !0,
    month: !0,
    number: !0,
    password: !0,
    range: !0,
    search: !0,
    tel: !0,
    text: !0,
    time: !0,
    url: !0,
    week: !0,
  }
  function me(a) {
    var b = a && a.nodeName && a.nodeName.toLowerCase()
    return 'input' === b ? !!le[a.type] : 'textarea' === b ? !0 : !1
  }
  function ne(a, b, c, d) {
    Eb(d)
    b = oe(b, 'onChange')
    0 < b.length && ((c = new td('onChange', 'change', null, c, d)), a.push({ event: c, listeners: b }))
  }
  var pe = null,
    qe = null
  function re(a) {
    se(a, 0)
  }
  function te(a) {
    var b = ue(a)
    if (Wa(b)) return a
  }
  function ve(a, b) {
    if ('change' === a) return b
  }
  var we = !1
  if (ia) {
    var xe
    if (ia) {
      var ye = 'oninput' in document
      if (!ye) {
        var ze = document.createElement('div')
        ze.setAttribute('oninput', 'return;')
        ye = 'function' === typeof ze.oninput
      }
      xe = ye
    } else xe = !1
    we = xe && (!document.documentMode || 9 < document.documentMode)
  }
  function Ae() {
    pe && (pe.detachEvent('onpropertychange', Be), (qe = pe = null))
  }
  function Be(a) {
    if ('value' === a.propertyName && te(qe)) {
      var b = []
      ne(b, qe, a, xb(a))
      Jb(re, b)
    }
  }
  function Ce(a, b, c) {
    'focusin' === a ? (Ae(), (pe = b), (qe = c), pe.attachEvent('onpropertychange', Be)) : 'focusout' === a && Ae()
  }
  function De(a) {
    if ('selectionchange' === a || 'keyup' === a || 'keydown' === a) return te(qe)
  }
  function Ee(a, b) {
    if ('click' === a) return te(b)
  }
  function Fe(a, b) {
    if ('input' === a || 'change' === a) return te(b)
  }
  function Ge(a, b) {
    return (a === b && (0 !== a || 1 / a === 1 / b)) || (a !== a && b !== b)
  }
  var He = 'function' === typeof Object.is ? Object.is : Ge
  function Ie(a, b) {
    if (He(a, b)) return !0
    if ('object' !== typeof a || null === a || 'object' !== typeof b || null === b) return !1
    var c = Object.keys(a),
      d = Object.keys(b)
    if (c.length !== d.length) return !1
    for (d = 0; d < c.length; d++) {
      var e = c[d]
      if (!ja.call(b, e) || !He(a[e], b[e])) return !1
    }
    return !0
  }
  function Je(a) {
    for (; a && a.firstChild; ) a = a.firstChild
    return a
  }
  function Ke(a, b) {
    var c = Je(a)
    a = 0
    for (var d; c; ) {
      if (3 === c.nodeType) {
        d = a + c.textContent.length
        if (a <= b && d >= b) return { node: c, offset: b - a }
        a = d
      }
      a: {
        for (; c; ) {
          if (c.nextSibling) {
            c = c.nextSibling
            break a
          }
          c = c.parentNode
        }
        c = void 0
      }
      c = Je(c)
    }
  }
  function Le(a, b) {
    return a && b
      ? a === b
        ? !0
        : a && 3 === a.nodeType
        ? !1
        : b && 3 === b.nodeType
        ? Le(a, b.parentNode)
        : 'contains' in a
        ? a.contains(b)
        : a.compareDocumentPosition
        ? !!(a.compareDocumentPosition(b) & 16)
        : !1
      : !1
  }
  function Me() {
    for (var a = window, b = Xa(); b instanceof a.HTMLIFrameElement; ) {
      try {
        var c = 'string' === typeof b.contentWindow.location.href
      } catch (d) {
        c = !1
      }
      if (c) a = b.contentWindow
      else break
      b = Xa(a.document)
    }
    return b
  }
  function Ne(a) {
    var b = a && a.nodeName && a.nodeName.toLowerCase()
    return (
      b &&
      (('input' === b && ('text' === a.type || 'search' === a.type || 'tel' === a.type || 'url' === a.type || 'password' === a.type)) ||
        'textarea' === b ||
        'true' === a.contentEditable)
    )
  }
  function Oe(a) {
    var b = Me(),
      c = a.focusedElem,
      d = a.selectionRange
    if (b !== c && c && c.ownerDocument && Le(c.ownerDocument.documentElement, c)) {
      if (null !== d && Ne(c))
        if (((b = d.start), (a = d.end), void 0 === a && (a = b), 'selectionStart' in c)) (c.selectionStart = b), (c.selectionEnd = Math.min(a, c.value.length))
        else if (((a = ((b = c.ownerDocument || document) && b.defaultView) || window), a.getSelection)) {
          a = a.getSelection()
          var e = c.textContent.length,
            f = Math.min(d.start, e)
          d = void 0 === d.end ? f : Math.min(d.end, e)
          !a.extend && f > d && ((e = d), (d = f), (f = e))
          e = Ke(c, f)
          var g = Ke(c, d)
          e &&
            g &&
            (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) &&
            ((b = b.createRange()),
            b.setStart(e.node, e.offset),
            a.removeAllRanges(),
            f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)))
        }
      b = []
      for (a = c; (a = a.parentNode); ) 1 === a.nodeType && b.push({ element: a, left: a.scrollLeft, top: a.scrollTop })
      'function' === typeof c.focus && c.focus()
      for (c = 0; c < b.length; c++) (a = b[c]), (a.element.scrollLeft = a.left), (a.element.scrollTop = a.top)
    }
  }
  var Pe = ia && 'documentMode' in document && 11 >= document.documentMode,
    Qe = null,
    Re = null,
    Se = null,
    Te = !1
  function Ue(a, b, c) {
    var d = c.window === c ? c.document : 9 === c.nodeType ? c : c.ownerDocument
    Te ||
      null == Qe ||
      Qe !== Xa(d) ||
      ((d = Qe),
      'selectionStart' in d && Ne(d)
        ? (d = { start: d.selectionStart, end: d.selectionEnd })
        : ((d = ((d.ownerDocument && d.ownerDocument.defaultView) || window).getSelection()),
          (d = { anchorNode: d.anchorNode, anchorOffset: d.anchorOffset, focusNode: d.focusNode, focusOffset: d.focusOffset })),
      (Se && Ie(Se, d)) ||
        ((Se = d), (d = oe(Re, 'onSelect')), 0 < d.length && ((b = new td('onSelect', 'select', null, b, c)), a.push({ event: b, listeners: d }), (b.target = Qe))))
  }
  function Ve(a, b) {
    var c = {}
    c[a.toLowerCase()] = b.toLowerCase()
    c['Webkit' + a] = 'webkit' + b
    c['Moz' + a] = 'moz' + b
    return c
  }
  var We = {
      animationend: Ve('Animation', 'AnimationEnd'),
      animationiteration: Ve('Animation', 'AnimationIteration'),
      animationstart: Ve('Animation', 'AnimationStart'),
      transitionend: Ve('Transition', 'TransitionEnd'),
    },
    Xe = {},
    Ye = {}
  ia &&
    ((Ye = document.createElement('div').style),
    'AnimationEvent' in window || (delete We.animationend.animation, delete We.animationiteration.animation, delete We.animationstart.animation),
    'TransitionEvent' in window || delete We.transitionend.transition)
  function Ze(a) {
    if (Xe[a]) return Xe[a]
    if (!We[a]) return a
    var b = We[a],
      c
    for (c in b) if (b.hasOwnProperty(c) && c in Ye) return (Xe[a] = b[c])
    return a
  }
  var $e = Ze('animationend'),
    af = Ze('animationiteration'),
    bf = Ze('animationstart'),
    cf = Ze('transitionend'),
    df = new Map(),
    ef =
      'abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel'.split(
        ' ',
      )
  function ff(a, b) {
    df.set(a, b)
    fa(b, [a])
  }
  for (var gf = 0; gf < ef.length; gf++) {
    var hf = ef[gf],
      jf = hf.toLowerCase(),
      kf = hf[0].toUpperCase() + hf.slice(1)
    ff(jf, 'on' + kf)
  }
  ff($e, 'onAnimationEnd')
  ff(af, 'onAnimationIteration')
  ff(bf, 'onAnimationStart')
  ff('dblclick', 'onDoubleClick')
  ff('focusin', 'onFocus')
  ff('focusout', 'onBlur')
  ff(cf, 'onTransitionEnd')
  ha('onMouseEnter', ['mouseout', 'mouseover'])
  ha('onMouseLeave', ['mouseout', 'mouseover'])
  ha('onPointerEnter', ['pointerout', 'pointerover'])
  ha('onPointerLeave', ['pointerout', 'pointerover'])
  fa('onChange', 'change click focusin focusout input keydown keyup selectionchange'.split(' '))
  fa('onSelect', 'focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange'.split(' '))
  fa('onBeforeInput', ['compositionend', 'keypress', 'textInput', 'paste'])
  fa('onCompositionEnd', 'compositionend focusout keydown keypress keyup mousedown'.split(' '))
  fa('onCompositionStart', 'compositionstart focusout keydown keypress keyup mousedown'.split(' '))
  fa('onCompositionUpdate', 'compositionupdate focusout keydown keypress keyup mousedown'.split(' '))
  var lf =
      'abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting'.split(
        ' ',
      ),
    mf = new Set('cancel close invalid load scroll toggle'.split(' ').concat(lf))
  function nf(a, b, c) {
    var d = a.type || 'unknown-event'
    a.currentTarget = c
    Ub(d, b, void 0, a)
    a.currentTarget = null
  }
  function se(a, b) {
    b = 0 !== (b & 4)
    for (var c = 0; c < a.length; c++) {
      var d = a[c],
        e = d.event
      d = d.listeners
      a: {
        var f = void 0
        if (b)
          for (var g = d.length - 1; 0 <= g; g--) {
            var h = d[g],
              k = h.instance,
              l = h.currentTarget
            h = h.listener
            if (k !== f && e.isPropagationStopped()) break a
            nf(e, h, l)
            f = k
          }
        else
          for (g = 0; g < d.length; g++) {
            h = d[g]
            k = h.instance
            l = h.currentTarget
            h = h.listener
            if (k !== f && e.isPropagationStopped()) break a
            nf(e, h, l)
            f = k
          }
      }
    }
    if (Qb) throw ((a = Rb), (Qb = !1), (Rb = null), a)
  }
  function D(a, b) {
    var c = b[of]
    void 0 === c && (c = b[of] = new Set())
    var d = a + '__bubble'
    c.has(d) || (pf(b, a, 2, !1), c.add(d))
  }
  function qf(a, b, c) {
    var d = 0
    b && (d |= 4)
    pf(c, a, d, b)
  }
  var rf = '_reactListening' + Math.random().toString(36).slice(2)
  function sf(a) {
    if (!a[rf]) {
      a[rf] = !0
      da.forEach(function (b) {
        'selectionchange' !== b && (mf.has(b) || qf(b, !1, a), qf(b, !0, a))
      })
      var b = 9 === a.nodeType ? a : a.ownerDocument
      null === b || b[rf] || ((b[rf] = !0), qf('selectionchange', !1, b))
    }
  }
  function pf(a, b, c, d) {
    switch (jd(b)) {
      case 1:
        var e = ed
        break
      case 4:
        e = gd
        break
      default:
        e = fd
    }
    c = e.bind(null, b, c, a)
    e = void 0
    !Lb || ('touchstart' !== b && 'touchmove' !== b && 'wheel' !== b) || (e = !0)
    d
      ? void 0 !== e
        ? a.addEventListener(b, c, { capture: !0, passive: e })
        : a.addEventListener(b, c, !0)
      : void 0 !== e
      ? a.addEventListener(b, c, { passive: e })
      : a.addEventListener(b, c, !1)
  }
  function hd(a, b, c, d, e) {
    var f = d
    if (0 === (b & 1) && 0 === (b & 2) && null !== d)
      a: for (;;) {
        if (null === d) return
        var g = d.tag
        if (3 === g || 4 === g) {
          var h = d.stateNode.containerInfo
          if (h === e || (8 === h.nodeType && h.parentNode === e)) break
          if (4 === g)
            for (g = d.return; null !== g; ) {
              var k = g.tag
              if (3 === k || 4 === k) if (((k = g.stateNode.containerInfo), k === e || (8 === k.nodeType && k.parentNode === e))) return
              g = g.return
            }
          for (; null !== h; ) {
            g = Wc(h)
            if (null === g) return
            k = g.tag
            if (5 === k || 6 === k) {
              d = f = g
              continue a
            }
            h = h.parentNode
          }
        }
        d = d.return
      }
    Jb(function () {
      var d = f,
        e = xb(c),
        g = []
      a: {
        var h = df.get(a)
        if (void 0 !== h) {
          var k = td,
            n = a
          switch (a) {
            case 'keypress':
              if (0 === od(c)) break a
            case 'keydown':
            case 'keyup':
              k = Rd
              break
            case 'focusin':
              n = 'focus'
              k = Fd
              break
            case 'focusout':
              n = 'blur'
              k = Fd
              break
            case 'beforeblur':
            case 'afterblur':
              k = Fd
              break
            case 'click':
              if (2 === c.button) break a
            case 'auxclick':
            case 'dblclick':
            case 'mousedown':
            case 'mousemove':
            case 'mouseup':
            case 'mouseout':
            case 'mouseover':
            case 'contextmenu':
              k = Bd
              break
            case 'drag':
            case 'dragend':
            case 'dragenter':
            case 'dragexit':
            case 'dragleave':
            case 'dragover':
            case 'dragstart':
            case 'drop':
              k = Dd
              break
            case 'touchcancel':
            case 'touchend':
            case 'touchmove':
            case 'touchstart':
              k = Vd
              break
            case $e:
            case af:
            case bf:
              k = Hd
              break
            case cf:
              k = Xd
              break
            case 'scroll':
              k = vd
              break
            case 'wheel':
              k = Zd
              break
            case 'copy':
            case 'cut':
            case 'paste':
              k = Jd
              break
            case 'gotpointercapture':
            case 'lostpointercapture':
            case 'pointercancel':
            case 'pointerdown':
            case 'pointermove':
            case 'pointerout':
            case 'pointerover':
            case 'pointerup':
              k = Td
          }
          var t = 0 !== (b & 4),
            J = !t && 'scroll' === a,
            x = t ? (null !== h ? h + 'Capture' : null) : h
          t = []
          for (var w = d, u; null !== w; ) {
            u = w
            var F = u.stateNode
            5 === u.tag && null !== F && ((u = F), null !== x && ((F = Kb(w, x)), null != F && t.push(tf(w, F, u))))
            if (J) break
            w = w.return
          }
          0 < t.length && ((h = new k(h, n, null, c, e)), g.push({ event: h, listeners: t }))
        }
      }
      if (0 === (b & 7)) {
        a: {
          h = 'mouseover' === a || 'pointerover' === a
          k = 'mouseout' === a || 'pointerout' === a
          if (h && c !== wb && (n = c.relatedTarget || c.fromElement) && (Wc(n) || n[uf])) break a
          if (k || h) {
            h = e.window === e ? e : (h = e.ownerDocument) ? h.defaultView || h.parentWindow : window
            if (k) {
              if (((n = c.relatedTarget || c.toElement), (k = d), (n = n ? Wc(n) : null), null !== n && ((J = Vb(n)), n !== J || (5 !== n.tag && 6 !== n.tag)))) n = null
            } else (k = null), (n = d)
            if (k !== n) {
              t = Bd
              F = 'onMouseLeave'
              x = 'onMouseEnter'
              w = 'mouse'
              if ('pointerout' === a || 'pointerover' === a) (t = Td), (F = 'onPointerLeave'), (x = 'onPointerEnter'), (w = 'pointer')
              J = null == k ? h : ue(k)
              u = null == n ? h : ue(n)
              h = new t(F, w + 'leave', k, c, e)
              h.target = J
              h.relatedTarget = u
              F = null
              Wc(e) === d && ((t = new t(x, w + 'enter', n, c, e)), (t.target = u), (t.relatedTarget = J), (F = t))
              J = F
              if (k && n)
                b: {
                  t = k
                  x = n
                  w = 0
                  for (u = t; u; u = vf(u)) w++
                  u = 0
                  for (F = x; F; F = vf(F)) u++
                  for (; 0 < w - u; ) (t = vf(t)), w--
                  for (; 0 < u - w; ) (x = vf(x)), u--
                  for (; w--; ) {
                    if (t === x || (null !== x && t === x.alternate)) break b
                    t = vf(t)
                    x = vf(x)
                  }
                  t = null
                }
              else t = null
              null !== k && wf(g, h, k, t, !1)
              null !== n && null !== J && wf(g, J, n, t, !0)
            }
          }
        }
        a: {
          h = d ? ue(d) : window
          k = h.nodeName && h.nodeName.toLowerCase()
          if ('select' === k || ('input' === k && 'file' === h.type)) var na = ve
          else if (me(h))
            if (we) na = Fe
            else {
              na = De
              var xa = Ce
            }
          else (k = h.nodeName) && 'input' === k.toLowerCase() && ('checkbox' === h.type || 'radio' === h.type) && (na = Ee)
          if (na && (na = na(a, d))) {
            ne(g, na, c, e)
            break a
          }
          xa && xa(a, h, d)
          'focusout' === a && (xa = h._wrapperState) && xa.controlled && 'number' === h.type && cb(h, 'number', h.value)
        }
        xa = d ? ue(d) : window
        switch (a) {
          case 'focusin':
            if (me(xa) || 'true' === xa.contentEditable) (Qe = xa), (Re = d), (Se = null)
            break
          case 'focusout':
            Se = Re = Qe = null
            break
          case 'mousedown':
            Te = !0
            break
          case 'contextmenu':
          case 'mouseup':
          case 'dragend':
            Te = !1
            Ue(g, c, e)
            break
          case 'selectionchange':
            if (Pe) break
          case 'keydown':
          case 'keyup':
            Ue(g, c, e)
        }
        var $a
        if (ae)
          b: {
            switch (a) {
              case 'compositionstart':
                var ba = 'onCompositionStart'
                break b
              case 'compositionend':
                ba = 'onCompositionEnd'
                break b
              case 'compositionupdate':
                ba = 'onCompositionUpdate'
                break b
            }
            ba = void 0
          }
        else ie ? ge(a, c) && (ba = 'onCompositionEnd') : 'keydown' === a && 229 === c.keyCode && (ba = 'onCompositionStart')
        ba &&
          (de &&
            'ko' !== c.locale &&
            (ie || 'onCompositionStart' !== ba ? 'onCompositionEnd' === ba && ie && ($a = nd()) : ((kd = e), (ld = 'value' in kd ? kd.value : kd.textContent), (ie = !0))),
          (xa = oe(d, ba)),
          0 < xa.length && ((ba = new Ld(ba, a, null, c, e)), g.push({ event: ba, listeners: xa }), $a ? (ba.data = $a) : (($a = he(c)), null !== $a && (ba.data = $a))))
        if (($a = ce ? je(a, c) : ke(a, c)))
          (d = oe(d, 'onBeforeInput')), 0 < d.length && ((e = new Ld('onBeforeInput', 'beforeinput', null, c, e)), g.push({ event: e, listeners: d }), (e.data = $a))
      }
      se(g, b)
    })
  }
  function tf(a, b, c) {
    return { instance: a, listener: b, currentTarget: c }
  }
  function oe(a, b) {
    for (var c = b + 'Capture', d = []; null !== a; ) {
      var e = a,
        f = e.stateNode
      5 === e.tag && null !== f && ((e = f), (f = Kb(a, c)), null != f && d.unshift(tf(a, f, e)), (f = Kb(a, b)), null != f && d.push(tf(a, f, e)))
      a = a.return
    }
    return d
  }
  function vf(a) {
    if (null === a) return null
    do a = a.return
    while (a && 5 !== a.tag)
    return a ? a : null
  }
  function wf(a, b, c, d, e) {
    for (var f = b._reactName, g = []; null !== c && c !== d; ) {
      var h = c,
        k = h.alternate,
        l = h.stateNode
      if (null !== k && k === d) break
      5 === h.tag && null !== l && ((h = l), e ? ((k = Kb(c, f)), null != k && g.unshift(tf(c, k, h))) : e || ((k = Kb(c, f)), null != k && g.push(tf(c, k, h))))
      c = c.return
    }
    0 !== g.length && a.push({ event: b, listeners: g })
  }
  var xf = /\r\n?/g,
    yf = /\u0000|\uFFFD/g
  function zf(a) {
    return ('string' === typeof a ? a : '' + a).replace(xf, '\n').replace(yf, '')
  }
  function Af(a, b, c) {
    b = zf(b)
    if (zf(a) !== b && c) throw Error(p$1(425))
  }
  function Bf() {}
  var Cf = null,
    Df = null
  function Ef(a, b) {
    return (
      'textarea' === a ||
      'noscript' === a ||
      'string' === typeof b.children ||
      'number' === typeof b.children ||
      ('object' === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html)
    )
  }
  var Ff = 'function' === typeof setTimeout ? setTimeout : void 0,
    Gf = 'function' === typeof clearTimeout ? clearTimeout : void 0,
    Hf = 'function' === typeof Promise ? Promise : void 0,
    Jf =
      'function' === typeof queueMicrotask
        ? queueMicrotask
        : 'undefined' !== typeof Hf
        ? function (a) {
            return Hf.resolve(null).then(a).catch(If)
          }
        : Ff
  function If(a) {
    setTimeout(function () {
      throw a
    })
  }
  function Kf(a, b) {
    var c = b,
      d = 0
    do {
      var e = c.nextSibling
      a.removeChild(c)
      if (e && 8 === e.nodeType)
        if (((c = e.data), '/$' === c)) {
          if (0 === d) {
            a.removeChild(e)
            bd(b)
            return
          }
          d--
        } else ('$' !== c && '$?' !== c && '$!' !== c) || d++
      c = e
    } while (c)
    bd(b)
  }
  function Lf(a) {
    for (; null != a; a = a.nextSibling) {
      var b = a.nodeType
      if (1 === b || 3 === b) break
      if (8 === b) {
        b = a.data
        if ('$' === b || '$!' === b || '$?' === b) break
        if ('/$' === b) return null
      }
    }
    return a
  }
  function Mf(a) {
    a = a.previousSibling
    for (var b = 0; a; ) {
      if (8 === a.nodeType) {
        var c = a.data
        if ('$' === c || '$!' === c || '$?' === c) {
          if (0 === b) return a
          b--
        } else '/$' === c && b++
      }
      a = a.previousSibling
    }
    return null
  }
  var Nf = Math.random().toString(36).slice(2),
    Of = '__reactFiber$' + Nf,
    Pf = '__reactProps$' + Nf,
    uf = '__reactContainer$' + Nf,
    of = '__reactEvents$' + Nf,
    Qf = '__reactListeners$' + Nf,
    Rf = '__reactHandles$' + Nf
  function Wc(a) {
    var b = a[Of]
    if (b) return b
    for (var c = a.parentNode; c; ) {
      if ((b = c[uf] || c[Of])) {
        c = b.alternate
        if (null !== b.child || (null !== c && null !== c.child))
          for (a = Mf(a); null !== a; ) {
            if ((c = a[Of])) return c
            a = Mf(a)
          }
        return b
      }
      a = c
      c = a.parentNode
    }
    return null
  }
  function Cb(a) {
    a = a[Of] || a[uf]
    return !a || (5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag) ? null : a
  }
  function ue(a) {
    if (5 === a.tag || 6 === a.tag) return a.stateNode
    throw Error(p$1(33))
  }
  function Db(a) {
    return a[Pf] || null
  }
  var Sf = [],
    Tf = -1
  function Uf(a) {
    return { current: a }
  }
  function E$1(a) {
    0 > Tf || ((a.current = Sf[Tf]), (Sf[Tf] = null), Tf--)
  }
  function G(a, b) {
    Tf++
    Sf[Tf] = a.current
    a.current = b
  }
  var Vf = {},
    H$1 = Uf(Vf),
    Wf = Uf(!1),
    Xf = Vf
  function Yf(a, b) {
    var c = a.type.contextTypes
    if (!c) return Vf
    var d = a.stateNode
    if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext
    var e = {},
      f
    for (f in c) e[f] = b[f]
    d && ((a = a.stateNode), (a.__reactInternalMemoizedUnmaskedChildContext = b), (a.__reactInternalMemoizedMaskedChildContext = e))
    return e
  }
  function Zf(a) {
    a = a.childContextTypes
    return null !== a && void 0 !== a
  }
  function $f() {
    E$1(Wf)
    E$1(H$1)
  }
  function ag(a, b, c) {
    if (H$1.current !== Vf) throw Error(p$1(168))
    G(H$1, b)
    G(Wf, c)
  }
  function bg(a, b, c) {
    var d = a.stateNode
    b = b.childContextTypes
    if ('function' !== typeof d.getChildContext) return c
    d = d.getChildContext()
    for (var e in d) if (!(e in b)) throw Error(p$1(108, Ra(a) || 'Unknown', e))
    return A$1({}, c, d)
  }
  function cg(a) {
    a = ((a = a.stateNode) && a.__reactInternalMemoizedMergedChildContext) || Vf
    Xf = H$1.current
    G(H$1, a)
    G(Wf, Wf.current)
    return !0
  }
  function dg(a, b, c) {
    var d = a.stateNode
    if (!d) throw Error(p$1(169))
    c ? ((a = bg(a, b, Xf)), (d.__reactInternalMemoizedMergedChildContext = a), E$1(Wf), E$1(H$1), G(H$1, a)) : E$1(Wf)
    G(Wf, c)
  }
  var eg = null,
    fg = !1,
    gg = !1
  function hg(a) {
    null === eg ? (eg = [a]) : eg.push(a)
  }
  function ig(a) {
    fg = !0
    hg(a)
  }
  function jg() {
    if (!gg && null !== eg) {
      gg = !0
      var a = 0,
        b = C
      try {
        var c = eg
        for (C = 1; a < c.length; a++) {
          var d = c[a]
          do d = d(!0)
          while (null !== d)
        }
        eg = null
        fg = !1
      } catch (e) {
        throw (null !== eg && (eg = eg.slice(a + 1)), ac(fc, jg), e)
      } finally {
        ;(C = b), (gg = !1)
      }
    }
    return null
  }
  var kg = [],
    lg = 0,
    mg = null,
    ng = 0,
    og = [],
    pg = 0,
    qg = null,
    rg = 1,
    sg = ''
  function tg(a, b) {
    kg[lg++] = ng
    kg[lg++] = mg
    mg = a
    ng = b
  }
  function ug(a, b, c) {
    og[pg++] = rg
    og[pg++] = sg
    og[pg++] = qg
    qg = a
    var d = rg
    a = sg
    var e = 32 - oc(d) - 1
    d &= ~(1 << e)
    c += 1
    var f = 32 - oc(b) + e
    if (30 < f) {
      var g = e - (e % 5)
      f = (d & ((1 << g) - 1)).toString(32)
      d >>= g
      e -= g
      rg = (1 << (32 - oc(b) + e)) | (c << e) | d
      sg = f + a
    } else (rg = (1 << f) | (c << e) | d), (sg = a)
  }
  function vg(a) {
    null !== a.return && (tg(a, 1), ug(a, 1, 0))
  }
  function wg(a) {
    for (; a === mg; ) (mg = kg[--lg]), (kg[lg] = null), (ng = kg[--lg]), (kg[lg] = null)
    for (; a === qg; ) (qg = og[--pg]), (og[pg] = null), (sg = og[--pg]), (og[pg] = null), (rg = og[--pg]), (og[pg] = null)
  }
  var xg = null,
    yg = null,
    I = !1,
    zg = null
  function Ag(a, b) {
    var c = Bg(5, null, null, 0)
    c.elementType = 'DELETED'
    c.stateNode = b
    c.return = a
    b = a.deletions
    null === b ? ((a.deletions = [c]), (a.flags |= 16)) : b.push(c)
  }
  function Cg(a, b) {
    switch (a.tag) {
      case 5:
        var c = a.type
        b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b
        return null !== b ? ((a.stateNode = b), (xg = a), (yg = Lf(b.firstChild)), !0) : !1
      case 6:
        return (b = '' === a.pendingProps || 3 !== b.nodeType ? null : b), null !== b ? ((a.stateNode = b), (xg = a), (yg = null), !0) : !1
      case 13:
        return (
          (b = 8 !== b.nodeType ? null : b),
          null !== b
            ? ((c = null !== qg ? { id: rg, overflow: sg } : null),
              (a.memoizedState = { dehydrated: b, treeContext: c, retryLane: 1073741824 }),
              (c = Bg(18, null, null, 0)),
              (c.stateNode = b),
              (c.return = a),
              (a.child = c),
              (xg = a),
              (yg = null),
              !0)
            : !1
        )
      default:
        return !1
    }
  }
  function Dg(a) {
    return 0 !== (a.mode & 1) && 0 === (a.flags & 128)
  }
  function Eg(a) {
    if (I) {
      var b = yg
      if (b) {
        var c = b
        if (!Cg(a, b)) {
          if (Dg(a)) throw Error(p$1(418))
          b = Lf(c.nextSibling)
          var d = xg
          b && Cg(a, b) ? Ag(d, c) : ((a.flags = (a.flags & -4097) | 2), (I = !1), (xg = a))
        }
      } else {
        if (Dg(a)) throw Error(p$1(418))
        a.flags = (a.flags & -4097) | 2
        I = !1
        xg = a
      }
    }
  }
  function Fg(a) {
    for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag; ) a = a.return
    xg = a
  }
  function Gg(a) {
    if (a !== xg) return !1
    if (!I) return Fg(a), (I = !0), !1
    var b
    ;(b = 3 !== a.tag) && !(b = 5 !== a.tag) && ((b = a.type), (b = 'head' !== b && 'body' !== b && !Ef(a.type, a.memoizedProps)))
    if (b && (b = yg)) {
      if (Dg(a)) throw (Hg(), Error(p$1(418)))
      for (; b; ) Ag(a, b), (b = Lf(b.nextSibling))
    }
    Fg(a)
    if (13 === a.tag) {
      a = a.memoizedState
      a = null !== a ? a.dehydrated : null
      if (!a) throw Error(p$1(317))
      a: {
        a = a.nextSibling
        for (b = 0; a; ) {
          if (8 === a.nodeType) {
            var c = a.data
            if ('/$' === c) {
              if (0 === b) {
                yg = Lf(a.nextSibling)
                break a
              }
              b--
            } else ('$' !== c && '$!' !== c && '$?' !== c) || b++
          }
          a = a.nextSibling
        }
        yg = null
      }
    } else yg = xg ? Lf(a.stateNode.nextSibling) : null
    return !0
  }
  function Hg() {
    for (var a = yg; a; ) a = Lf(a.nextSibling)
  }
  function Ig() {
    yg = xg = null
    I = !1
  }
  function Jg(a) {
    null === zg ? (zg = [a]) : zg.push(a)
  }
  var Kg = ua.ReactCurrentBatchConfig
  function Lg(a, b) {
    if (a && a.defaultProps) {
      b = A$1({}, b)
      a = a.defaultProps
      for (var c in a) void 0 === b[c] && (b[c] = a[c])
      return b
    }
    return b
  }
  var Mg = Uf(null),
    Ng = null,
    Og = null,
    Pg = null
  function Qg() {
    Pg = Og = Ng = null
  }
  function Rg(a) {
    var b = Mg.current
    E$1(Mg)
    a._currentValue = b
  }
  function Sg(a, b, c) {
    for (; null !== a; ) {
      var d = a.alternate
      ;(a.childLanes & b) !== b ? ((a.childLanes |= b), null !== d && (d.childLanes |= b)) : null !== d && (d.childLanes & b) !== b && (d.childLanes |= b)
      if (a === c) break
      a = a.return
    }
  }
  function Tg(a, b) {
    Ng = a
    Pg = Og = null
    a = a.dependencies
    null !== a && null !== a.firstContext && (0 !== (a.lanes & b) && (Ug = !0), (a.firstContext = null))
  }
  function Vg(a) {
    var b = a._currentValue
    if (Pg !== a)
      if (((a = { context: a, memoizedValue: b, next: null }), null === Og)) {
        if (null === Ng) throw Error(p$1(308))
        Og = a
        Ng.dependencies = { lanes: 0, firstContext: a }
      } else Og = Og.next = a
    return b
  }
  var Wg = null
  function Xg(a) {
    null === Wg ? (Wg = [a]) : Wg.push(a)
  }
  function Yg(a, b, c, d) {
    var e = b.interleaved
    null === e ? ((c.next = c), Xg(b)) : ((c.next = e.next), (e.next = c))
    b.interleaved = c
    return Zg(a, d)
  }
  function Zg(a, b) {
    a.lanes |= b
    var c = a.alternate
    null !== c && (c.lanes |= b)
    c = a
    for (a = a.return; null !== a; ) (a.childLanes |= b), (c = a.alternate), null !== c && (c.childLanes |= b), (c = a), (a = a.return)
    return 3 === c.tag ? c.stateNode : null
  }
  var $g = !1
  function ah(a) {
    a.updateQueue = { baseState: a.memoizedState, firstBaseUpdate: null, lastBaseUpdate: null, shared: { pending: null, interleaved: null, lanes: 0 }, effects: null }
  }
  function bh(a, b) {
    a = a.updateQueue
    b.updateQueue === a && (b.updateQueue = { baseState: a.baseState, firstBaseUpdate: a.firstBaseUpdate, lastBaseUpdate: a.lastBaseUpdate, shared: a.shared, effects: a.effects })
  }
  function ch(a, b) {
    return { eventTime: a, lane: b, tag: 0, payload: null, callback: null, next: null }
  }
  function dh(a, b, c) {
    var d = a.updateQueue
    if (null === d) return null
    d = d.shared
    if (0 !== (K & 2)) {
      var e = d.pending
      null === e ? (b.next = b) : ((b.next = e.next), (e.next = b))
      d.pending = b
      return Zg(a, c)
    }
    e = d.interleaved
    null === e ? ((b.next = b), Xg(d)) : ((b.next = e.next), (e.next = b))
    d.interleaved = b
    return Zg(a, c)
  }
  function eh(a, b, c) {
    b = b.updateQueue
    if (null !== b && ((b = b.shared), 0 !== (c & 4194240))) {
      var d = b.lanes
      d &= a.pendingLanes
      c |= d
      b.lanes = c
      Cc(a, c)
    }
  }
  function fh(a, b) {
    var c = a.updateQueue,
      d = a.alternate
    if (null !== d && ((d = d.updateQueue), c === d)) {
      var e = null,
        f = null
      c = c.firstBaseUpdate
      if (null !== c) {
        do {
          var g = { eventTime: c.eventTime, lane: c.lane, tag: c.tag, payload: c.payload, callback: c.callback, next: null }
          null === f ? (e = f = g) : (f = f.next = g)
          c = c.next
        } while (null !== c)
        null === f ? (e = f = b) : (f = f.next = b)
      } else e = f = b
      c = { baseState: d.baseState, firstBaseUpdate: e, lastBaseUpdate: f, shared: d.shared, effects: d.effects }
      a.updateQueue = c
      return
    }
    a = c.lastBaseUpdate
    null === a ? (c.firstBaseUpdate = b) : (a.next = b)
    c.lastBaseUpdate = b
  }
  function gh(a, b, c, d) {
    var e = a.updateQueue
    $g = !1
    var f = e.firstBaseUpdate,
      g = e.lastBaseUpdate,
      h = e.shared.pending
    if (null !== h) {
      e.shared.pending = null
      var k = h,
        l = k.next
      k.next = null
      null === g ? (f = l) : (g.next = l)
      g = k
      var m = a.alternate
      null !== m && ((m = m.updateQueue), (h = m.lastBaseUpdate), h !== g && (null === h ? (m.firstBaseUpdate = l) : (h.next = l), (m.lastBaseUpdate = k)))
    }
    if (null !== f) {
      var q = e.baseState
      g = 0
      m = l = k = null
      h = f
      do {
        var r = h.lane,
          y = h.eventTime
        if ((d & r) === r) {
          null !== m && (m = m.next = { eventTime: y, lane: 0, tag: h.tag, payload: h.payload, callback: h.callback, next: null })
          a: {
            var n = a,
              t = h
            r = b
            y = c
            switch (t.tag) {
              case 1:
                n = t.payload
                if ('function' === typeof n) {
                  q = n.call(y, q, r)
                  break a
                }
                q = n
                break a
              case 3:
                n.flags = (n.flags & -65537) | 128
              case 0:
                n = t.payload
                r = 'function' === typeof n ? n.call(y, q, r) : n
                if (null === r || void 0 === r) break a
                q = A$1({}, q, r)
                break a
              case 2:
                $g = !0
            }
          }
          null !== h.callback && 0 !== h.lane && ((a.flags |= 64), (r = e.effects), null === r ? (e.effects = [h]) : r.push(h))
        } else (y = { eventTime: y, lane: r, tag: h.tag, payload: h.payload, callback: h.callback, next: null }), null === m ? ((l = m = y), (k = q)) : (m = m.next = y), (g |= r)
        h = h.next
        if (null === h)
          if (((h = e.shared.pending), null === h)) break
          else (r = h), (h = r.next), (r.next = null), (e.lastBaseUpdate = r), (e.shared.pending = null)
      } while (1)
      null === m && (k = q)
      e.baseState = k
      e.firstBaseUpdate = l
      e.lastBaseUpdate = m
      b = e.shared.interleaved
      if (null !== b) {
        e = b
        do (g |= e.lane), (e = e.next)
        while (e !== b)
      } else null === f && (e.shared.lanes = 0)
      hh |= g
      a.lanes = g
      a.memoizedState = q
    }
  }
  function ih(a, b, c) {
    a = b.effects
    b.effects = null
    if (null !== a)
      for (b = 0; b < a.length; b++) {
        var d = a[b],
          e = d.callback
        if (null !== e) {
          d.callback = null
          d = c
          if ('function' !== typeof e) throw Error(p$1(191, e))
          e.call(d)
        }
      }
  }
  var jh = new aa.Component().refs
  function kh(a, b, c, d) {
    b = a.memoizedState
    c = c(d, b)
    c = null === c || void 0 === c ? b : A$1({}, b, c)
    a.memoizedState = c
    0 === a.lanes && (a.updateQueue.baseState = c)
  }
  var nh = {
    isMounted: function (a) {
      return (a = a._reactInternals) ? Vb(a) === a : !1
    },
    enqueueSetState: function (a, b, c) {
      a = a._reactInternals
      var d = L$1(),
        e = lh(a),
        f = ch(d, e)
      f.payload = b
      void 0 !== c && null !== c && (f.callback = c)
      b = dh(a, f, e)
      null !== b && (mh(b, a, e, d), eh(b, a, e))
    },
    enqueueReplaceState: function (a, b, c) {
      a = a._reactInternals
      var d = L$1(),
        e = lh(a),
        f = ch(d, e)
      f.tag = 1
      f.payload = b
      void 0 !== c && null !== c && (f.callback = c)
      b = dh(a, f, e)
      null !== b && (mh(b, a, e, d), eh(b, a, e))
    },
    enqueueForceUpdate: function (a, b) {
      a = a._reactInternals
      var c = L$1(),
        d = lh(a),
        e = ch(c, d)
      e.tag = 2
      void 0 !== b && null !== b && (e.callback = b)
      b = dh(a, e, d)
      null !== b && (mh(b, a, d, c), eh(b, a, d))
    },
  }
  function oh(a, b, c, d, e, f, g) {
    a = a.stateNode
    return 'function' === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !Ie(c, d) || !Ie(e, f) : !0
  }
  function ph(a, b, c) {
    var d = !1,
      e = Vf
    var f = b.contextType
    'object' === typeof f && null !== f ? (f = Vg(f)) : ((e = Zf(b) ? Xf : H$1.current), (d = b.contextTypes), (f = (d = null !== d && void 0 !== d) ? Yf(a, e) : Vf))
    b = new b(c, f)
    a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null
    b.updater = nh
    a.stateNode = b
    b._reactInternals = a
    d && ((a = a.stateNode), (a.__reactInternalMemoizedUnmaskedChildContext = e), (a.__reactInternalMemoizedMaskedChildContext = f))
    return b
  }
  function qh(a, b, c, d) {
    a = b.state
    'function' === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d)
    'function' === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d)
    b.state !== a && nh.enqueueReplaceState(b, b.state, null)
  }
  function rh(a, b, c, d) {
    var e = a.stateNode
    e.props = c
    e.state = a.memoizedState
    e.refs = jh
    ah(a)
    var f = b.contextType
    'object' === typeof f && null !== f ? (e.context = Vg(f)) : ((f = Zf(b) ? Xf : H$1.current), (e.context = Yf(a, f)))
    e.state = a.memoizedState
    f = b.getDerivedStateFromProps
    'function' === typeof f && (kh(a, b, f, c), (e.state = a.memoizedState))
    'function' === typeof b.getDerivedStateFromProps ||
      'function' === typeof e.getSnapshotBeforeUpdate ||
      ('function' !== typeof e.UNSAFE_componentWillMount && 'function' !== typeof e.componentWillMount) ||
      ((b = e.state),
      'function' === typeof e.componentWillMount && e.componentWillMount(),
      'function' === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(),
      b !== e.state && nh.enqueueReplaceState(e, e.state, null),
      gh(a, c, e, d),
      (e.state = a.memoizedState))
    'function' === typeof e.componentDidMount && (a.flags |= 4194308)
  }
  function sh(a, b, c) {
    a = c.ref
    if (null !== a && 'function' !== typeof a && 'object' !== typeof a) {
      if (c._owner) {
        c = c._owner
        if (c) {
          if (1 !== c.tag) throw Error(p$1(309))
          var d = c.stateNode
        }
        if (!d) throw Error(p$1(147, a))
        var e = d,
          f = '' + a
        if (null !== b && null !== b.ref && 'function' === typeof b.ref && b.ref._stringRef === f) return b.ref
        b = function (a) {
          var b = e.refs
          b === jh && (b = e.refs = {})
          null === a ? delete b[f] : (b[f] = a)
        }
        b._stringRef = f
        return b
      }
      if ('string' !== typeof a) throw Error(p$1(284))
      if (!c._owner) throw Error(p$1(290, a))
    }
    return a
  }
  function th(a, b) {
    a = Object.prototype.toString.call(b)
    throw Error(p$1(31, '[object Object]' === a ? 'object with keys {' + Object.keys(b).join(', ') + '}' : a))
  }
  function uh(a) {
    var b = a._init
    return b(a._payload)
  }
  function vh(a) {
    function b(b, c) {
      if (a) {
        var d = b.deletions
        null === d ? ((b.deletions = [c]), (b.flags |= 16)) : d.push(c)
      }
    }
    function c(c, d) {
      if (!a) return null
      for (; null !== d; ) b(c, d), (d = d.sibling)
      return null
    }
    function d(a, b) {
      for (a = new Map(); null !== b; ) null !== b.key ? a.set(b.key, b) : a.set(b.index, b), (b = b.sibling)
      return a
    }
    function e(a, b) {
      a = wh(a, b)
      a.index = 0
      a.sibling = null
      return a
    }
    function f(b, c, d) {
      b.index = d
      if (!a) return (b.flags |= 1048576), c
      d = b.alternate
      if (null !== d) return (d = d.index), d < c ? ((b.flags |= 2), c) : d
      b.flags |= 2
      return c
    }
    function g(b) {
      a && null === b.alternate && (b.flags |= 2)
      return b
    }
    function h(a, b, c, d) {
      if (null === b || 6 !== b.tag) return (b = xh(c, a.mode, d)), (b.return = a), b
      b = e(b, c)
      b.return = a
      return b
    }
    function k(a, b, c, d) {
      var f = c.type
      if (f === ya) return m(a, b, c.props.children, d, c.key)
      if (null !== b && (b.elementType === f || ('object' === typeof f && null !== f && f.$$typeof === Ha && uh(f) === b.type)))
        return (d = e(b, c.props)), (d.ref = sh(a, b, c)), (d.return = a), d
      d = yh(c.type, c.key, c.props, null, a.mode, d)
      d.ref = sh(a, b, c)
      d.return = a
      return d
    }
    function l(a, b, c, d) {
      if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation)
        return (b = zh(c, a.mode, d)), (b.return = a), b
      b = e(b, c.children || [])
      b.return = a
      return b
    }
    function m(a, b, c, d, f) {
      if (null === b || 7 !== b.tag) return (b = Ah(c, a.mode, d, f)), (b.return = a), b
      b = e(b, c)
      b.return = a
      return b
    }
    function q(a, b, c) {
      if (('string' === typeof b && '' !== b) || 'number' === typeof b) return (b = xh('' + b, a.mode, c)), (b.return = a), b
      if ('object' === typeof b && null !== b) {
        switch (b.$$typeof) {
          case va:
            return (c = yh(b.type, b.key, b.props, null, a.mode, c)), (c.ref = sh(a, null, b)), (c.return = a), c
          case wa:
            return (b = zh(b, a.mode, c)), (b.return = a), b
          case Ha:
            var d = b._init
            return q(a, d(b._payload), c)
        }
        if (eb(b) || Ka(b)) return (b = Ah(b, a.mode, c, null)), (b.return = a), b
        th(a, b)
      }
      return null
    }
    function r(a, b, c, d) {
      var e = null !== b ? b.key : null
      if (('string' === typeof c && '' !== c) || 'number' === typeof c) return null !== e ? null : h(a, b, '' + c, d)
      if ('object' === typeof c && null !== c) {
        switch (c.$$typeof) {
          case va:
            return c.key === e ? k(a, b, c, d) : null
          case wa:
            return c.key === e ? l(a, b, c, d) : null
          case Ha:
            return (e = c._init), r(a, b, e(c._payload), d)
        }
        if (eb(c) || Ka(c)) return null !== e ? null : m(a, b, c, d, null)
        th(a, c)
      }
      return null
    }
    function y(a, b, c, d, e) {
      if (('string' === typeof d && '' !== d) || 'number' === typeof d) return (a = a.get(c) || null), h(b, a, '' + d, e)
      if ('object' === typeof d && null !== d) {
        switch (d.$$typeof) {
          case va:
            return (a = a.get(null === d.key ? c : d.key) || null), k(b, a, d, e)
          case wa:
            return (a = a.get(null === d.key ? c : d.key) || null), l(b, a, d, e)
          case Ha:
            var f = d._init
            return y(a, b, c, f(d._payload), e)
        }
        if (eb(d) || Ka(d)) return (a = a.get(c) || null), m(b, a, d, e, null)
        th(b, d)
      }
      return null
    }
    function n(e, g, h, k) {
      for (var l = null, m = null, u = g, w = (g = 0), x = null; null !== u && w < h.length; w++) {
        u.index > w ? ((x = u), (u = null)) : (x = u.sibling)
        var n = r(e, u, h[w], k)
        if (null === n) {
          null === u && (u = x)
          break
        }
        a && u && null === n.alternate && b(e, u)
        g = f(n, g, w)
        null === m ? (l = n) : (m.sibling = n)
        m = n
        u = x
      }
      if (w === h.length) return c(e, u), I && tg(e, w), l
      if (null === u) {
        for (; w < h.length; w++) (u = q(e, h[w], k)), null !== u && ((g = f(u, g, w)), null === m ? (l = u) : (m.sibling = u), (m = u))
        I && tg(e, w)
        return l
      }
      for (u = d(e, u); w < h.length; w++)
        (x = y(u, e, w, h[w], k)),
          null !== x && (a && null !== x.alternate && u.delete(null === x.key ? w : x.key), (g = f(x, g, w)), null === m ? (l = x) : (m.sibling = x), (m = x))
      a &&
        u.forEach(function (a) {
          return b(e, a)
        })
      I && tg(e, w)
      return l
    }
    function t(e, g, h, k) {
      var l = Ka(h)
      if ('function' !== typeof l) throw Error(p$1(150))
      h = l.call(h)
      if (null == h) throw Error(p$1(151))
      for (var u = (l = null), m = g, w = (g = 0), x = null, n = h.next(); null !== m && !n.done; w++, n = h.next()) {
        m.index > w ? ((x = m), (m = null)) : (x = m.sibling)
        var t = r(e, m, n.value, k)
        if (null === t) {
          null === m && (m = x)
          break
        }
        a && m && null === t.alternate && b(e, m)
        g = f(t, g, w)
        null === u ? (l = t) : (u.sibling = t)
        u = t
        m = x
      }
      if (n.done) return c(e, m), I && tg(e, w), l
      if (null === m) {
        for (; !n.done; w++, n = h.next()) (n = q(e, n.value, k)), null !== n && ((g = f(n, g, w)), null === u ? (l = n) : (u.sibling = n), (u = n))
        I && tg(e, w)
        return l
      }
      for (m = d(e, m); !n.done; w++, n = h.next())
        (n = y(m, e, w, n.value, k)),
          null !== n && (a && null !== n.alternate && m.delete(null === n.key ? w : n.key), (g = f(n, g, w)), null === u ? (l = n) : (u.sibling = n), (u = n))
      a &&
        m.forEach(function (a) {
          return b(e, a)
        })
      I && tg(e, w)
      return l
    }
    function J(a, d, f, h) {
      'object' === typeof f && null !== f && f.type === ya && null === f.key && (f = f.props.children)
      if ('object' === typeof f && null !== f) {
        switch (f.$$typeof) {
          case va:
            a: {
              for (var k = f.key, l = d; null !== l; ) {
                if (l.key === k) {
                  k = f.type
                  if (k === ya) {
                    if (7 === l.tag) {
                      c(a, l.sibling)
                      d = e(l, f.props.children)
                      d.return = a
                      a = d
                      break a
                    }
                  } else if (l.elementType === k || ('object' === typeof k && null !== k && k.$$typeof === Ha && uh(k) === l.type)) {
                    c(a, l.sibling)
                    d = e(l, f.props)
                    d.ref = sh(a, l, f)
                    d.return = a
                    a = d
                    break a
                  }
                  c(a, l)
                  break
                } else b(a, l)
                l = l.sibling
              }
              f.type === ya
                ? ((d = Ah(f.props.children, a.mode, h, f.key)), (d.return = a), (a = d))
                : ((h = yh(f.type, f.key, f.props, null, a.mode, h)), (h.ref = sh(a, d, f)), (h.return = a), (a = h))
            }
            return g(a)
          case wa:
            a: {
              for (l = f.key; null !== d; ) {
                if (d.key === l)
                  if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {
                    c(a, d.sibling)
                    d = e(d, f.children || [])
                    d.return = a
                    a = d
                    break a
                  } else {
                    c(a, d)
                    break
                  }
                else b(a, d)
                d = d.sibling
              }
              d = zh(f, a.mode, h)
              d.return = a
              a = d
            }
            return g(a)
          case Ha:
            return (l = f._init), J(a, d, l(f._payload), h)
        }
        if (eb(f)) return n(a, d, f, h)
        if (Ka(f)) return t(a, d, f, h)
        th(a, f)
      }
      return ('string' === typeof f && '' !== f) || 'number' === typeof f
        ? ((f = '' + f), null !== d && 6 === d.tag ? (c(a, d.sibling), (d = e(d, f)), (d.return = a), (a = d)) : (c(a, d), (d = xh(f, a.mode, h)), (d.return = a), (a = d)), g(a))
        : c(a, d)
    }
    return J
  }
  var Bh = vh(!0),
    Ch = vh(!1),
    Dh = {},
    Eh = Uf(Dh),
    Fh = Uf(Dh),
    Gh = Uf(Dh)
  function Hh(a) {
    if (a === Dh) throw Error(p$1(174))
    return a
  }
  function Ih(a, b) {
    G(Gh, b)
    G(Fh, a)
    G(Eh, Dh)
    a = b.nodeType
    switch (a) {
      case 9:
      case 11:
        b = (b = b.documentElement) ? b.namespaceURI : lb(null, '')
        break
      default:
        ;(a = 8 === a ? b.parentNode : b), (b = a.namespaceURI || null), (a = a.tagName), (b = lb(b, a))
    }
    E$1(Eh)
    G(Eh, b)
  }
  function Jh() {
    E$1(Eh)
    E$1(Fh)
    E$1(Gh)
  }
  function Kh(a) {
    Hh(Gh.current)
    var b = Hh(Eh.current)
    var c = lb(b, a.type)
    b !== c && (G(Fh, a), G(Eh, c))
  }
  function Lh(a) {
    Fh.current === a && (E$1(Eh), E$1(Fh))
  }
  var M = Uf(0)
  function Mh(a) {
    for (var b = a; null !== b; ) {
      if (13 === b.tag) {
        var c = b.memoizedState
        if (null !== c && ((c = c.dehydrated), null === c || '$?' === c.data || '$!' === c.data)) return b
      } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
        if (0 !== (b.flags & 128)) return b
      } else if (null !== b.child) {
        b.child.return = b
        b = b.child
        continue
      }
      if (b === a) break
      for (; null === b.sibling; ) {
        if (null === b.return || b.return === a) return null
        b = b.return
      }
      b.sibling.return = b.return
      b = b.sibling
    }
    return null
  }
  var Nh = []
  function Oh() {
    for (var a = 0; a < Nh.length; a++) Nh[a]._workInProgressVersionPrimary = null
    Nh.length = 0
  }
  var Ph = ua.ReactCurrentDispatcher,
    Qh = ua.ReactCurrentBatchConfig,
    Rh = 0,
    N = null,
    O = null,
    P = null,
    Sh = !1,
    Th = !1,
    Uh = 0,
    Vh = 0
  function Q() {
    throw Error(p$1(321))
  }
  function Wh(a, b) {
    if (null === b) return !1
    for (var c = 0; c < b.length && c < a.length; c++) if (!He(a[c], b[c])) return !1
    return !0
  }
  function Xh(a, b, c, d, e, f) {
    Rh = f
    N = b
    b.memoizedState = null
    b.updateQueue = null
    b.lanes = 0
    Ph.current = null === a || null === a.memoizedState ? Yh : Zh
    a = c(d, e)
    if (Th) {
      f = 0
      do {
        Th = !1
        Uh = 0
        if (25 <= f) throw Error(p$1(301))
        f += 1
        P = O = null
        b.updateQueue = null
        Ph.current = $h
        a = c(d, e)
      } while (Th)
    }
    Ph.current = ai
    b = null !== O && null !== O.next
    Rh = 0
    P = O = N = null
    Sh = !1
    if (b) throw Error(p$1(300))
    return a
  }
  function bi() {
    var a = 0 !== Uh
    Uh = 0
    return a
  }
  function ci() {
    var a = { memoizedState: null, baseState: null, baseQueue: null, queue: null, next: null }
    null === P ? (N.memoizedState = P = a) : (P = P.next = a)
    return P
  }
  function di() {
    if (null === O) {
      var a = N.alternate
      a = null !== a ? a.memoizedState : null
    } else a = O.next
    var b = null === P ? N.memoizedState : P.next
    if (null !== b) (P = b), (O = a)
    else {
      if (null === a) throw Error(p$1(310))
      O = a
      a = { memoizedState: O.memoizedState, baseState: O.baseState, baseQueue: O.baseQueue, queue: O.queue, next: null }
      null === P ? (N.memoizedState = P = a) : (P = P.next = a)
    }
    return P
  }
  function ei(a, b) {
    return 'function' === typeof b ? b(a) : b
  }
  function fi(a) {
    var b = di(),
      c = b.queue
    if (null === c) throw Error(p$1(311))
    c.lastRenderedReducer = a
    var d = O,
      e = d.baseQueue,
      f = c.pending
    if (null !== f) {
      if (null !== e) {
        var g = e.next
        e.next = f.next
        f.next = g
      }
      d.baseQueue = e = f
      c.pending = null
    }
    if (null !== e) {
      f = e.next
      d = d.baseState
      var h = (g = null),
        k = null,
        l = f
      do {
        var m = l.lane
        if ((Rh & m) === m)
          null !== k && (k = k.next = { lane: 0, action: l.action, hasEagerState: l.hasEagerState, eagerState: l.eagerState, next: null }),
            (d = l.hasEagerState ? l.eagerState : a(d, l.action))
        else {
          var q = { lane: m, action: l.action, hasEagerState: l.hasEagerState, eagerState: l.eagerState, next: null }
          null === k ? ((h = k = q), (g = d)) : (k = k.next = q)
          N.lanes |= m
          hh |= m
        }
        l = l.next
      } while (null !== l && l !== f)
      null === k ? (g = d) : (k.next = h)
      He(d, b.memoizedState) || (Ug = !0)
      b.memoizedState = d
      b.baseState = g
      b.baseQueue = k
      c.lastRenderedState = d
    }
    a = c.interleaved
    if (null !== a) {
      e = a
      do (f = e.lane), (N.lanes |= f), (hh |= f), (e = e.next)
      while (e !== a)
    } else null === e && (c.lanes = 0)
    return [b.memoizedState, c.dispatch]
  }
  function gi(a) {
    var b = di(),
      c = b.queue
    if (null === c) throw Error(p$1(311))
    c.lastRenderedReducer = a
    var d = c.dispatch,
      e = c.pending,
      f = b.memoizedState
    if (null !== e) {
      c.pending = null
      var g = (e = e.next)
      do (f = a(f, g.action)), (g = g.next)
      while (g !== e)
      He(f, b.memoizedState) || (Ug = !0)
      b.memoizedState = f
      null === b.baseQueue && (b.baseState = f)
      c.lastRenderedState = f
    }
    return [f, d]
  }
  function hi() {}
  function ii(a, b) {
    var c = N,
      d = di(),
      e = b(),
      f = !He(d.memoizedState, e)
    f && ((d.memoizedState = e), (Ug = !0))
    d = d.queue
    ji(ki.bind(null, c, d, a), [a])
    if (d.getSnapshot !== b || f || (null !== P && P.memoizedState.tag & 1)) {
      c.flags |= 2048
      li(9, mi.bind(null, c, d, e, b), void 0, null)
      if (null === R$1) throw Error(p$1(349))
      0 !== (Rh & 30) || ni(c, b, e)
    }
    return e
  }
  function ni(a, b, c) {
    a.flags |= 16384
    a = { getSnapshot: b, value: c }
    b = N.updateQueue
    null === b ? ((b = { lastEffect: null, stores: null }), (N.updateQueue = b), (b.stores = [a])) : ((c = b.stores), null === c ? (b.stores = [a]) : c.push(a))
  }
  function mi(a, b, c, d) {
    b.value = c
    b.getSnapshot = d
    oi(b) && pi(a)
  }
  function ki(a, b, c) {
    return c(function () {
      oi(b) && pi(a)
    })
  }
  function oi(a) {
    var b = a.getSnapshot
    a = a.value
    try {
      var c = b()
      return !He(a, c)
    } catch (d) {
      return !0
    }
  }
  function pi(a) {
    var b = Zg(a, 1)
    null !== b && mh(b, a, 1, -1)
  }
  function qi(a) {
    var b = ci()
    'function' === typeof a && (a = a())
    b.memoizedState = b.baseState = a
    a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: ei, lastRenderedState: a }
    b.queue = a
    a = a.dispatch = ri.bind(null, N, a)
    return [b.memoizedState, a]
  }
  function li(a, b, c, d) {
    a = { tag: a, create: b, destroy: c, deps: d, next: null }
    b = N.updateQueue
    null === b
      ? ((b = { lastEffect: null, stores: null }), (N.updateQueue = b), (b.lastEffect = a.next = a))
      : ((c = b.lastEffect), null === c ? (b.lastEffect = a.next = a) : ((d = c.next), (c.next = a), (a.next = d), (b.lastEffect = a)))
    return a
  }
  function si() {
    return di().memoizedState
  }
  function ti(a, b, c, d) {
    var e = ci()
    N.flags |= a
    e.memoizedState = li(1 | b, c, void 0, void 0 === d ? null : d)
  }
  function ui(a, b, c, d) {
    var e = di()
    d = void 0 === d ? null : d
    var f = void 0
    if (null !== O) {
      var g = O.memoizedState
      f = g.destroy
      if (null !== d && Wh(d, g.deps)) {
        e.memoizedState = li(b, c, f, d)
        return
      }
    }
    N.flags |= a
    e.memoizedState = li(1 | b, c, f, d)
  }
  function vi(a, b) {
    return ti(8390656, 8, a, b)
  }
  function ji(a, b) {
    return ui(2048, 8, a, b)
  }
  function wi(a, b) {
    return ui(4, 2, a, b)
  }
  function xi(a, b) {
    return ui(4, 4, a, b)
  }
  function yi(a, b) {
    if ('function' === typeof b)
      return (
        (a = a()),
        b(a),
        function () {
          b(null)
        }
      )
    if (null !== b && void 0 !== b)
      return (
        (a = a()),
        (b.current = a),
        function () {
          b.current = null
        }
      )
  }
  function zi(a, b, c) {
    c = null !== c && void 0 !== c ? c.concat([a]) : null
    return ui(4, 4, yi.bind(null, b, a), c)
  }
  function Ai() {}
  function Bi(a, b) {
    var c = di()
    b = void 0 === b ? null : b
    var d = c.memoizedState
    if (null !== d && null !== b && Wh(b, d[1])) return d[0]
    c.memoizedState = [a, b]
    return a
  }
  function Ci(a, b) {
    var c = di()
    b = void 0 === b ? null : b
    var d = c.memoizedState
    if (null !== d && null !== b && Wh(b, d[1])) return d[0]
    a = a()
    c.memoizedState = [a, b]
    return a
  }
  function Di(a, b, c) {
    if (0 === (Rh & 21)) return a.baseState && ((a.baseState = !1), (Ug = !0)), (a.memoizedState = c)
    He(c, b) || ((c = yc()), (N.lanes |= c), (hh |= c), (a.baseState = !0))
    return b
  }
  function Ei(a, b) {
    var c = C
    C = 0 !== c && 4 > c ? c : 4
    a(!0)
    var d = Qh.transition
    Qh.transition = {}
    try {
      a(!1), b()
    } finally {
      ;(C = c), (Qh.transition = d)
    }
  }
  function Fi() {
    return di().memoizedState
  }
  function Gi(a, b, c) {
    var d = lh(a)
    c = { lane: d, action: c, hasEagerState: !1, eagerState: null, next: null }
    if (Hi(a)) Ii(b, c)
    else if (((c = Yg(a, b, c, d)), null !== c)) {
      var e = L$1()
      mh(c, a, d, e)
      Ji(c, b, d)
    }
  }
  function ri(a, b, c) {
    var d = lh(a),
      e = { lane: d, action: c, hasEagerState: !1, eagerState: null, next: null }
    if (Hi(a)) Ii(b, e)
    else {
      var f = a.alternate
      if (0 === a.lanes && (null === f || 0 === f.lanes) && ((f = b.lastRenderedReducer), null !== f))
        try {
          var g = b.lastRenderedState,
            h = f(g, c)
          e.hasEagerState = !0
          e.eagerState = h
          if (He(h, g)) {
            var k = b.interleaved
            null === k ? ((e.next = e), Xg(b)) : ((e.next = k.next), (k.next = e))
            b.interleaved = e
            return
          }
        } catch (l) {
        } finally {
        }
      c = Yg(a, b, e, d)
      null !== c && ((e = L$1()), mh(c, a, d, e), Ji(c, b, d))
    }
  }
  function Hi(a) {
    var b = a.alternate
    return a === N || (null !== b && b === N)
  }
  function Ii(a, b) {
    Th = Sh = !0
    var c = a.pending
    null === c ? (b.next = b) : ((b.next = c.next), (c.next = b))
    a.pending = b
  }
  function Ji(a, b, c) {
    if (0 !== (c & 4194240)) {
      var d = b.lanes
      d &= a.pendingLanes
      c |= d
      b.lanes = c
      Cc(a, c)
    }
  }
  var ai = {
      readContext: Vg,
      useCallback: Q,
      useContext: Q,
      useEffect: Q,
      useImperativeHandle: Q,
      useInsertionEffect: Q,
      useLayoutEffect: Q,
      useMemo: Q,
      useReducer: Q,
      useRef: Q,
      useState: Q,
      useDebugValue: Q,
      useDeferredValue: Q,
      useTransition: Q,
      useMutableSource: Q,
      useSyncExternalStore: Q,
      useId: Q,
      unstable_isNewReconciler: !1,
    },
    Yh = {
      readContext: Vg,
      useCallback: function (a, b) {
        ci().memoizedState = [a, void 0 === b ? null : b]
        return a
      },
      useContext: Vg,
      useEffect: vi,
      useImperativeHandle: function (a, b, c) {
        c = null !== c && void 0 !== c ? c.concat([a]) : null
        return ti(4194308, 4, yi.bind(null, b, a), c)
      },
      useLayoutEffect: function (a, b) {
        return ti(4194308, 4, a, b)
      },
      useInsertionEffect: function (a, b) {
        return ti(4, 2, a, b)
      },
      useMemo: function (a, b) {
        var c = ci()
        b = void 0 === b ? null : b
        a = a()
        c.memoizedState = [a, b]
        return a
      },
      useReducer: function (a, b, c) {
        var d = ci()
        b = void 0 !== c ? c(b) : b
        d.memoizedState = d.baseState = b
        a = { pending: null, interleaved: null, lanes: 0, dispatch: null, lastRenderedReducer: a, lastRenderedState: b }
        d.queue = a
        a = a.dispatch = Gi.bind(null, N, a)
        return [d.memoizedState, a]
      },
      useRef: function (a) {
        var b = ci()
        a = { current: a }
        return (b.memoizedState = a)
      },
      useState: qi,
      useDebugValue: Ai,
      useDeferredValue: function (a) {
        return (ci().memoizedState = a)
      },
      useTransition: function () {
        var a = qi(!1),
          b = a[0]
        a = Ei.bind(null, a[1])
        ci().memoizedState = a
        return [b, a]
      },
      useMutableSource: function () {},
      useSyncExternalStore: function (a, b, c) {
        var d = N,
          e = ci()
        if (I) {
          if (void 0 === c) throw Error(p$1(407))
          c = c()
        } else {
          c = b()
          if (null === R$1) throw Error(p$1(349))
          0 !== (Rh & 30) || ni(d, b, c)
        }
        e.memoizedState = c
        var f = { value: c, getSnapshot: b }
        e.queue = f
        vi(ki.bind(null, d, f, a), [a])
        d.flags |= 2048
        li(9, mi.bind(null, d, f, c, b), void 0, null)
        return c
      },
      useId: function () {
        var a = ci(),
          b = R$1.identifierPrefix
        if (I) {
          var c = sg
          var d = rg
          c = (d & ~(1 << (32 - oc(d) - 1))).toString(32) + c
          b = ':' + b + 'R' + c
          c = Uh++
          0 < c && (b += 'H' + c.toString(32))
          b += ':'
        } else (c = Vh++), (b = ':' + b + 'r' + c.toString(32) + ':')
        return (a.memoizedState = b)
      },
      unstable_isNewReconciler: !1,
    },
    Zh = {
      readContext: Vg,
      useCallback: Bi,
      useContext: Vg,
      useEffect: ji,
      useImperativeHandle: zi,
      useInsertionEffect: wi,
      useLayoutEffect: xi,
      useMemo: Ci,
      useReducer: fi,
      useRef: si,
      useState: function () {
        return fi(ei)
      },
      useDebugValue: Ai,
      useDeferredValue: function (a) {
        var b = di()
        return Di(b, O.memoizedState, a)
      },
      useTransition: function () {
        var a = fi(ei)[0],
          b = di().memoizedState
        return [a, b]
      },
      useMutableSource: hi,
      useSyncExternalStore: ii,
      useId: Fi,
      unstable_isNewReconciler: !1,
    },
    $h = {
      readContext: Vg,
      useCallback: Bi,
      useContext: Vg,
      useEffect: ji,
      useImperativeHandle: zi,
      useInsertionEffect: wi,
      useLayoutEffect: xi,
      useMemo: Ci,
      useReducer: gi,
      useRef: si,
      useState: function () {
        return gi(ei)
      },
      useDebugValue: Ai,
      useDeferredValue: function (a) {
        var b = di()
        return null === O ? (b.memoizedState = a) : Di(b, O.memoizedState, a)
      },
      useTransition: function () {
        var a = gi(ei)[0],
          b = di().memoizedState
        return [a, b]
      },
      useMutableSource: hi,
      useSyncExternalStore: ii,
      useId: Fi,
      unstable_isNewReconciler: !1,
    }
  function Ki(a, b) {
    try {
      var c = '',
        d = b
      do (c += Pa(d)), (d = d.return)
      while (d)
      var e = c
    } catch (f) {
      e = '\nError generating stack: ' + f.message + '\n' + f.stack
    }
    return { value: a, source: b, stack: e, digest: null }
  }
  function Li(a, b, c) {
    return { value: a, source: null, stack: null != c ? c : null, digest: null != b ? b : null }
  }
  function Mi(a, b) {
    try {
      console.error(b.value)
    } catch (c) {
      setTimeout(function () {
        throw c
      })
    }
  }
  var Ni = 'function' === typeof WeakMap ? WeakMap : Map
  function Oi(a, b, c) {
    c = ch(-1, c)
    c.tag = 3
    c.payload = { element: null }
    var d = b.value
    c.callback = function () {
      Pi || ((Pi = !0), (Qi = d))
      Mi(a, b)
    }
    return c
  }
  function Ri(a, b, c) {
    c = ch(-1, c)
    c.tag = 3
    var d = a.type.getDerivedStateFromError
    if ('function' === typeof d) {
      var e = b.value
      c.payload = function () {
        return d(e)
      }
      c.callback = function () {
        Mi(a, b)
      }
    }
    var f = a.stateNode
    null !== f &&
      'function' === typeof f.componentDidCatch &&
      (c.callback = function () {
        Mi(a, b)
        'function' !== typeof d && (null === Si ? (Si = new Set([this])) : Si.add(this))
        var c = b.stack
        this.componentDidCatch(b.value, { componentStack: null !== c ? c : '' })
      })
    return c
  }
  function Ti(a, b, c) {
    var d = a.pingCache
    if (null === d) {
      d = a.pingCache = new Ni()
      var e = new Set()
      d.set(b, e)
    } else (e = d.get(b)), void 0 === e && ((e = new Set()), d.set(b, e))
    e.has(c) || (e.add(c), (a = Ui.bind(null, a, b, c)), b.then(a, a))
  }
  function Vi(a) {
    do {
      var b
      if ((b = 13 === a.tag)) (b = a.memoizedState), (b = null !== b ? (null !== b.dehydrated ? !0 : !1) : !0)
      if (b) return a
      a = a.return
    } while (null !== a)
    return null
  }
  function Wi(a, b, c, d, e) {
    if (0 === (a.mode & 1))
      return (
        a === b
          ? (a.flags |= 65536)
          : ((a.flags |= 128),
            (c.flags |= 131072),
            (c.flags &= -52805),
            1 === c.tag && (null === c.alternate ? (c.tag = 17) : ((b = ch(-1, 1)), (b.tag = 2), dh(c, b, 1))),
            (c.lanes |= 1)),
        a
      )
    a.flags |= 65536
    a.lanes = e
    return a
  }
  var Xi = ua.ReactCurrentOwner,
    Ug = !1
  function Yi(a, b, c, d) {
    b.child = null === a ? Ch(b, null, c, d) : Bh(b, a.child, c, d)
  }
  function Zi(a, b, c, d, e) {
    c = c.render
    var f = b.ref
    Tg(b, e)
    d = Xh(a, b, c, d, f, e)
    c = bi()
    if (null !== a && !Ug) return (b.updateQueue = a.updateQueue), (b.flags &= -2053), (a.lanes &= ~e), $i(a, b, e)
    I && c && vg(b)
    b.flags |= 1
    Yi(a, b, d, e)
    return b.child
  }
  function aj(a, b, c, d, e) {
    if (null === a) {
      var f = c.type
      if ('function' === typeof f && !bj(f) && void 0 === f.defaultProps && null === c.compare && void 0 === c.defaultProps) return (b.tag = 15), (b.type = f), cj(a, b, f, d, e)
      a = yh(c.type, null, d, b, b.mode, e)
      a.ref = b.ref
      a.return = b
      return (b.child = a)
    }
    f = a.child
    if (0 === (a.lanes & e)) {
      var g = f.memoizedProps
      c = c.compare
      c = null !== c ? c : Ie
      if (c(g, d) && a.ref === b.ref) return $i(a, b, e)
    }
    b.flags |= 1
    a = wh(f, d)
    a.ref = b.ref
    a.return = b
    return (b.child = a)
  }
  function cj(a, b, c, d, e) {
    if (null !== a) {
      var f = a.memoizedProps
      if (Ie(f, d) && a.ref === b.ref)
        if (((Ug = !1), (b.pendingProps = d = f), 0 !== (a.lanes & e))) 0 !== (a.flags & 131072) && (Ug = !0)
        else return (b.lanes = a.lanes), $i(a, b, e)
    }
    return dj(a, b, c, d, e)
  }
  function ej(a, b, c) {
    var d = b.pendingProps,
      e = d.children,
      f = null !== a ? a.memoizedState : null
    if ('hidden' === d.mode)
      if (0 === (b.mode & 1)) (b.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }), G(fj, gj), (gj |= c)
      else {
        if (0 === (c & 1073741824))
          return (
            (a = null !== f ? f.baseLanes | c : c),
            (b.lanes = b.childLanes = 1073741824),
            (b.memoizedState = { baseLanes: a, cachePool: null, transitions: null }),
            (b.updateQueue = null),
            G(fj, gj),
            (gj |= a),
            null
          )
        b.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }
        d = null !== f ? f.baseLanes : c
        G(fj, gj)
        gj |= d
      }
    else null !== f ? ((d = f.baseLanes | c), (b.memoizedState = null)) : (d = c), G(fj, gj), (gj |= d)
    Yi(a, b, e, c)
    return b.child
  }
  function hj(a, b) {
    var c = b.ref
    if ((null === a && null !== c) || (null !== a && a.ref !== c)) (b.flags |= 512), (b.flags |= 2097152)
  }
  function dj(a, b, c, d, e) {
    var f = Zf(c) ? Xf : H$1.current
    f = Yf(b, f)
    Tg(b, e)
    c = Xh(a, b, c, d, f, e)
    d = bi()
    if (null !== a && !Ug) return (b.updateQueue = a.updateQueue), (b.flags &= -2053), (a.lanes &= ~e), $i(a, b, e)
    I && d && vg(b)
    b.flags |= 1
    Yi(a, b, c, e)
    return b.child
  }
  function ij(a, b, c, d, e) {
    if (Zf(c)) {
      var f = !0
      cg(b)
    } else f = !1
    Tg(b, e)
    if (null === b.stateNode) jj(a, b), ph(b, c, d), rh(b, c, d, e), (d = !0)
    else if (null === a) {
      var g = b.stateNode,
        h = b.memoizedProps
      g.props = h
      var k = g.context,
        l = c.contextType
      'object' === typeof l && null !== l ? (l = Vg(l)) : ((l = Zf(c) ? Xf : H$1.current), (l = Yf(b, l)))
      var m = c.getDerivedStateFromProps,
        q = 'function' === typeof m || 'function' === typeof g.getSnapshotBeforeUpdate
      q || ('function' !== typeof g.UNSAFE_componentWillReceiveProps && 'function' !== typeof g.componentWillReceiveProps) || ((h !== d || k !== l) && qh(b, g, d, l))
      $g = !1
      var r = b.memoizedState
      g.state = r
      gh(b, d, g, e)
      k = b.memoizedState
      h !== d || r !== k || Wf.current || $g
        ? ('function' === typeof m && (kh(b, c, m, d), (k = b.memoizedState)),
          (h = $g || oh(b, c, h, d, r, k, l))
            ? (q ||
                ('function' !== typeof g.UNSAFE_componentWillMount && 'function' !== typeof g.componentWillMount) ||
                ('function' === typeof g.componentWillMount && g.componentWillMount(), 'function' === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()),
              'function' === typeof g.componentDidMount && (b.flags |= 4194308))
            : ('function' === typeof g.componentDidMount && (b.flags |= 4194308), (b.memoizedProps = d), (b.memoizedState = k)),
          (g.props = d),
          (g.state = k),
          (g.context = l),
          (d = h))
        : ('function' === typeof g.componentDidMount && (b.flags |= 4194308), (d = !1))
    } else {
      g = b.stateNode
      bh(a, b)
      h = b.memoizedProps
      l = b.type === b.elementType ? h : Lg(b.type, h)
      g.props = l
      q = b.pendingProps
      r = g.context
      k = c.contextType
      'object' === typeof k && null !== k ? (k = Vg(k)) : ((k = Zf(c) ? Xf : H$1.current), (k = Yf(b, k)))
      var y = c.getDerivedStateFromProps
      ;(m = 'function' === typeof y || 'function' === typeof g.getSnapshotBeforeUpdate) ||
        ('function' !== typeof g.UNSAFE_componentWillReceiveProps && 'function' !== typeof g.componentWillReceiveProps) ||
        ((h !== q || r !== k) && qh(b, g, d, k))
      $g = !1
      r = b.memoizedState
      g.state = r
      gh(b, d, g, e)
      var n = b.memoizedState
      h !== q || r !== n || Wf.current || $g
        ? ('function' === typeof y && (kh(b, c, y, d), (n = b.memoizedState)),
          (l = $g || oh(b, c, l, d, r, n, k) || !1)
            ? (m ||
                ('function' !== typeof g.UNSAFE_componentWillUpdate && 'function' !== typeof g.componentWillUpdate) ||
                ('function' === typeof g.componentWillUpdate && g.componentWillUpdate(d, n, k),
                'function' === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, n, k)),
              'function' === typeof g.componentDidUpdate && (b.flags |= 4),
              'function' === typeof g.getSnapshotBeforeUpdate && (b.flags |= 1024))
            : ('function' !== typeof g.componentDidUpdate || (h === a.memoizedProps && r === a.memoizedState) || (b.flags |= 4),
              'function' !== typeof g.getSnapshotBeforeUpdate || (h === a.memoizedProps && r === a.memoizedState) || (b.flags |= 1024),
              (b.memoizedProps = d),
              (b.memoizedState = n)),
          (g.props = d),
          (g.state = n),
          (g.context = k),
          (d = l))
        : ('function' !== typeof g.componentDidUpdate || (h === a.memoizedProps && r === a.memoizedState) || (b.flags |= 4),
          'function' !== typeof g.getSnapshotBeforeUpdate || (h === a.memoizedProps && r === a.memoizedState) || (b.flags |= 1024),
          (d = !1))
    }
    return kj(a, b, c, d, f, e)
  }
  function kj(a, b, c, d, e, f) {
    hj(a, b)
    var g = 0 !== (b.flags & 128)
    if (!d && !g) return e && dg(b, c, !1), $i(a, b, f)
    d = b.stateNode
    Xi.current = b
    var h = g && 'function' !== typeof c.getDerivedStateFromError ? null : d.render()
    b.flags |= 1
    null !== a && g ? ((b.child = Bh(b, a.child, null, f)), (b.child = Bh(b, null, h, f))) : Yi(a, b, h, f)
    b.memoizedState = d.state
    e && dg(b, c, !0)
    return b.child
  }
  function lj(a) {
    var b = a.stateNode
    b.pendingContext ? ag(a, b.pendingContext, b.pendingContext !== b.context) : b.context && ag(a, b.context, !1)
    Ih(a, b.containerInfo)
  }
  function mj(a, b, c, d, e) {
    Ig()
    Jg(e)
    b.flags |= 256
    Yi(a, b, c, d)
    return b.child
  }
  var nj = { dehydrated: null, treeContext: null, retryLane: 0 }
  function oj(a) {
    return { baseLanes: a, cachePool: null, transitions: null }
  }
  function pj(a, b, c) {
    var d = b.pendingProps,
      e = M.current,
      f = !1,
      g = 0 !== (b.flags & 128),
      h
    ;(h = g) || (h = null !== a && null === a.memoizedState ? !1 : 0 !== (e & 2))
    if (h) (f = !0), (b.flags &= -129)
    else if (null === a || null !== a.memoizedState) e |= 1
    G(M, e & 1)
    if (null === a) {
      Eg(b)
      a = b.memoizedState
      if (null !== a && ((a = a.dehydrated), null !== a)) return 0 === (b.mode & 1) ? (b.lanes = 1) : '$!' === a.data ? (b.lanes = 8) : (b.lanes = 1073741824), null
      g = d.children
      a = d.fallback
      return f
        ? ((d = b.mode),
          (f = b.child),
          (g = { mode: 'hidden', children: g }),
          0 === (d & 1) && null !== f ? ((f.childLanes = 0), (f.pendingProps = g)) : (f = qj(g, d, 0, null)),
          (a = Ah(a, d, c, null)),
          (f.return = b),
          (a.return = b),
          (f.sibling = a),
          (b.child = f),
          (b.child.memoizedState = oj(c)),
          (b.memoizedState = nj),
          a)
        : rj(b, g)
    }
    e = a.memoizedState
    if (null !== e && ((h = e.dehydrated), null !== h)) return sj(a, b, g, d, h, e, c)
    if (f) {
      f = d.fallback
      g = b.mode
      e = a.child
      h = e.sibling
      var k = { mode: 'hidden', children: d.children }
      0 === (g & 1) && b.child !== e
        ? ((d = b.child), (d.childLanes = 0), (d.pendingProps = k), (b.deletions = null))
        : ((d = wh(e, k)), (d.subtreeFlags = e.subtreeFlags & 14680064))
      null !== h ? (f = wh(h, f)) : ((f = Ah(f, g, c, null)), (f.flags |= 2))
      f.return = b
      d.return = b
      d.sibling = f
      b.child = d
      d = f
      f = b.child
      g = a.child.memoizedState
      g = null === g ? oj(c) : { baseLanes: g.baseLanes | c, cachePool: null, transitions: g.transitions }
      f.memoizedState = g
      f.childLanes = a.childLanes & ~c
      b.memoizedState = nj
      return d
    }
    f = a.child
    a = f.sibling
    d = wh(f, { mode: 'visible', children: d.children })
    0 === (b.mode & 1) && (d.lanes = c)
    d.return = b
    d.sibling = null
    null !== a && ((c = b.deletions), null === c ? ((b.deletions = [a]), (b.flags |= 16)) : c.push(a))
    b.child = d
    b.memoizedState = null
    return d
  }
  function rj(a, b) {
    b = qj({ mode: 'visible', children: b }, a.mode, 0, null)
    b.return = a
    return (a.child = b)
  }
  function tj(a, b, c, d) {
    null !== d && Jg(d)
    Bh(b, a.child, null, c)
    a = rj(b, b.pendingProps.children)
    a.flags |= 2
    b.memoizedState = null
    return a
  }
  function sj(a, b, c, d, e, f, g) {
    if (c) {
      if (b.flags & 256) return (b.flags &= -257), (d = Li(Error(p$1(422)))), tj(a, b, g, d)
      if (null !== b.memoizedState) return (b.child = a.child), (b.flags |= 128), null
      f = d.fallback
      e = b.mode
      d = qj({ mode: 'visible', children: d.children }, e, 0, null)
      f = Ah(f, e, g, null)
      f.flags |= 2
      d.return = b
      f.return = b
      d.sibling = f
      b.child = d
      0 !== (b.mode & 1) && Bh(b, a.child, null, g)
      b.child.memoizedState = oj(g)
      b.memoizedState = nj
      return f
    }
    if (0 === (b.mode & 1)) return tj(a, b, g, null)
    if ('$!' === e.data) {
      d = e.nextSibling && e.nextSibling.dataset
      if (d) var h = d.dgst
      d = h
      f = Error(p$1(419))
      d = Li(f, d, void 0)
      return tj(a, b, g, d)
    }
    h = 0 !== (g & a.childLanes)
    if (Ug || h) {
      d = R$1
      if (null !== d) {
        switch (g & -g) {
          case 4:
            e = 2
            break
          case 16:
            e = 8
            break
          case 64:
          case 128:
          case 256:
          case 512:
          case 1024:
          case 2048:
          case 4096:
          case 8192:
          case 16384:
          case 32768:
          case 65536:
          case 131072:
          case 262144:
          case 524288:
          case 1048576:
          case 2097152:
          case 4194304:
          case 8388608:
          case 16777216:
          case 33554432:
          case 67108864:
            e = 32
            break
          case 536870912:
            e = 268435456
            break
          default:
            e = 0
        }
        e = 0 !== (e & (d.suspendedLanes | g)) ? 0 : e
        0 !== e && e !== f.retryLane && ((f.retryLane = e), Zg(a, e), mh(d, a, e, -1))
      }
      uj()
      d = Li(Error(p$1(421)))
      return tj(a, b, g, d)
    }
    if ('$?' === e.data) return (b.flags |= 128), (b.child = a.child), (b = vj.bind(null, a)), (e._reactRetry = b), null
    a = f.treeContext
    yg = Lf(e.nextSibling)
    xg = b
    I = !0
    zg = null
    null !== a && ((og[pg++] = rg), (og[pg++] = sg), (og[pg++] = qg), (rg = a.id), (sg = a.overflow), (qg = b))
    b = rj(b, d.children)
    b.flags |= 4096
    return b
  }
  function wj(a, b, c) {
    a.lanes |= b
    var d = a.alternate
    null !== d && (d.lanes |= b)
    Sg(a.return, b, c)
  }
  function xj(a, b, c, d, e) {
    var f = a.memoizedState
    null === f
      ? (a.memoizedState = { isBackwards: b, rendering: null, renderingStartTime: 0, last: d, tail: c, tailMode: e })
      : ((f.isBackwards = b), (f.rendering = null), (f.renderingStartTime = 0), (f.last = d), (f.tail = c), (f.tailMode = e))
  }
  function yj(a, b, c) {
    var d = b.pendingProps,
      e = d.revealOrder,
      f = d.tail
    Yi(a, b, d.children, c)
    d = M.current
    if (0 !== (d & 2)) (d = (d & 1) | 2), (b.flags |= 128)
    else {
      if (null !== a && 0 !== (a.flags & 128))
        a: for (a = b.child; null !== a; ) {
          if (13 === a.tag) null !== a.memoizedState && wj(a, c, b)
          else if (19 === a.tag) wj(a, c, b)
          else if (null !== a.child) {
            a.child.return = a
            a = a.child
            continue
          }
          if (a === b) break a
          for (; null === a.sibling; ) {
            if (null === a.return || a.return === b) break a
            a = a.return
          }
          a.sibling.return = a.return
          a = a.sibling
        }
      d &= 1
    }
    G(M, d)
    if (0 === (b.mode & 1)) b.memoizedState = null
    else
      switch (e) {
        case 'forwards':
          c = b.child
          for (e = null; null !== c; ) (a = c.alternate), null !== a && null === Mh(a) && (e = c), (c = c.sibling)
          c = e
          null === c ? ((e = b.child), (b.child = null)) : ((e = c.sibling), (c.sibling = null))
          xj(b, !1, e, c, f)
          break
        case 'backwards':
          c = null
          e = b.child
          for (b.child = null; null !== e; ) {
            a = e.alternate
            if (null !== a && null === Mh(a)) {
              b.child = e
              break
            }
            a = e.sibling
            e.sibling = c
            c = e
            e = a
          }
          xj(b, !0, c, null, f)
          break
        case 'together':
          xj(b, !1, null, null, void 0)
          break
        default:
          b.memoizedState = null
      }
    return b.child
  }
  function jj(a, b) {
    0 === (b.mode & 1) && null !== a && ((a.alternate = null), (b.alternate = null), (b.flags |= 2))
  }
  function $i(a, b, c) {
    null !== a && (b.dependencies = a.dependencies)
    hh |= b.lanes
    if (0 === (c & b.childLanes)) return null
    if (null !== a && b.child !== a.child) throw Error(p$1(153))
    if (null !== b.child) {
      a = b.child
      c = wh(a, a.pendingProps)
      b.child = c
      for (c.return = b; null !== a.sibling; ) (a = a.sibling), (c = c.sibling = wh(a, a.pendingProps)), (c.return = b)
      c.sibling = null
    }
    return b.child
  }
  function zj(a, b, c) {
    switch (b.tag) {
      case 3:
        lj(b)
        Ig()
        break
      case 5:
        Kh(b)
        break
      case 1:
        Zf(b.type) && cg(b)
        break
      case 4:
        Ih(b, b.stateNode.containerInfo)
        break
      case 10:
        var d = b.type._context,
          e = b.memoizedProps.value
        G(Mg, d._currentValue)
        d._currentValue = e
        break
      case 13:
        d = b.memoizedState
        if (null !== d) {
          if (null !== d.dehydrated) return G(M, M.current & 1), (b.flags |= 128), null
          if (0 !== (c & b.child.childLanes)) return pj(a, b, c)
          G(M, M.current & 1)
          a = $i(a, b, c)
          return null !== a ? a.sibling : null
        }
        G(M, M.current & 1)
        break
      case 19:
        d = 0 !== (c & b.childLanes)
        if (0 !== (a.flags & 128)) {
          if (d) return yj(a, b, c)
          b.flags |= 128
        }
        e = b.memoizedState
        null !== e && ((e.rendering = null), (e.tail = null), (e.lastEffect = null))
        G(M, M.current)
        if (d) break
        else return null
      case 22:
      case 23:
        return (b.lanes = 0), ej(a, b, c)
    }
    return $i(a, b, c)
  }
  var Aj, Bj, Cj, Dj
  Aj = function (a, b) {
    for (var c = b.child; null !== c; ) {
      if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode)
      else if (4 !== c.tag && null !== c.child) {
        c.child.return = c
        c = c.child
        continue
      }
      if (c === b) break
      for (; null === c.sibling; ) {
        if (null === c.return || c.return === b) return
        c = c.return
      }
      c.sibling.return = c.return
      c = c.sibling
    }
  }
  Bj = function () {}
  Cj = function (a, b, c, d) {
    var e = a.memoizedProps
    if (e !== d) {
      a = b.stateNode
      Hh(Eh.current)
      var f = null
      switch (c) {
        case 'input':
          e = Ya(a, e)
          d = Ya(a, d)
          f = []
          break
        case 'select':
          e = A$1({}, e, { value: void 0 })
          d = A$1({}, d, { value: void 0 })
          f = []
          break
        case 'textarea':
          e = gb(a, e)
          d = gb(a, d)
          f = []
          break
        default:
          'function' !== typeof e.onClick && 'function' === typeof d.onClick && (a.onclick = Bf)
      }
      ub(c, d)
      var g
      c = null
      for (l in e)
        if (!d.hasOwnProperty(l) && e.hasOwnProperty(l) && null != e[l])
          if ('style' === l) {
            var h = e[l]
            for (g in h) h.hasOwnProperty(g) && (c || (c = {}), (c[g] = ''))
          } else
            'dangerouslySetInnerHTML' !== l &&
              'children' !== l &&
              'suppressContentEditableWarning' !== l &&
              'suppressHydrationWarning' !== l &&
              'autoFocus' !== l &&
              (ea.hasOwnProperty(l) ? f || (f = []) : (f = f || []).push(l, null))
      for (l in d) {
        var k = d[l]
        h = null != e ? e[l] : void 0
        if (d.hasOwnProperty(l) && k !== h && (null != k || null != h))
          if ('style' === l)
            if (h) {
              for (g in h) !h.hasOwnProperty(g) || (k && k.hasOwnProperty(g)) || (c || (c = {}), (c[g] = ''))
              for (g in k) k.hasOwnProperty(g) && h[g] !== k[g] && (c || (c = {}), (c[g] = k[g]))
            } else c || (f || (f = []), f.push(l, c)), (c = k)
          else
            'dangerouslySetInnerHTML' === l
              ? ((k = k ? k.__html : void 0), (h = h ? h.__html : void 0), null != k && h !== k && (f = f || []).push(l, k))
              : 'children' === l
              ? ('string' !== typeof k && 'number' !== typeof k) || (f = f || []).push(l, '' + k)
              : 'suppressContentEditableWarning' !== l &&
                'suppressHydrationWarning' !== l &&
                (ea.hasOwnProperty(l) ? (null != k && 'onScroll' === l && D('scroll', a), f || h === k || (f = [])) : (f = f || []).push(l, k))
      }
      c && (f = f || []).push('style', c)
      var l = f
      if ((b.updateQueue = l)) b.flags |= 4
    }
  }
  Dj = function (a, b, c, d) {
    c !== d && (b.flags |= 4)
  }
  function Ej(a, b) {
    if (!I)
      switch (a.tailMode) {
        case 'hidden':
          b = a.tail
          for (var c = null; null !== b; ) null !== b.alternate && (c = b), (b = b.sibling)
          null === c ? (a.tail = null) : (c.sibling = null)
          break
        case 'collapsed':
          c = a.tail
          for (var d = null; null !== c; ) null !== c.alternate && (d = c), (c = c.sibling)
          null === d ? (b || null === a.tail ? (a.tail = null) : (a.tail.sibling = null)) : (d.sibling = null)
      }
  }
  function S(a) {
    var b = null !== a.alternate && a.alternate.child === a.child,
      c = 0,
      d = 0
    if (b) for (var e = a.child; null !== e; ) (c |= e.lanes | e.childLanes), (d |= e.subtreeFlags & 14680064), (d |= e.flags & 14680064), (e.return = a), (e = e.sibling)
    else for (e = a.child; null !== e; ) (c |= e.lanes | e.childLanes), (d |= e.subtreeFlags), (d |= e.flags), (e.return = a), (e = e.sibling)
    a.subtreeFlags |= d
    a.childLanes = c
    return b
  }
  function Fj(a, b, c) {
    var d = b.pendingProps
    wg(b)
    switch (b.tag) {
      case 2:
      case 16:
      case 15:
      case 0:
      case 11:
      case 7:
      case 8:
      case 12:
      case 9:
      case 14:
        return S(b), null
      case 1:
        return Zf(b.type) && $f(), S(b), null
      case 3:
        d = b.stateNode
        Jh()
        E$1(Wf)
        E$1(H$1)
        Oh()
        d.pendingContext && ((d.context = d.pendingContext), (d.pendingContext = null))
        if (null === a || null === a.child)
          Gg(b) ? (b.flags |= 4) : null === a || (a.memoizedState.isDehydrated && 0 === (b.flags & 256)) || ((b.flags |= 1024), null !== zg && (Gj(zg), (zg = null)))
        Bj(a, b)
        S(b)
        return null
      case 5:
        Lh(b)
        var e = Hh(Gh.current)
        c = b.type
        if (null !== a && null != b.stateNode) Cj(a, b, c, d, e), a.ref !== b.ref && ((b.flags |= 512), (b.flags |= 2097152))
        else {
          if (!d) {
            if (null === b.stateNode) throw Error(p$1(166))
            S(b)
            return null
          }
          a = Hh(Eh.current)
          if (Gg(b)) {
            d = b.stateNode
            c = b.type
            var f = b.memoizedProps
            d[Of] = b
            d[Pf] = f
            a = 0 !== (b.mode & 1)
            switch (c) {
              case 'dialog':
                D('cancel', d)
                D('close', d)
                break
              case 'iframe':
              case 'object':
              case 'embed':
                D('load', d)
                break
              case 'video':
              case 'audio':
                for (e = 0; e < lf.length; e++) D(lf[e], d)
                break
              case 'source':
                D('error', d)
                break
              case 'img':
              case 'image':
              case 'link':
                D('error', d)
                D('load', d)
                break
              case 'details':
                D('toggle', d)
                break
              case 'input':
                Za(d, f)
                D('invalid', d)
                break
              case 'select':
                d._wrapperState = { wasMultiple: !!f.multiple }
                D('invalid', d)
                break
              case 'textarea':
                hb(d, f), D('invalid', d)
            }
            ub(c, f)
            e = null
            for (var g in f)
              if (f.hasOwnProperty(g)) {
                var h = f[g]
                'children' === g
                  ? 'string' === typeof h
                    ? d.textContent !== h && (!0 !== f.suppressHydrationWarning && Af(d.textContent, h, a), (e = ['children', h]))
                    : 'number' === typeof h && d.textContent !== '' + h && (!0 !== f.suppressHydrationWarning && Af(d.textContent, h, a), (e = ['children', '' + h]))
                  : ea.hasOwnProperty(g) && null != h && 'onScroll' === g && D('scroll', d)
              }
            switch (c) {
              case 'input':
                Va(d)
                db(d, f, !0)
                break
              case 'textarea':
                Va(d)
                jb(d)
                break
              case 'select':
              case 'option':
                break
              default:
                'function' === typeof f.onClick && (d.onclick = Bf)
            }
            d = e
            b.updateQueue = d
            null !== d && (b.flags |= 4)
          } else {
            g = 9 === e.nodeType ? e : e.ownerDocument
            'http://www.w3.org/1999/xhtml' === a && (a = kb(c))
            'http://www.w3.org/1999/xhtml' === a
              ? 'script' === c
                ? ((a = g.createElement('div')), (a.innerHTML = '<script>\x3c/script>'), (a = a.removeChild(a.firstChild)))
                : 'string' === typeof d.is
                ? (a = g.createElement(c, { is: d.is }))
                : ((a = g.createElement(c)), 'select' === c && ((g = a), d.multiple ? (g.multiple = !0) : d.size && (g.size = d.size)))
              : (a = g.createElementNS(a, c))
            a[Of] = b
            a[Pf] = d
            Aj(a, b, !1, !1)
            b.stateNode = a
            a: {
              g = vb(c, d)
              switch (c) {
                case 'dialog':
                  D('cancel', a)
                  D('close', a)
                  e = d
                  break
                case 'iframe':
                case 'object':
                case 'embed':
                  D('load', a)
                  e = d
                  break
                case 'video':
                case 'audio':
                  for (e = 0; e < lf.length; e++) D(lf[e], a)
                  e = d
                  break
                case 'source':
                  D('error', a)
                  e = d
                  break
                case 'img':
                case 'image':
                case 'link':
                  D('error', a)
                  D('load', a)
                  e = d
                  break
                case 'details':
                  D('toggle', a)
                  e = d
                  break
                case 'input':
                  Za(a, d)
                  e = Ya(a, d)
                  D('invalid', a)
                  break
                case 'option':
                  e = d
                  break
                case 'select':
                  a._wrapperState = { wasMultiple: !!d.multiple }
                  e = A$1({}, d, { value: void 0 })
                  D('invalid', a)
                  break
                case 'textarea':
                  hb(a, d)
                  e = gb(a, d)
                  D('invalid', a)
                  break
                default:
                  e = d
              }
              ub(c, e)
              h = e
              for (f in h)
                if (h.hasOwnProperty(f)) {
                  var k = h[f]
                  'style' === f
                    ? sb(a, k)
                    : 'dangerouslySetInnerHTML' === f
                    ? ((k = k ? k.__html : void 0), null != k && nb(a, k))
                    : 'children' === f
                    ? 'string' === typeof k
                      ? ('textarea' !== c || '' !== k) && ob(a, k)
                      : 'number' === typeof k && ob(a, '' + k)
                    : 'suppressContentEditableWarning' !== f &&
                      'suppressHydrationWarning' !== f &&
                      'autoFocus' !== f &&
                      (ea.hasOwnProperty(f) ? null != k && 'onScroll' === f && D('scroll', a) : null != k && ta(a, f, k, g))
                }
              switch (c) {
                case 'input':
                  Va(a)
                  db(a, d, !1)
                  break
                case 'textarea':
                  Va(a)
                  jb(a)
                  break
                case 'option':
                  null != d.value && a.setAttribute('value', '' + Sa(d.value))
                  break
                case 'select':
                  a.multiple = !!d.multiple
                  f = d.value
                  null != f ? fb(a, !!d.multiple, f, !1) : null != d.defaultValue && fb(a, !!d.multiple, d.defaultValue, !0)
                  break
                default:
                  'function' === typeof e.onClick && (a.onclick = Bf)
              }
              switch (c) {
                case 'button':
                case 'input':
                case 'select':
                case 'textarea':
                  d = !!d.autoFocus
                  break a
                case 'img':
                  d = !0
                  break a
                default:
                  d = !1
              }
            }
            d && (b.flags |= 4)
          }
          null !== b.ref && ((b.flags |= 512), (b.flags |= 2097152))
        }
        S(b)
        return null
      case 6:
        if (a && null != b.stateNode) Dj(a, b, a.memoizedProps, d)
        else {
          if ('string' !== typeof d && null === b.stateNode) throw Error(p$1(166))
          c = Hh(Gh.current)
          Hh(Eh.current)
          if (Gg(b)) {
            d = b.stateNode
            c = b.memoizedProps
            d[Of] = b
            if ((f = d.nodeValue !== c))
              if (((a = xg), null !== a))
                switch (a.tag) {
                  case 3:
                    Af(d.nodeValue, c, 0 !== (a.mode & 1))
                    break
                  case 5:
                    !0 !== a.memoizedProps.suppressHydrationWarning && Af(d.nodeValue, c, 0 !== (a.mode & 1))
                }
            f && (b.flags |= 4)
          } else (d = (9 === c.nodeType ? c : c.ownerDocument).createTextNode(d)), (d[Of] = b), (b.stateNode = d)
        }
        S(b)
        return null
      case 13:
        E$1(M)
        d = b.memoizedState
        if (null === a || (null !== a.memoizedState && null !== a.memoizedState.dehydrated)) {
          if (I && null !== yg && 0 !== (b.mode & 1) && 0 === (b.flags & 128)) Hg(), Ig(), (b.flags |= 98560), (f = !1)
          else if (((f = Gg(b)), null !== d && null !== d.dehydrated)) {
            if (null === a) {
              if (!f) throw Error(p$1(318))
              f = b.memoizedState
              f = null !== f ? f.dehydrated : null
              if (!f) throw Error(p$1(317))
              f[Of] = b
            } else Ig(), 0 === (b.flags & 128) && (b.memoizedState = null), (b.flags |= 4)
            S(b)
            f = !1
          } else null !== zg && (Gj(zg), (zg = null)), (f = !0)
          if (!f) return b.flags & 65536 ? b : null
        }
        if (0 !== (b.flags & 128)) return (b.lanes = c), b
        d = null !== d
        d !== (null !== a && null !== a.memoizedState) && d && ((b.child.flags |= 8192), 0 !== (b.mode & 1) && (null === a || 0 !== (M.current & 1) ? 0 === T && (T = 3) : uj()))
        null !== b.updateQueue && (b.flags |= 4)
        S(b)
        return null
      case 4:
        return Jh(), Bj(a, b), null === a && sf(b.stateNode.containerInfo), S(b), null
      case 10:
        return Rg(b.type._context), S(b), null
      case 17:
        return Zf(b.type) && $f(), S(b), null
      case 19:
        E$1(M)
        f = b.memoizedState
        if (null === f) return S(b), null
        d = 0 !== (b.flags & 128)
        g = f.rendering
        if (null === g)
          if (d) Ej(f, !1)
          else {
            if (0 !== T || (null !== a && 0 !== (a.flags & 128)))
              for (a = b.child; null !== a; ) {
                g = Mh(a)
                if (null !== g) {
                  b.flags |= 128
                  Ej(f, !1)
                  d = g.updateQueue
                  null !== d && ((b.updateQueue = d), (b.flags |= 4))
                  b.subtreeFlags = 0
                  d = c
                  for (c = b.child; null !== c; )
                    (f = c),
                      (a = d),
                      (f.flags &= 14680066),
                      (g = f.alternate),
                      null === g
                        ? ((f.childLanes = 0),
                          (f.lanes = a),
                          (f.child = null),
                          (f.subtreeFlags = 0),
                          (f.memoizedProps = null),
                          (f.memoizedState = null),
                          (f.updateQueue = null),
                          (f.dependencies = null),
                          (f.stateNode = null))
                        : ((f.childLanes = g.childLanes),
                          (f.lanes = g.lanes),
                          (f.child = g.child),
                          (f.subtreeFlags = 0),
                          (f.deletions = null),
                          (f.memoizedProps = g.memoizedProps),
                          (f.memoizedState = g.memoizedState),
                          (f.updateQueue = g.updateQueue),
                          (f.type = g.type),
                          (a = g.dependencies),
                          (f.dependencies = null === a ? null : { lanes: a.lanes, firstContext: a.firstContext })),
                      (c = c.sibling)
                  G(M, (M.current & 1) | 2)
                  return b.child
                }
                a = a.sibling
              }
            null !== f.tail && B() > Hj && ((b.flags |= 128), (d = !0), Ej(f, !1), (b.lanes = 4194304))
          }
        else {
          if (!d)
            if (((a = Mh(g)), null !== a)) {
              if (
                ((b.flags |= 128),
                (d = !0),
                (c = a.updateQueue),
                null !== c && ((b.updateQueue = c), (b.flags |= 4)),
                Ej(f, !0),
                null === f.tail && 'hidden' === f.tailMode && !g.alternate && !I)
              )
                return S(b), null
            } else 2 * B() - f.renderingStartTime > Hj && 1073741824 !== c && ((b.flags |= 128), (d = !0), Ej(f, !1), (b.lanes = 4194304))
          f.isBackwards ? ((g.sibling = b.child), (b.child = g)) : ((c = f.last), null !== c ? (c.sibling = g) : (b.child = g), (f.last = g))
        }
        if (null !== f.tail)
          return (b = f.tail), (f.rendering = b), (f.tail = b.sibling), (f.renderingStartTime = B()), (b.sibling = null), (c = M.current), G(M, d ? (c & 1) | 2 : c & 1), b
        S(b)
        return null
      case 22:
      case 23:
        return (
          Ij(),
          (d = null !== b.memoizedState),
          null !== a && (null !== a.memoizedState) !== d && (b.flags |= 8192),
          d && 0 !== (b.mode & 1) ? 0 !== (gj & 1073741824) && (S(b), b.subtreeFlags & 6 && (b.flags |= 8192)) : S(b),
          null
        )
      case 24:
        return null
      case 25:
        return null
    }
    throw Error(p$1(156, b.tag))
  }
  function Jj(a, b) {
    wg(b)
    switch (b.tag) {
      case 1:
        return Zf(b.type) && $f(), (a = b.flags), a & 65536 ? ((b.flags = (a & -65537) | 128), b) : null
      case 3:
        return Jh(), E$1(Wf), E$1(H$1), Oh(), (a = b.flags), 0 !== (a & 65536) && 0 === (a & 128) ? ((b.flags = (a & -65537) | 128), b) : null
      case 5:
        return Lh(b), null
      case 13:
        E$1(M)
        a = b.memoizedState
        if (null !== a && null !== a.dehydrated) {
          if (null === b.alternate) throw Error(p$1(340))
          Ig()
        }
        a = b.flags
        return a & 65536 ? ((b.flags = (a & -65537) | 128), b) : null
      case 19:
        return E$1(M), null
      case 4:
        return Jh(), null
      case 10:
        return Rg(b.type._context), null
      case 22:
      case 23:
        return Ij(), null
      case 24:
        return null
      default:
        return null
    }
  }
  var Kj = !1,
    U = !1,
    Lj = 'function' === typeof WeakSet ? WeakSet : Set,
    V = null
  function Mj(a, b) {
    var c = a.ref
    if (null !== c)
      if ('function' === typeof c)
        try {
          c(null)
        } catch (d) {
          W$1(a, b, d)
        }
      else c.current = null
  }
  function Nj(a, b, c) {
    try {
      c()
    } catch (d) {
      W$1(a, b, d)
    }
  }
  var Oj = !1
  function Pj(a, b) {
    Cf = dd
    a = Me()
    if (Ne(a)) {
      if ('selectionStart' in a) var c = { start: a.selectionStart, end: a.selectionEnd }
      else
        a: {
          c = ((c = a.ownerDocument) && c.defaultView) || window
          var d = c.getSelection && c.getSelection()
          if (d && 0 !== d.rangeCount) {
            c = d.anchorNode
            var e = d.anchorOffset,
              f = d.focusNode
            d = d.focusOffset
            try {
              c.nodeType, f.nodeType
            } catch (F) {
              c = null
              break a
            }
            var g = 0,
              h = -1,
              k = -1,
              l = 0,
              m = 0,
              q = a,
              r = null
            b: for (;;) {
              for (var y; ; ) {
                q !== c || (0 !== e && 3 !== q.nodeType) || (h = g + e)
                q !== f || (0 !== d && 3 !== q.nodeType) || (k = g + d)
                3 === q.nodeType && (g += q.nodeValue.length)
                if (null === (y = q.firstChild)) break
                r = q
                q = y
              }
              for (;;) {
                if (q === a) break b
                r === c && ++l === e && (h = g)
                r === f && ++m === d && (k = g)
                if (null !== (y = q.nextSibling)) break
                q = r
                r = q.parentNode
              }
              q = y
            }
            c = -1 === h || -1 === k ? null : { start: h, end: k }
          } else c = null
        }
      c = c || { start: 0, end: 0 }
    } else c = null
    Df = { focusedElem: a, selectionRange: c }
    dd = !1
    for (V = b; null !== V; )
      if (((b = V), (a = b.child), 0 !== (b.subtreeFlags & 1028) && null !== a)) (a.return = b), (V = a)
      else
        for (; null !== V; ) {
          b = V
          try {
            var n = b.alternate
            if (0 !== (b.flags & 1024))
              switch (b.tag) {
                case 0:
                case 11:
                case 15:
                  break
                case 1:
                  if (null !== n) {
                    var t = n.memoizedProps,
                      J = n.memoizedState,
                      x = b.stateNode,
                      w = x.getSnapshotBeforeUpdate(b.elementType === b.type ? t : Lg(b.type, t), J)
                    x.__reactInternalSnapshotBeforeUpdate = w
                  }
                  break
                case 3:
                  var u = b.stateNode.containerInfo
                  1 === u.nodeType ? (u.textContent = '') : 9 === u.nodeType && u.documentElement && u.removeChild(u.documentElement)
                  break
                case 5:
                case 6:
                case 4:
                case 17:
                  break
                default:
                  throw Error(p$1(163))
              }
          } catch (F) {
            W$1(b, b.return, F)
          }
          a = b.sibling
          if (null !== a) {
            a.return = b.return
            V = a
            break
          }
          V = b.return
        }
    n = Oj
    Oj = !1
    return n
  }
  function Qj(a, b, c) {
    var d = b.updateQueue
    d = null !== d ? d.lastEffect : null
    if (null !== d) {
      var e = (d = d.next)
      do {
        if ((e.tag & a) === a) {
          var f = e.destroy
          e.destroy = void 0
          void 0 !== f && Nj(b, c, f)
        }
        e = e.next
      } while (e !== d)
    }
  }
  function Rj(a, b) {
    b = b.updateQueue
    b = null !== b ? b.lastEffect : null
    if (null !== b) {
      var c = (b = b.next)
      do {
        if ((c.tag & a) === a) {
          var d = c.create
          c.destroy = d()
        }
        c = c.next
      } while (c !== b)
    }
  }
  function Sj(a) {
    var b = a.ref
    if (null !== b) {
      var c = a.stateNode
      switch (a.tag) {
        case 5:
          a = c
          break
        default:
          a = c
      }
      'function' === typeof b ? b(a) : (b.current = a)
    }
  }
  function Tj(a) {
    var b = a.alternate
    null !== b && ((a.alternate = null), Tj(b))
    a.child = null
    a.deletions = null
    a.sibling = null
    5 === a.tag && ((b = a.stateNode), null !== b && (delete b[Of], delete b[Pf], delete b[of], delete b[Qf], delete b[Rf]))
    a.stateNode = null
    a.return = null
    a.dependencies = null
    a.memoizedProps = null
    a.memoizedState = null
    a.pendingProps = null
    a.stateNode = null
    a.updateQueue = null
  }
  function Uj(a) {
    return 5 === a.tag || 3 === a.tag || 4 === a.tag
  }
  function Vj(a) {
    a: for (;;) {
      for (; null === a.sibling; ) {
        if (null === a.return || Uj(a.return)) return null
        a = a.return
      }
      a.sibling.return = a.return
      for (a = a.sibling; 5 !== a.tag && 6 !== a.tag && 18 !== a.tag; ) {
        if (a.flags & 2) continue a
        if (null === a.child || 4 === a.tag) continue a
        else (a.child.return = a), (a = a.child)
      }
      if (!(a.flags & 2)) return a.stateNode
    }
  }
  function Wj(a, b, c) {
    var d = a.tag
    if (5 === d || 6 === d)
      (a = a.stateNode),
        b
          ? 8 === c.nodeType
            ? c.parentNode.insertBefore(a, b)
            : c.insertBefore(a, b)
          : (8 === c.nodeType ? ((b = c.parentNode), b.insertBefore(a, c)) : ((b = c), b.appendChild(a)),
            (c = c._reactRootContainer),
            (null !== c && void 0 !== c) || null !== b.onclick || (b.onclick = Bf))
    else if (4 !== d && ((a = a.child), null !== a)) for (Wj(a, b, c), a = a.sibling; null !== a; ) Wj(a, b, c), (a = a.sibling)
  }
  function Xj(a, b, c) {
    var d = a.tag
    if (5 === d || 6 === d) (a = a.stateNode), b ? c.insertBefore(a, b) : c.appendChild(a)
    else if (4 !== d && ((a = a.child), null !== a)) for (Xj(a, b, c), a = a.sibling; null !== a; ) Xj(a, b, c), (a = a.sibling)
  }
  var X = null,
    Yj = !1
  function Zj(a, b, c) {
    for (c = c.child; null !== c; ) ak(a, b, c), (c = c.sibling)
  }
  function ak(a, b, c) {
    if (lc && 'function' === typeof lc.onCommitFiberUnmount)
      try {
        lc.onCommitFiberUnmount(kc, c)
      } catch (h) {}
    switch (c.tag) {
      case 5:
        U || Mj(c, b)
      case 6:
        var d = X,
          e = Yj
        X = null
        Zj(a, b, c)
        X = d
        Yj = e
        null !== X && (Yj ? ((a = X), (c = c.stateNode), 8 === a.nodeType ? a.parentNode.removeChild(c) : a.removeChild(c)) : X.removeChild(c.stateNode))
        break
      case 18:
        null !== X && (Yj ? ((a = X), (c = c.stateNode), 8 === a.nodeType ? Kf(a.parentNode, c) : 1 === a.nodeType && Kf(a, c), bd(a)) : Kf(X, c.stateNode))
        break
      case 4:
        d = X
        e = Yj
        X = c.stateNode.containerInfo
        Yj = !0
        Zj(a, b, c)
        X = d
        Yj = e
        break
      case 0:
      case 11:
      case 14:
      case 15:
        if (!U && ((d = c.updateQueue), null !== d && ((d = d.lastEffect), null !== d))) {
          e = d = d.next
          do {
            var f = e,
              g = f.destroy
            f = f.tag
            void 0 !== g && (0 !== (f & 2) ? Nj(c, b, g) : 0 !== (f & 4) && Nj(c, b, g))
            e = e.next
          } while (e !== d)
        }
        Zj(a, b, c)
        break
      case 1:
        if (!U && (Mj(c, b), (d = c.stateNode), 'function' === typeof d.componentWillUnmount))
          try {
            ;(d.props = c.memoizedProps), (d.state = c.memoizedState), d.componentWillUnmount()
          } catch (h) {
            W$1(c, b, h)
          }
        Zj(a, b, c)
        break
      case 21:
        Zj(a, b, c)
        break
      case 22:
        c.mode & 1 ? ((U = (d = U) || null !== c.memoizedState), Zj(a, b, c), (U = d)) : Zj(a, b, c)
        break
      default:
        Zj(a, b, c)
    }
  }
  function bk(a) {
    var b = a.updateQueue
    if (null !== b) {
      a.updateQueue = null
      var c = a.stateNode
      null === c && (c = a.stateNode = new Lj())
      b.forEach(function (b) {
        var d = ck.bind(null, a, b)
        c.has(b) || (c.add(b), b.then(d, d))
      })
    }
  }
  function dk(a, b) {
    var c = b.deletions
    if (null !== c)
      for (var d = 0; d < c.length; d++) {
        var e = c[d]
        try {
          var f = a,
            g = b,
            h = g
          a: for (; null !== h; ) {
            switch (h.tag) {
              case 5:
                X = h.stateNode
                Yj = !1
                break a
              case 3:
                X = h.stateNode.containerInfo
                Yj = !0
                break a
              case 4:
                X = h.stateNode.containerInfo
                Yj = !0
                break a
            }
            h = h.return
          }
          if (null === X) throw Error(p$1(160))
          ak(f, g, e)
          X = null
          Yj = !1
          var k = e.alternate
          null !== k && (k.return = null)
          e.return = null
        } catch (l) {
          W$1(e, b, l)
        }
      }
    if (b.subtreeFlags & 12854) for (b = b.child; null !== b; ) ek(b, a), (b = b.sibling)
  }
  function ek(a, b) {
    var c = a.alternate,
      d = a.flags
    switch (a.tag) {
      case 0:
      case 11:
      case 14:
      case 15:
        dk(b, a)
        fk(a)
        if (d & 4) {
          try {
            Qj(3, a, a.return), Rj(3, a)
          } catch (t) {
            W$1(a, a.return, t)
          }
          try {
            Qj(5, a, a.return)
          } catch (t) {
            W$1(a, a.return, t)
          }
        }
        break
      case 1:
        dk(b, a)
        fk(a)
        d & 512 && null !== c && Mj(c, c.return)
        break
      case 5:
        dk(b, a)
        fk(a)
        d & 512 && null !== c && Mj(c, c.return)
        if (a.flags & 32) {
          var e = a.stateNode
          try {
            ob(e, '')
          } catch (t) {
            W$1(a, a.return, t)
          }
        }
        if (d & 4 && ((e = a.stateNode), null != e)) {
          var f = a.memoizedProps,
            g = null !== c ? c.memoizedProps : f,
            h = a.type,
            k = a.updateQueue
          a.updateQueue = null
          if (null !== k)
            try {
              'input' === h && 'radio' === f.type && null != f.name && ab(e, f)
              vb(h, g)
              var l = vb(h, f)
              for (g = 0; g < k.length; g += 2) {
                var m = k[g],
                  q = k[g + 1]
                'style' === m ? sb(e, q) : 'dangerouslySetInnerHTML' === m ? nb(e, q) : 'children' === m ? ob(e, q) : ta(e, m, q, l)
              }
              switch (h) {
                case 'input':
                  bb(e, f)
                  break
                case 'textarea':
                  ib(e, f)
                  break
                case 'select':
                  var r = e._wrapperState.wasMultiple
                  e._wrapperState.wasMultiple = !!f.multiple
                  var y = f.value
                  null != y
                    ? fb(e, !!f.multiple, y, !1)
                    : r !== !!f.multiple && (null != f.defaultValue ? fb(e, !!f.multiple, f.defaultValue, !0) : fb(e, !!f.multiple, f.multiple ? [] : '', !1))
              }
              e[Pf] = f
            } catch (t) {
              W$1(a, a.return, t)
            }
        }
        break
      case 6:
        dk(b, a)
        fk(a)
        if (d & 4) {
          if (null === a.stateNode) throw Error(p$1(162))
          e = a.stateNode
          f = a.memoizedProps
          try {
            e.nodeValue = f
          } catch (t) {
            W$1(a, a.return, t)
          }
        }
        break
      case 3:
        dk(b, a)
        fk(a)
        if (d & 4 && null !== c && c.memoizedState.isDehydrated)
          try {
            bd(b.containerInfo)
          } catch (t) {
            W$1(a, a.return, t)
          }
        break
      case 4:
        dk(b, a)
        fk(a)
        break
      case 13:
        dk(b, a)
        fk(a)
        e = a.child
        e.flags & 8192 && ((f = null !== e.memoizedState), (e.stateNode.isHidden = f), !f || (null !== e.alternate && null !== e.alternate.memoizedState) || (gk = B()))
        d & 4 && bk(a)
        break
      case 22:
        m = null !== c && null !== c.memoizedState
        a.mode & 1 ? ((U = (l = U) || m), dk(b, a), (U = l)) : dk(b, a)
        fk(a)
        if (d & 8192) {
          l = null !== a.memoizedState
          if ((a.stateNode.isHidden = l) && !m && 0 !== (a.mode & 1))
            for (V = a, m = a.child; null !== m; ) {
              for (q = V = m; null !== V; ) {
                r = V
                y = r.child
                switch (r.tag) {
                  case 0:
                  case 11:
                  case 14:
                  case 15:
                    Qj(4, r, r.return)
                    break
                  case 1:
                    Mj(r, r.return)
                    var n = r.stateNode
                    if ('function' === typeof n.componentWillUnmount) {
                      d = r
                      c = r.return
                      try {
                        ;(b = d), (n.props = b.memoizedProps), (n.state = b.memoizedState), n.componentWillUnmount()
                      } catch (t) {
                        W$1(d, c, t)
                      }
                    }
                    break
                  case 5:
                    Mj(r, r.return)
                    break
                  case 22:
                    if (null !== r.memoizedState) {
                      hk(q)
                      continue
                    }
                }
                null !== y ? ((y.return = r), (V = y)) : hk(q)
              }
              m = m.sibling
            }
          a: for (m = null, q = a; ; ) {
            if (5 === q.tag) {
              if (null === m) {
                m = q
                try {
                  ;(e = q.stateNode),
                    l
                      ? ((f = e.style), 'function' === typeof f.setProperty ? f.setProperty('display', 'none', 'important') : (f.display = 'none'))
                      : ((h = q.stateNode),
                        (k = q.memoizedProps.style),
                        (g = void 0 !== k && null !== k && k.hasOwnProperty('display') ? k.display : null),
                        (h.style.display = rb('display', g)))
                } catch (t) {
                  W$1(a, a.return, t)
                }
              }
            } else if (6 === q.tag) {
              if (null === m)
                try {
                  q.stateNode.nodeValue = l ? '' : q.memoizedProps
                } catch (t) {
                  W$1(a, a.return, t)
                }
            } else if (((22 !== q.tag && 23 !== q.tag) || null === q.memoizedState || q === a) && null !== q.child) {
              q.child.return = q
              q = q.child
              continue
            }
            if (q === a) break a
            for (; null === q.sibling; ) {
              if (null === q.return || q.return === a) break a
              m === q && (m = null)
              q = q.return
            }
            m === q && (m = null)
            q.sibling.return = q.return
            q = q.sibling
          }
        }
        break
      case 19:
        dk(b, a)
        fk(a)
        d & 4 && bk(a)
        break
      case 21:
        break
      default:
        dk(b, a), fk(a)
    }
  }
  function fk(a) {
    var b = a.flags
    if (b & 2) {
      try {
        a: {
          for (var c = a.return; null !== c; ) {
            if (Uj(c)) {
              var d = c
              break a
            }
            c = c.return
          }
          throw Error(p$1(160))
        }
        switch (d.tag) {
          case 5:
            var e = d.stateNode
            d.flags & 32 && (ob(e, ''), (d.flags &= -33))
            var f = Vj(a)
            Xj(a, f, e)
            break
          case 3:
          case 4:
            var g = d.stateNode.containerInfo,
              h = Vj(a)
            Wj(a, h, g)
            break
          default:
            throw Error(p$1(161))
        }
      } catch (k) {
        W$1(a, a.return, k)
      }
      a.flags &= -3
    }
    b & 4096 && (a.flags &= -4097)
  }
  function ik(a, b, c) {
    V = a
    jk(a)
  }
  function jk(a, b, c) {
    for (var d = 0 !== (a.mode & 1); null !== V; ) {
      var e = V,
        f = e.child
      if (22 === e.tag && d) {
        var g = null !== e.memoizedState || Kj
        if (!g) {
          var h = e.alternate,
            k = (null !== h && null !== h.memoizedState) || U
          h = Kj
          var l = U
          Kj = g
          if ((U = k) && !l) for (V = e; null !== V; ) (g = V), (k = g.child), 22 === g.tag && null !== g.memoizedState ? kk(e) : null !== k ? ((k.return = g), (V = k)) : kk(e)
          for (; null !== f; ) (V = f), jk(f), (f = f.sibling)
          V = e
          Kj = h
          U = l
        }
        lk(a)
      } else 0 !== (e.subtreeFlags & 8772) && null !== f ? ((f.return = e), (V = f)) : lk(a)
    }
  }
  function lk(a) {
    for (; null !== V; ) {
      var b = V
      if (0 !== (b.flags & 8772)) {
        var c = b.alternate
        try {
          if (0 !== (b.flags & 8772))
            switch (b.tag) {
              case 0:
              case 11:
              case 15:
                U || Rj(5, b)
                break
              case 1:
                var d = b.stateNode
                if (b.flags & 4 && !U)
                  if (null === c) d.componentDidMount()
                  else {
                    var e = b.elementType === b.type ? c.memoizedProps : Lg(b.type, c.memoizedProps)
                    d.componentDidUpdate(e, c.memoizedState, d.__reactInternalSnapshotBeforeUpdate)
                  }
                var f = b.updateQueue
                null !== f && ih(b, f, d)
                break
              case 3:
                var g = b.updateQueue
                if (null !== g) {
                  c = null
                  if (null !== b.child)
                    switch (b.child.tag) {
                      case 5:
                        c = b.child.stateNode
                        break
                      case 1:
                        c = b.child.stateNode
                    }
                  ih(b, g, c)
                }
                break
              case 5:
                var h = b.stateNode
                if (null === c && b.flags & 4) {
                  c = h
                  var k = b.memoizedProps
                  switch (b.type) {
                    case 'button':
                    case 'input':
                    case 'select':
                    case 'textarea':
                      k.autoFocus && c.focus()
                      break
                    case 'img':
                      k.src && (c.src = k.src)
                  }
                }
                break
              case 6:
                break
              case 4:
                break
              case 12:
                break
              case 13:
                if (null === b.memoizedState) {
                  var l = b.alternate
                  if (null !== l) {
                    var m = l.memoizedState
                    if (null !== m) {
                      var q = m.dehydrated
                      null !== q && bd(q)
                    }
                  }
                }
                break
              case 19:
              case 17:
              case 21:
              case 22:
              case 23:
              case 25:
                break
              default:
                throw Error(p$1(163))
            }
          U || (b.flags & 512 && Sj(b))
        } catch (r) {
          W$1(b, b.return, r)
        }
      }
      if (b === a) {
        V = null
        break
      }
      c = b.sibling
      if (null !== c) {
        c.return = b.return
        V = c
        break
      }
      V = b.return
    }
  }
  function hk(a) {
    for (; null !== V; ) {
      var b = V
      if (b === a) {
        V = null
        break
      }
      var c = b.sibling
      if (null !== c) {
        c.return = b.return
        V = c
        break
      }
      V = b.return
    }
  }
  function kk(a) {
    for (; null !== V; ) {
      var b = V
      try {
        switch (b.tag) {
          case 0:
          case 11:
          case 15:
            var c = b.return
            try {
              Rj(4, b)
            } catch (k) {
              W$1(b, c, k)
            }
            break
          case 1:
            var d = b.stateNode
            if ('function' === typeof d.componentDidMount) {
              var e = b.return
              try {
                d.componentDidMount()
              } catch (k) {
                W$1(b, e, k)
              }
            }
            var f = b.return
            try {
              Sj(b)
            } catch (k) {
              W$1(b, f, k)
            }
            break
          case 5:
            var g = b.return
            try {
              Sj(b)
            } catch (k) {
              W$1(b, g, k)
            }
        }
      } catch (k) {
        W$1(b, b.return, k)
      }
      if (b === a) {
        V = null
        break
      }
      var h = b.sibling
      if (null !== h) {
        h.return = b.return
        V = h
        break
      }
      V = b.return
    }
  }
  var mk = Math.ceil,
    nk = ua.ReactCurrentDispatcher,
    ok = ua.ReactCurrentOwner,
    pk = ua.ReactCurrentBatchConfig,
    K = 0,
    R$1 = null,
    Y = null,
    Z = 0,
    gj = 0,
    fj = Uf(0),
    T = 0,
    qk = null,
    hh = 0,
    rk = 0,
    sk = 0,
    tk = null,
    uk = null,
    gk = 0,
    Hj = Infinity,
    vk = null,
    Pi = !1,
    Qi = null,
    Si = null,
    wk = !1,
    xk = null,
    yk = 0,
    zk = 0,
    Ak = null,
    Bk = -1,
    Ck = 0
  function L$1() {
    return 0 !== (K & 6) ? B() : -1 !== Bk ? Bk : (Bk = B())
  }
  function lh(a) {
    if (0 === (a.mode & 1)) return 1
    if (0 !== (K & 2) && 0 !== Z) return Z & -Z
    if (null !== Kg.transition) return 0 === Ck && (Ck = yc()), Ck
    a = C
    if (0 !== a) return a
    a = window.event
    a = void 0 === a ? 16 : jd(a.type)
    return a
  }
  function mh(a, b, c, d) {
    if (50 < zk) throw ((zk = 0), (Ak = null), Error(p$1(185)))
    Ac(a, c, d)
    if (0 === (K & 2) || a !== R$1)
      a === R$1 && (0 === (K & 2) && (rk |= c), 4 === T && Dk(a, Z)), Ek(a, d), 1 === c && 0 === K && 0 === (b.mode & 1) && ((Hj = B() + 500), fg && jg())
  }
  function Ek(a, b) {
    var c = a.callbackNode
    wc(a, b)
    var d = uc(a, a === R$1 ? Z : 0)
    if (0 === d) null !== c && bc(c), (a.callbackNode = null), (a.callbackPriority = 0)
    else if (((b = d & -d), a.callbackPriority !== b)) {
      null != c && bc(c)
      if (1 === b)
        0 === a.tag ? ig(Fk.bind(null, a)) : hg(Fk.bind(null, a)),
          Jf(function () {
            0 === (K & 6) && jg()
          }),
          (c = null)
      else {
        switch (Dc(d)) {
          case 1:
            c = fc
            break
          case 4:
            c = gc
            break
          case 16:
            c = hc
            break
          case 536870912:
            c = jc
            break
          default:
            c = hc
        }
        c = Gk(c, Hk.bind(null, a))
      }
      a.callbackPriority = b
      a.callbackNode = c
    }
  }
  function Hk(a, b) {
    Bk = -1
    Ck = 0
    if (0 !== (K & 6)) throw Error(p$1(327))
    var c = a.callbackNode
    if (Ik() && a.callbackNode !== c) return null
    var d = uc(a, a === R$1 ? Z : 0)
    if (0 === d) return null
    if (0 !== (d & 30) || 0 !== (d & a.expiredLanes) || b) b = Jk(a, d)
    else {
      b = d
      var e = K
      K |= 2
      var f = Kk()
      if (R$1 !== a || Z !== b) (vk = null), (Hj = B() + 500), Lk(a, b)
      do
        try {
          Mk()
          break
        } catch (h) {
          Nk(a, h)
        }
      while (1)
      Qg()
      nk.current = f
      K = e
      null !== Y ? (b = 0) : ((R$1 = null), (Z = 0), (b = T))
    }
    if (0 !== b) {
      2 === b && ((e = xc(a)), 0 !== e && ((d = e), (b = Ok(a, e))))
      if (1 === b) throw ((c = qk), Lk(a, 0), Dk(a, d), Ek(a, B()), c)
      if (6 === b) Dk(a, d)
      else {
        e = a.current.alternate
        if (0 === (d & 30) && !Pk(e) && ((b = Jk(a, d)), 2 === b && ((f = xc(a)), 0 !== f && ((d = f), (b = Ok(a, f)))), 1 === b))
          throw ((c = qk), Lk(a, 0), Dk(a, d), Ek(a, B()), c)
        a.finishedWork = e
        a.finishedLanes = d
        switch (b) {
          case 0:
          case 1:
            throw Error(p$1(345))
          case 2:
            Qk(a, uk, vk)
            break
          case 3:
            Dk(a, d)
            if ((d & 130023424) === d && ((b = gk + 500 - B()), 10 < b)) {
              if (0 !== uc(a, 0)) break
              e = a.suspendedLanes
              if ((e & d) !== d) {
                L$1()
                a.pingedLanes |= a.suspendedLanes & e
                break
              }
              a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), b)
              break
            }
            Qk(a, uk, vk)
            break
          case 4:
            Dk(a, d)
            if ((d & 4194240) === d) break
            b = a.eventTimes
            for (e = -1; 0 < d; ) {
              var g = 31 - oc(d)
              f = 1 << g
              g = b[g]
              g > e && (e = g)
              d &= ~f
            }
            d = e
            d = B() - d
            d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3e3 > d ? 3e3 : 4320 > d ? 4320 : 1960 * mk(d / 1960)) - d
            if (10 < d) {
              a.timeoutHandle = Ff(Qk.bind(null, a, uk, vk), d)
              break
            }
            Qk(a, uk, vk)
            break
          case 5:
            Qk(a, uk, vk)
            break
          default:
            throw Error(p$1(329))
        }
      }
    }
    Ek(a, B())
    return a.callbackNode === c ? Hk.bind(null, a) : null
  }
  function Ok(a, b) {
    var c = tk
    a.current.memoizedState.isDehydrated && (Lk(a, b).flags |= 256)
    a = Jk(a, b)
    2 !== a && ((b = uk), (uk = c), null !== b && Gj(b))
    return a
  }
  function Gj(a) {
    null === uk ? (uk = a) : uk.push.apply(uk, a)
  }
  function Pk(a) {
    for (var b = a; ; ) {
      if (b.flags & 16384) {
        var c = b.updateQueue
        if (null !== c && ((c = c.stores), null !== c))
          for (var d = 0; d < c.length; d++) {
            var e = c[d],
              f = e.getSnapshot
            e = e.value
            try {
              if (!He(f(), e)) return !1
            } catch (g) {
              return !1
            }
          }
      }
      c = b.child
      if (b.subtreeFlags & 16384 && null !== c) (c.return = b), (b = c)
      else {
        if (b === a) break
        for (; null === b.sibling; ) {
          if (null === b.return || b.return === a) return !0
          b = b.return
        }
        b.sibling.return = b.return
        b = b.sibling
      }
    }
    return !0
  }
  function Dk(a, b) {
    b &= ~sk
    b &= ~rk
    a.suspendedLanes |= b
    a.pingedLanes &= ~b
    for (a = a.expirationTimes; 0 < b; ) {
      var c = 31 - oc(b),
        d = 1 << c
      a[c] = -1
      b &= ~d
    }
  }
  function Fk(a) {
    if (0 !== (K & 6)) throw Error(p$1(327))
    Ik()
    var b = uc(a, 0)
    if (0 === (b & 1)) return Ek(a, B()), null
    var c = Jk(a, b)
    if (0 !== a.tag && 2 === c) {
      var d = xc(a)
      0 !== d && ((b = d), (c = Ok(a, d)))
    }
    if (1 === c) throw ((c = qk), Lk(a, 0), Dk(a, b), Ek(a, B()), c)
    if (6 === c) throw Error(p$1(345))
    a.finishedWork = a.current.alternate
    a.finishedLanes = b
    Qk(a, uk, vk)
    Ek(a, B())
    return null
  }
  function Rk(a, b) {
    var c = K
    K |= 1
    try {
      return a(b)
    } finally {
      ;(K = c), 0 === K && ((Hj = B() + 500), fg && jg())
    }
  }
  function Sk(a) {
    null !== xk && 0 === xk.tag && 0 === (K & 6) && Ik()
    var b = K
    K |= 1
    var c = pk.transition,
      d = C
    try {
      if (((pk.transition = null), (C = 1), a)) return a()
    } finally {
      ;(C = d), (pk.transition = c), (K = b), 0 === (K & 6) && jg()
    }
  }
  function Ij() {
    gj = fj.current
    E$1(fj)
  }
  function Lk(a, b) {
    a.finishedWork = null
    a.finishedLanes = 0
    var c = a.timeoutHandle
    ;-1 !== c && ((a.timeoutHandle = -1), Gf(c))
    if (null !== Y)
      for (c = Y.return; null !== c; ) {
        var d = c
        wg(d)
        switch (d.tag) {
          case 1:
            d = d.type.childContextTypes
            null !== d && void 0 !== d && $f()
            break
          case 3:
            Jh()
            E$1(Wf)
            E$1(H$1)
            Oh()
            break
          case 5:
            Lh(d)
            break
          case 4:
            Jh()
            break
          case 13:
            E$1(M)
            break
          case 19:
            E$1(M)
            break
          case 10:
            Rg(d.type._context)
            break
          case 22:
          case 23:
            Ij()
        }
        c = c.return
      }
    R$1 = a
    Y = a = wh(a.current, null)
    Z = gj = b
    T = 0
    qk = null
    sk = rk = hh = 0
    uk = tk = null
    if (null !== Wg) {
      for (b = 0; b < Wg.length; b++)
        if (((c = Wg[b]), (d = c.interleaved), null !== d)) {
          c.interleaved = null
          var e = d.next,
            f = c.pending
          if (null !== f) {
            var g = f.next
            f.next = e
            d.next = g
          }
          c.pending = d
        }
      Wg = null
    }
    return a
  }
  function Nk(a, b) {
    do {
      var c = Y
      try {
        Qg()
        Ph.current = ai
        if (Sh) {
          for (var d = N.memoizedState; null !== d; ) {
            var e = d.queue
            null !== e && (e.pending = null)
            d = d.next
          }
          Sh = !1
        }
        Rh = 0
        P = O = N = null
        Th = !1
        Uh = 0
        ok.current = null
        if (null === c || null === c.return) {
          T = 1
          qk = b
          Y = null
          break
        }
        a: {
          var f = a,
            g = c.return,
            h = c,
            k = b
          b = Z
          h.flags |= 32768
          if (null !== k && 'object' === typeof k && 'function' === typeof k.then) {
            var l = k,
              m = h,
              q = m.tag
            if (0 === (m.mode & 1) && (0 === q || 11 === q || 15 === q)) {
              var r = m.alternate
              r ? ((m.updateQueue = r.updateQueue), (m.memoizedState = r.memoizedState), (m.lanes = r.lanes)) : ((m.updateQueue = null), (m.memoizedState = null))
            }
            var y = Vi(g)
            if (null !== y) {
              y.flags &= -257
              Wi(y, g, h, f, b)
              y.mode & 1 && Ti(f, l, b)
              b = y
              k = l
              var n = b.updateQueue
              if (null === n) {
                var t = new Set()
                t.add(k)
                b.updateQueue = t
              } else n.add(k)
              break a
            } else {
              if (0 === (b & 1)) {
                Ti(f, l, b)
                uj()
                break a
              }
              k = Error(p$1(426))
            }
          } else if (I && h.mode & 1) {
            var J = Vi(g)
            if (null !== J) {
              0 === (J.flags & 65536) && (J.flags |= 256)
              Wi(J, g, h, f, b)
              Jg(Ki(k, h))
              break a
            }
          }
          f = k = Ki(k, h)
          4 !== T && (T = 2)
          null === tk ? (tk = [f]) : tk.push(f)
          f = g
          do {
            switch (f.tag) {
              case 3:
                f.flags |= 65536
                b &= -b
                f.lanes |= b
                var x = Oi(f, k, b)
                fh(f, x)
                break a
              case 1:
                h = k
                var w = f.type,
                  u = f.stateNode
                if (
                  0 === (f.flags & 128) &&
                  ('function' === typeof w.getDerivedStateFromError || (null !== u && 'function' === typeof u.componentDidCatch && (null === Si || !Si.has(u))))
                ) {
                  f.flags |= 65536
                  b &= -b
                  f.lanes |= b
                  var F = Ri(f, h, b)
                  fh(f, F)
                  break a
                }
            }
            f = f.return
          } while (null !== f)
        }
        Tk(c)
      } catch (na) {
        b = na
        Y === c && null !== c && (Y = c = c.return)
        continue
      }
      break
    } while (1)
  }
  function Kk() {
    var a = nk.current
    nk.current = ai
    return null === a ? ai : a
  }
  function uj() {
    if (0 === T || 3 === T || 2 === T) T = 4
    null === R$1 || (0 === (hh & 268435455) && 0 === (rk & 268435455)) || Dk(R$1, Z)
  }
  function Jk(a, b) {
    var c = K
    K |= 2
    var d = Kk()
    if (R$1 !== a || Z !== b) (vk = null), Lk(a, b)
    do
      try {
        Uk()
        break
      } catch (e) {
        Nk(a, e)
      }
    while (1)
    Qg()
    K = c
    nk.current = d
    if (null !== Y) throw Error(p$1(261))
    R$1 = null
    Z = 0
    return T
  }
  function Uk() {
    for (; null !== Y; ) Vk(Y)
  }
  function Mk() {
    for (; null !== Y && !cc(); ) Vk(Y)
  }
  function Vk(a) {
    var b = Wk(a.alternate, a, gj)
    a.memoizedProps = a.pendingProps
    null === b ? Tk(a) : (Y = b)
    ok.current = null
  }
  function Tk(a) {
    var b = a
    do {
      var c = b.alternate
      a = b.return
      if (0 === (b.flags & 32768)) {
        if (((c = Fj(c, b, gj)), null !== c)) {
          Y = c
          return
        }
      } else {
        c = Jj(c, b)
        if (null !== c) {
          c.flags &= 32767
          Y = c
          return
        }
        if (null !== a) (a.flags |= 32768), (a.subtreeFlags = 0), (a.deletions = null)
        else {
          T = 6
          Y = null
          return
        }
      }
      b = b.sibling
      if (null !== b) {
        Y = b
        return
      }
      Y = b = a
    } while (null !== b)
    0 === T && (T = 5)
  }
  function Qk(a, b, c) {
    var d = C,
      e = pk.transition
    try {
      ;(pk.transition = null), (C = 1), Xk(a, b, c, d)
    } finally {
      ;(pk.transition = e), (C = d)
    }
    return null
  }
  function Xk(a, b, c, d) {
    do Ik()
    while (null !== xk)
    if (0 !== (K & 6)) throw Error(p$1(327))
    c = a.finishedWork
    var e = a.finishedLanes
    if (null === c) return null
    a.finishedWork = null
    a.finishedLanes = 0
    if (c === a.current) throw Error(p$1(177))
    a.callbackNode = null
    a.callbackPriority = 0
    var f = c.lanes | c.childLanes
    Bc(a, f)
    a === R$1 && ((Y = R$1 = null), (Z = 0))
    ;(0 === (c.subtreeFlags & 2064) && 0 === (c.flags & 2064)) ||
      wk ||
      ((wk = !0),
      Gk(hc, function () {
        Ik()
        return null
      }))
    f = 0 !== (c.flags & 15990)
    if (0 !== (c.subtreeFlags & 15990) || f) {
      f = pk.transition
      pk.transition = null
      var g = C
      C = 1
      var h = K
      K |= 4
      ok.current = null
      Pj(a, c)
      ek(c, a)
      Oe(Df)
      dd = !!Cf
      Df = Cf = null
      a.current = c
      ik(c)
      dc()
      K = h
      C = g
      pk.transition = f
    } else a.current = c
    wk && ((wk = !1), (xk = a), (yk = e))
    f = a.pendingLanes
    0 === f && (Si = null)
    mc(c.stateNode)
    Ek(a, B())
    if (null !== b) for (d = a.onRecoverableError, c = 0; c < b.length; c++) (e = b[c]), d(e.value, { componentStack: e.stack, digest: e.digest })
    if (Pi) throw ((Pi = !1), (a = Qi), (Qi = null), a)
    0 !== (yk & 1) && 0 !== a.tag && Ik()
    f = a.pendingLanes
    0 !== (f & 1) ? (a === Ak ? zk++ : ((zk = 0), (Ak = a))) : (zk = 0)
    jg()
    return null
  }
  function Ik() {
    if (null !== xk) {
      var a = Dc(yk),
        b = pk.transition,
        c = C
      try {
        pk.transition = null
        C = 16 > a ? 16 : a
        if (null === xk) var d = !1
        else {
          a = xk
          xk = null
          yk = 0
          if (0 !== (K & 6)) throw Error(p$1(331))
          var e = K
          K |= 4
          for (V = a.current; null !== V; ) {
            var f = V,
              g = f.child
            if (0 !== (V.flags & 16)) {
              var h = f.deletions
              if (null !== h) {
                for (var k = 0; k < h.length; k++) {
                  var l = h[k]
                  for (V = l; null !== V; ) {
                    var m = V
                    switch (m.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Qj(8, m, f)
                    }
                    var q = m.child
                    if (null !== q) (q.return = m), (V = q)
                    else
                      for (; null !== V; ) {
                        m = V
                        var r = m.sibling,
                          y = m.return
                        Tj(m)
                        if (m === l) {
                          V = null
                          break
                        }
                        if (null !== r) {
                          r.return = y
                          V = r
                          break
                        }
                        V = y
                      }
                  }
                }
                var n = f.alternate
                if (null !== n) {
                  var t = n.child
                  if (null !== t) {
                    n.child = null
                    do {
                      var J = t.sibling
                      t.sibling = null
                      t = J
                    } while (null !== t)
                  }
                }
                V = f
              }
            }
            if (0 !== (f.subtreeFlags & 2064) && null !== g) (g.return = f), (V = g)
            else
              b: for (; null !== V; ) {
                f = V
                if (0 !== (f.flags & 2048))
                  switch (f.tag) {
                    case 0:
                    case 11:
                    case 15:
                      Qj(9, f, f.return)
                  }
                var x = f.sibling
                if (null !== x) {
                  x.return = f.return
                  V = x
                  break b
                }
                V = f.return
              }
          }
          var w = a.current
          for (V = w; null !== V; ) {
            g = V
            var u = g.child
            if (0 !== (g.subtreeFlags & 2064) && null !== u) (u.return = g), (V = u)
            else
              b: for (g = w; null !== V; ) {
                h = V
                if (0 !== (h.flags & 2048))
                  try {
                    switch (h.tag) {
                      case 0:
                      case 11:
                      case 15:
                        Rj(9, h)
                    }
                  } catch (na) {
                    W$1(h, h.return, na)
                  }
                if (h === g) {
                  V = null
                  break b
                }
                var F = h.sibling
                if (null !== F) {
                  F.return = h.return
                  V = F
                  break b
                }
                V = h.return
              }
          }
          K = e
          jg()
          if (lc && 'function' === typeof lc.onPostCommitFiberRoot)
            try {
              lc.onPostCommitFiberRoot(kc, a)
            } catch (na) {}
          d = !0
        }
        return d
      } finally {
        ;(C = c), (pk.transition = b)
      }
    }
    return !1
  }
  function Yk(a, b, c) {
    b = Ki(c, b)
    b = Oi(a, b, 1)
    a = dh(a, b, 1)
    b = L$1()
    null !== a && (Ac(a, 1, b), Ek(a, b))
  }
  function W$1(a, b, c) {
    if (3 === a.tag) Yk(a, a, c)
    else
      for (; null !== b; ) {
        if (3 === b.tag) {
          Yk(b, a, c)
          break
        } else if (1 === b.tag) {
          var d = b.stateNode
          if ('function' === typeof b.type.getDerivedStateFromError || ('function' === typeof d.componentDidCatch && (null === Si || !Si.has(d)))) {
            a = Ki(c, a)
            a = Ri(b, a, 1)
            b = dh(b, a, 1)
            a = L$1()
            null !== b && (Ac(b, 1, a), Ek(b, a))
            break
          }
        }
        b = b.return
      }
  }
  function Ui(a, b, c) {
    var d = a.pingCache
    null !== d && d.delete(b)
    b = L$1()
    a.pingedLanes |= a.suspendedLanes & c
    R$1 === a && (Z & c) === c && (4 === T || (3 === T && (Z & 130023424) === Z && 500 > B() - gk) ? Lk(a, 0) : (sk |= c))
    Ek(a, b)
  }
  function Zk(a, b) {
    0 === b && (0 === (a.mode & 1) ? (b = 1) : ((b = sc), (sc <<= 1), 0 === (sc & 130023424) && (sc = 4194304)))
    var c = L$1()
    a = Zg(a, b)
    null !== a && (Ac(a, b, c), Ek(a, c))
  }
  function vj(a) {
    var b = a.memoizedState,
      c = 0
    null !== b && (c = b.retryLane)
    Zk(a, c)
  }
  function ck(a, b) {
    var c = 0
    switch (a.tag) {
      case 13:
        var d = a.stateNode
        var e = a.memoizedState
        null !== e && (c = e.retryLane)
        break
      case 19:
        d = a.stateNode
        break
      default:
        throw Error(p$1(314))
    }
    null !== d && d.delete(b)
    Zk(a, c)
  }
  var Wk
  Wk = function (a, b, c) {
    if (null !== a)
      if (a.memoizedProps !== b.pendingProps || Wf.current) Ug = !0
      else {
        if (0 === (a.lanes & c) && 0 === (b.flags & 128)) return (Ug = !1), zj(a, b, c)
        Ug = 0 !== (a.flags & 131072) ? !0 : !1
      }
    else (Ug = !1), I && 0 !== (b.flags & 1048576) && ug(b, ng, b.index)
    b.lanes = 0
    switch (b.tag) {
      case 2:
        var d = b.type
        jj(a, b)
        a = b.pendingProps
        var e = Yf(b, H$1.current)
        Tg(b, c)
        e = Xh(null, b, d, a, e, c)
        var f = bi()
        b.flags |= 1
        'object' === typeof e && null !== e && 'function' === typeof e.render && void 0 === e.$$typeof
          ? ((b.tag = 1),
            (b.memoizedState = null),
            (b.updateQueue = null),
            Zf(d) ? ((f = !0), cg(b)) : (f = !1),
            (b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null),
            ah(b),
            (e.updater = nh),
            (b.stateNode = e),
            (e._reactInternals = b),
            rh(b, d, a, c),
            (b = kj(null, b, d, !0, f, c)))
          : ((b.tag = 0), I && f && vg(b), Yi(null, b, e, c), (b = b.child))
        return b
      case 16:
        d = b.elementType
        a: {
          jj(a, b)
          a = b.pendingProps
          e = d._init
          d = e(d._payload)
          b.type = d
          e = b.tag = $k(d)
          a = Lg(d, a)
          switch (e) {
            case 0:
              b = dj(null, b, d, a, c)
              break a
            case 1:
              b = ij(null, b, d, a, c)
              break a
            case 11:
              b = Zi(null, b, d, a, c)
              break a
            case 14:
              b = aj(null, b, d, Lg(d.type, a), c)
              break a
          }
          throw Error(p$1(306, d, ''))
        }
        return b
      case 0:
        return (d = b.type), (e = b.pendingProps), (e = b.elementType === d ? e : Lg(d, e)), dj(a, b, d, e, c)
      case 1:
        return (d = b.type), (e = b.pendingProps), (e = b.elementType === d ? e : Lg(d, e)), ij(a, b, d, e, c)
      case 3:
        a: {
          lj(b)
          if (null === a) throw Error(p$1(387))
          d = b.pendingProps
          f = b.memoizedState
          e = f.element
          bh(a, b)
          gh(b, d, null, c)
          var g = b.memoizedState
          d = g.element
          if (f.isDehydrated)
            if (
              ((f = { element: d, isDehydrated: !1, cache: g.cache, pendingSuspenseBoundaries: g.pendingSuspenseBoundaries, transitions: g.transitions }),
              (b.updateQueue.baseState = f),
              (b.memoizedState = f),
              b.flags & 256)
            ) {
              e = Ki(Error(p$1(423)), b)
              b = mj(a, b, d, c, e)
              break a
            } else if (d !== e) {
              e = Ki(Error(p$1(424)), b)
              b = mj(a, b, d, c, e)
              break a
            } else
              for (yg = Lf(b.stateNode.containerInfo.firstChild), xg = b, I = !0, zg = null, c = Ch(b, null, d, c), b.child = c; c; )
                (c.flags = (c.flags & -3) | 4096), (c = c.sibling)
          else {
            Ig()
            if (d === e) {
              b = $i(a, b, c)
              break a
            }
            Yi(a, b, d, c)
          }
          b = b.child
        }
        return b
      case 5:
        return (
          Kh(b),
          null === a && Eg(b),
          (d = b.type),
          (e = b.pendingProps),
          (f = null !== a ? a.memoizedProps : null),
          (g = e.children),
          Ef(d, e) ? (g = null) : null !== f && Ef(d, f) && (b.flags |= 32),
          hj(a, b),
          Yi(a, b, g, c),
          b.child
        )
      case 6:
        return null === a && Eg(b), null
      case 13:
        return pj(a, b, c)
      case 4:
        return Ih(b, b.stateNode.containerInfo), (d = b.pendingProps), null === a ? (b.child = Bh(b, null, d, c)) : Yi(a, b, d, c), b.child
      case 11:
        return (d = b.type), (e = b.pendingProps), (e = b.elementType === d ? e : Lg(d, e)), Zi(a, b, d, e, c)
      case 7:
        return Yi(a, b, b.pendingProps, c), b.child
      case 8:
        return Yi(a, b, b.pendingProps.children, c), b.child
      case 12:
        return Yi(a, b, b.pendingProps.children, c), b.child
      case 10:
        a: {
          d = b.type._context
          e = b.pendingProps
          f = b.memoizedProps
          g = e.value
          G(Mg, d._currentValue)
          d._currentValue = g
          if (null !== f)
            if (He(f.value, g)) {
              if (f.children === e.children && !Wf.current) {
                b = $i(a, b, c)
                break a
              }
            } else
              for (f = b.child, null !== f && (f.return = b); null !== f; ) {
                var h = f.dependencies
                if (null !== h) {
                  g = f.child
                  for (var k = h.firstContext; null !== k; ) {
                    if (k.context === d) {
                      if (1 === f.tag) {
                        k = ch(-1, c & -c)
                        k.tag = 2
                        var l = f.updateQueue
                        if (null !== l) {
                          l = l.shared
                          var m = l.pending
                          null === m ? (k.next = k) : ((k.next = m.next), (m.next = k))
                          l.pending = k
                        }
                      }
                      f.lanes |= c
                      k = f.alternate
                      null !== k && (k.lanes |= c)
                      Sg(f.return, c, b)
                      h.lanes |= c
                      break
                    }
                    k = k.next
                  }
                } else if (10 === f.tag) g = f.type === b.type ? null : f.child
                else if (18 === f.tag) {
                  g = f.return
                  if (null === g) throw Error(p$1(341))
                  g.lanes |= c
                  h = g.alternate
                  null !== h && (h.lanes |= c)
                  Sg(g, c, b)
                  g = f.sibling
                } else g = f.child
                if (null !== g) g.return = f
                else
                  for (g = f; null !== g; ) {
                    if (g === b) {
                      g = null
                      break
                    }
                    f = g.sibling
                    if (null !== f) {
                      f.return = g.return
                      g = f
                      break
                    }
                    g = g.return
                  }
                f = g
              }
          Yi(a, b, e.children, c)
          b = b.child
        }
        return b
      case 9:
        return (e = b.type), (d = b.pendingProps.children), Tg(b, c), (e = Vg(e)), (d = d(e)), (b.flags |= 1), Yi(a, b, d, c), b.child
      case 14:
        return (d = b.type), (e = Lg(d, b.pendingProps)), (e = Lg(d.type, e)), aj(a, b, d, e, c)
      case 15:
        return cj(a, b, b.type, b.pendingProps, c)
      case 17:
        return (
          (d = b.type),
          (e = b.pendingProps),
          (e = b.elementType === d ? e : Lg(d, e)),
          jj(a, b),
          (b.tag = 1),
          Zf(d) ? ((a = !0), cg(b)) : (a = !1),
          Tg(b, c),
          ph(b, d, e),
          rh(b, d, e, c),
          kj(null, b, d, !0, a, c)
        )
      case 19:
        return yj(a, b, c)
      case 22:
        return ej(a, b, c)
    }
    throw Error(p$1(156, b.tag))
  }
  function Gk(a, b) {
    return ac(a, b)
  }
  function al(a, b, c, d) {
    this.tag = a
    this.key = c
    this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null
    this.index = 0
    this.ref = null
    this.pendingProps = b
    this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null
    this.mode = d
    this.subtreeFlags = this.flags = 0
    this.deletions = null
    this.childLanes = this.lanes = 0
    this.alternate = null
  }
  function Bg(a, b, c, d) {
    return new al(a, b, c, d)
  }
  function bj(a) {
    a = a.prototype
    return !(!a || !a.isReactComponent)
  }
  function $k(a) {
    if ('function' === typeof a) return bj(a) ? 1 : 0
    if (void 0 !== a && null !== a) {
      a = a.$$typeof
      if (a === Da) return 11
      if (a === Ga) return 14
    }
    return 2
  }
  function wh(a, b) {
    var c = a.alternate
    null === c
      ? ((c = Bg(a.tag, b, a.key, a.mode)), (c.elementType = a.elementType), (c.type = a.type), (c.stateNode = a.stateNode), (c.alternate = a), (a.alternate = c))
      : ((c.pendingProps = b), (c.type = a.type), (c.flags = 0), (c.subtreeFlags = 0), (c.deletions = null))
    c.flags = a.flags & 14680064
    c.childLanes = a.childLanes
    c.lanes = a.lanes
    c.child = a.child
    c.memoizedProps = a.memoizedProps
    c.memoizedState = a.memoizedState
    c.updateQueue = a.updateQueue
    b = a.dependencies
    c.dependencies = null === b ? null : { lanes: b.lanes, firstContext: b.firstContext }
    c.sibling = a.sibling
    c.index = a.index
    c.ref = a.ref
    return c
  }
  function yh(a, b, c, d, e, f) {
    var g = 2
    d = a
    if ('function' === typeof a) bj(a) && (g = 1)
    else if ('string' === typeof a) g = 5
    else
      a: switch (a) {
        case ya:
          return Ah(c.children, e, f, b)
        case za:
          g = 8
          e |= 8
          break
        case Aa:
          return (a = Bg(12, c, b, e | 2)), (a.elementType = Aa), (a.lanes = f), a
        case Ea:
          return (a = Bg(13, c, b, e)), (a.elementType = Ea), (a.lanes = f), a
        case Fa:
          return (a = Bg(19, c, b, e)), (a.elementType = Fa), (a.lanes = f), a
        case Ia:
          return qj(c, e, f, b)
        default:
          if ('object' === typeof a && null !== a)
            switch (a.$$typeof) {
              case Ba:
                g = 10
                break a
              case Ca:
                g = 9
                break a
              case Da:
                g = 11
                break a
              case Ga:
                g = 14
                break a
              case Ha:
                g = 16
                d = null
                break a
            }
          throw Error(p$1(130, null == a ? a : typeof a, ''))
      }
    b = Bg(g, c, b, e)
    b.elementType = a
    b.type = d
    b.lanes = f
    return b
  }
  function Ah(a, b, c, d) {
    a = Bg(7, a, d, b)
    a.lanes = c
    return a
  }
  function qj(a, b, c, d) {
    a = Bg(22, a, d, b)
    a.elementType = Ia
    a.lanes = c
    a.stateNode = { isHidden: !1 }
    return a
  }
  function xh(a, b, c) {
    a = Bg(6, a, null, b)
    a.lanes = c
    return a
  }
  function zh(a, b, c) {
    b = Bg(4, null !== a.children ? a.children : [], a.key, b)
    b.lanes = c
    b.stateNode = { containerInfo: a.containerInfo, pendingChildren: null, implementation: a.implementation }
    return b
  }
  function bl(a, b, c, d, e) {
    this.tag = b
    this.containerInfo = a
    this.finishedWork = this.pingCache = this.current = this.pendingChildren = null
    this.timeoutHandle = -1
    this.callbackNode = this.pendingContext = this.context = null
    this.callbackPriority = 0
    this.eventTimes = zc(0)
    this.expirationTimes = zc(-1)
    this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0
    this.entanglements = zc(0)
    this.identifierPrefix = d
    this.onRecoverableError = e
    this.mutableSourceEagerHydrationData = null
  }
  function cl(a, b, c, d, e, f, g, h, k) {
    a = new bl(a, b, c, h, k)
    1 === b ? ((b = 1), !0 === f && (b |= 8)) : (b = 0)
    f = Bg(3, null, null, b)
    a.current = f
    f.stateNode = a
    f.memoizedState = { element: d, isDehydrated: c, cache: null, transitions: null, pendingSuspenseBoundaries: null }
    ah(f)
    return a
  }
  function dl(a, b, c) {
    var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null
    return { $$typeof: wa, key: null == d ? null : '' + d, children: a, containerInfo: b, implementation: c }
  }
  function el(a) {
    if (!a) return Vf
    a = a._reactInternals
    a: {
      if (Vb(a) !== a || 1 !== a.tag) throw Error(p$1(170))
      var b = a
      do {
        switch (b.tag) {
          case 3:
            b = b.stateNode.context
            break a
          case 1:
            if (Zf(b.type)) {
              b = b.stateNode.__reactInternalMemoizedMergedChildContext
              break a
            }
        }
        b = b.return
      } while (null !== b)
      throw Error(p$1(171))
    }
    if (1 === a.tag) {
      var c = a.type
      if (Zf(c)) return bg(a, c, b)
    }
    return b
  }
  function fl(a, b, c, d, e, f, g, h, k) {
    a = cl(c, d, !0, a, e, f, g, h, k)
    a.context = el(null)
    c = a.current
    d = L$1()
    e = lh(c)
    f = ch(d, e)
    f.callback = void 0 !== b && null !== b ? b : null
    dh(c, f, e)
    a.current.lanes = e
    Ac(a, e, d)
    Ek(a, d)
    return a
  }
  function gl(a, b, c, d) {
    var e = b.current,
      f = L$1(),
      g = lh(e)
    c = el(c)
    null === b.context ? (b.context = c) : (b.pendingContext = c)
    b = ch(f, g)
    b.payload = { element: a }
    d = void 0 === d ? null : d
    null !== d && (b.callback = d)
    a = dh(e, b, g)
    null !== a && (mh(a, e, g, f), eh(a, e, g))
    return g
  }
  function hl(a) {
    a = a.current
    if (!a.child) return null
    switch (a.child.tag) {
      case 5:
        return a.child.stateNode
      default:
        return a.child.stateNode
    }
  }
  function il(a, b) {
    a = a.memoizedState
    if (null !== a && null !== a.dehydrated) {
      var c = a.retryLane
      a.retryLane = 0 !== c && c < b ? c : b
    }
  }
  function jl(a, b) {
    il(a, b)
    ;(a = a.alternate) && il(a, b)
  }
  function kl() {
    return null
  }
  var ll =
    'function' === typeof reportError
      ? reportError
      : function (a) {
          console.error(a)
        }
  function ml(a) {
    this._internalRoot = a
  }
  nl.prototype.render = ml.prototype.render = function (a) {
    var b = this._internalRoot
    if (null === b) throw Error(p$1(409))
    gl(a, b, null, null)
  }
  nl.prototype.unmount = ml.prototype.unmount = function () {
    var a = this._internalRoot
    if (null !== a) {
      this._internalRoot = null
      var b = a.containerInfo
      Sk(function () {
        gl(null, a, null, null)
      })
      b[uf] = null
    }
  }
  function nl(a) {
    this._internalRoot = a
  }
  nl.prototype.unstable_scheduleHydration = function (a) {
    if (a) {
      var b = Hc()
      a = { blockedOn: null, target: a, priority: b }
      for (var c = 0; c < Qc.length && 0 !== b && b < Qc[c].priority; c++);
      Qc.splice(c, 0, a)
      0 === c && Vc(a)
    }
  }
  function ol(a) {
    return !(!a || (1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType))
  }
  function pl(a) {
    return !(!a || (1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || ' react-mount-point-unstable ' !== a.nodeValue)))
  }
  function ql() {}
  function rl(a, b, c, d, e) {
    if (e) {
      if ('function' === typeof d) {
        var f = d
        d = function () {
          var a = hl(g)
          f.call(a)
        }
      }
      var g = fl(b, d, a, 0, null, !1, !1, '', ql)
      a._reactRootContainer = g
      a[uf] = g.current
      sf(8 === a.nodeType ? a.parentNode : a)
      Sk()
      return g
    }
    for (; (e = a.lastChild); ) a.removeChild(e)
    if ('function' === typeof d) {
      var h = d
      d = function () {
        var a = hl(k)
        h.call(a)
      }
    }
    var k = cl(a, 0, !1, null, null, !1, !1, '', ql)
    a._reactRootContainer = k
    a[uf] = k.current
    sf(8 === a.nodeType ? a.parentNode : a)
    Sk(function () {
      gl(b, k, c, d)
    })
    return k
  }
  function sl(a, b, c, d, e) {
    var f = c._reactRootContainer
    if (f) {
      var g = f
      if ('function' === typeof e) {
        var h = e
        e = function () {
          var a = hl(g)
          h.call(a)
        }
      }
      gl(b, g, a, e)
    } else g = rl(c, b, a, e, d)
    return hl(g)
  }
  Ec = function (a) {
    switch (a.tag) {
      case 3:
        var b = a.stateNode
        if (b.current.memoizedState.isDehydrated) {
          var c = tc(b.pendingLanes)
          0 !== c && (Cc(b, c | 1), Ek(b, B()), 0 === (K & 6) && ((Hj = B() + 500), jg()))
        }
        break
      case 13:
        Sk(function () {
          var b = Zg(a, 1)
          if (null !== b) {
            var c = L$1()
            mh(b, a, 1, c)
          }
        }),
          jl(a, 1)
    }
  }
  Fc = function (a) {
    if (13 === a.tag) {
      var b = Zg(a, 134217728)
      if (null !== b) {
        var c = L$1()
        mh(b, a, 134217728, c)
      }
      jl(a, 134217728)
    }
  }
  Gc = function (a) {
    if (13 === a.tag) {
      var b = lh(a),
        c = Zg(a, b)
      if (null !== c) {
        var d = L$1()
        mh(c, a, b, d)
      }
      jl(a, b)
    }
  }
  Hc = function () {
    return C
  }
  Ic = function (a, b) {
    var c = C
    try {
      return (C = a), b()
    } finally {
      C = c
    }
  }
  yb = function (a, b, c) {
    switch (b) {
      case 'input':
        bb(a, c)
        b = c.name
        if ('radio' === c.type && null != b) {
          for (c = a; c.parentNode; ) c = c.parentNode
          c = c.querySelectorAll('input[name=' + JSON.stringify('' + b) + '][type="radio"]')
          for (b = 0; b < c.length; b++) {
            var d = c[b]
            if (d !== a && d.form === a.form) {
              var e = Db(d)
              if (!e) throw Error(p$1(90))
              Wa(d)
              bb(d, e)
            }
          }
        }
        break
      case 'textarea':
        ib(a, c)
        break
      case 'select':
        ;(b = c.value), null != b && fb(a, !!c.multiple, b, !1)
    }
  }
  Gb = Rk
  Hb = Sk
  var tl = { usingClientEntryPoint: !1, Events: [Cb, ue, Db, Eb, Fb, Rk] },
    ul = { findFiberByHostInstance: Wc, bundleType: 0, version: '18.2.0', rendererPackageName: 'react-dom' }
  var vl = {
    bundleType: ul.bundleType,
    version: ul.version,
    rendererPackageName: ul.rendererPackageName,
    rendererConfig: ul.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: ua.ReactCurrentDispatcher,
    findHostInstanceByFiber: function (a) {
      a = Zb(a)
      return null === a ? null : a.stateNode
    },
    findFiberByHostInstance: ul.findFiberByHostInstance || kl,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: '18.2.0-next-9e3b772b8-20220608',
  }
  if ('undefined' !== typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) {
    var wl = __REACT_DEVTOOLS_GLOBAL_HOOK__
    if (!wl.isDisabled && wl.supportsFiber)
      try {
        ;(kc = wl.inject(vl)), (lc = wl)
      } catch (a) {}
  }
  reactDom_production_min.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = tl
  reactDom_production_min.createPortal = function (a, b) {
    var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null
    if (!ol(b)) throw Error(p$1(200))
    return dl(a, b, null, c)
  }
  reactDom_production_min.createRoot = function (a, b) {
    if (!ol(a)) throw Error(p$1(299))
    var c = !1,
      d = '',
      e = ll
    null !== b &&
      void 0 !== b &&
      (!0 === b.unstable_strictMode && (c = !0), void 0 !== b.identifierPrefix && (d = b.identifierPrefix), void 0 !== b.onRecoverableError && (e = b.onRecoverableError))
    b = cl(a, 1, !1, null, null, c, !1, d, e)
    a[uf] = b.current
    sf(8 === a.nodeType ? a.parentNode : a)
    return new ml(b)
  }
  reactDom_production_min.findDOMNode = function (a) {
    if (null == a) return null
    if (1 === a.nodeType) return a
    var b = a._reactInternals
    if (void 0 === b) {
      if ('function' === typeof a.render) throw Error(p$1(188))
      a = Object.keys(a).join(',')
      throw Error(p$1(268, a))
    }
    a = Zb(b)
    a = null === a ? null : a.stateNode
    return a
  }
  reactDom_production_min.flushSync = function (a) {
    return Sk(a)
  }
  reactDom_production_min.hydrate = function (a, b, c) {
    if (!pl(b)) throw Error(p$1(200))
    return sl(null, a, b, !0, c)
  }
  reactDom_production_min.hydrateRoot = function (a, b, c) {
    if (!ol(a)) throw Error(p$1(405))
    var d = (null != c && c.hydratedSources) || null,
      e = !1,
      f = '',
      g = ll
    null !== c &&
      void 0 !== c &&
      (!0 === c.unstable_strictMode && (e = !0), void 0 !== c.identifierPrefix && (f = c.identifierPrefix), void 0 !== c.onRecoverableError && (g = c.onRecoverableError))
    b = fl(b, null, a, 1, null != c ? c : null, e, !1, f, g)
    a[uf] = b.current
    sf(a)
    if (d)
      for (a = 0; a < d.length; a++)
        (c = d[a]),
          (e = c._getVersion),
          (e = e(c._source)),
          null == b.mutableSourceEagerHydrationData ? (b.mutableSourceEagerHydrationData = [c, e]) : b.mutableSourceEagerHydrationData.push(c, e)
    return new nl(b)
  }
  reactDom_production_min.render = function (a, b, c) {
    if (!pl(b)) throw Error(p$1(200))
    return sl(null, a, b, !1, c)
  }
  reactDom_production_min.unmountComponentAtNode = function (a) {
    if (!pl(a)) throw Error(p$1(40))
    return a._reactRootContainer
      ? (Sk(function () {
          sl(null, null, a, !1, function () {
            a._reactRootContainer = null
            a[uf] = null
          })
        }),
        !0)
      : !1
  }
  reactDom_production_min.unstable_batchedUpdates = Rk
  reactDom_production_min.unstable_renderSubtreeIntoContainer = function (a, b, c, d) {
    if (!pl(c)) throw Error(p$1(200))
    if (null == a || void 0 === a._reactInternals) throw Error(p$1(38))
    return sl(a, b, c, !1, d)
  }
  reactDom_production_min.version = '18.2.0-next-9e3b772b8-20220608'

  function checkDCE() {
    /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
    if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
      return
    }
    try {
      // Verify that the code above has been dead code eliminated (DCE'd).
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE)
    } catch (err) {
      // DevTools shouldn't crash React, no matter what.
      // We should still report in case we break this code.
      console.error(err)
    }
  }

  {
    // DCE check should happen before ReactDOM bundle executes so that
    // DevTools can report bad minification during injection.
    checkDCE()
    reactDom.exports = reactDom_production_min
  }

  var ReactDOM = reactDom.exports

  function n(t) {
    var e
    return (null == (e = t.ownerDocument) ? void 0 : e.defaultView) || window
  }
  function o(t) {
    return n(t).getComputedStyle(t)
  }
  function i$1(t) {
    return f(t) ? (t.nodeName || '').toLowerCase() : ''
  }
  let r
  function l() {
    if (r) return r
    const t = navigator.userAgentData
    return t && Array.isArray(t.brands) ? ((r = t.brands.map((t) => t.brand + '/' + t.version).join(' ')), r) : navigator.userAgent
  }
  function c(t) {
    return t instanceof n(t).HTMLElement
  }
  function s(t) {
    return t instanceof n(t).Element
  }
  function f(t) {
    return t instanceof n(t).Node
  }
  function u(t) {
    if ('undefined' == typeof ShadowRoot) return !1
    return t instanceof n(t).ShadowRoot || t instanceof ShadowRoot
  }
  function a(t) {
    const { overflow: e, overflowX: n, overflowY: i, display: r } = o(t)
    return /auto|scroll|overlay|hidden|clip/.test(e + i + n) && !['inline', 'contents'].includes(r)
  }
  function p() {
    return !/^((?!chrome|android).)*safari/i.test(l())
  }
  function g(t) {
    return ['html', 'body', '#document'].includes(i$1(t))
  }
  const x = Math.round
  function w$1(t) {
    const e = o(t)
    let n = parseFloat(e.width),
      i = parseFloat(e.height)
    const r = t.offsetWidth,
      l = t.offsetHeight,
      c = x(n) !== r || x(i) !== l
    return c && ((n = r), (i = l)), { width: n, height: i, fallback: c }
  }
  function v(t) {
    return s(t) ? t : t.contextElement
  }
  const b = { x: 1, y: 1 }
  function L(t) {
    const e = v(t)
    if (!c(e)) return b
    const n = e.getBoundingClientRect(),
      { width: o, height: i, fallback: r } = w$1(e)
    let l = (r ? x(n.width) : n.width) / o,
      s = (r ? x(n.height) : n.height) / i
    return (l && Number.isFinite(l)) || (l = 1), (s && Number.isFinite(s)) || (s = 1), { x: l, y: s }
  }
  function E(t, e, o, i) {
    var r, l
    void 0 === e && (e = !1), void 0 === o && (o = !1)
    const c = t.getBoundingClientRect(),
      f = v(t)
    let u = b
    e && (i ? s(i) && (u = L(i)) : (u = L(t)))
    const a = f ? n(f) : window,
      d = !p() && o
    let h = (c.left + ((d && (null == (r = a.visualViewport) ? void 0 : r.offsetLeft)) || 0)) / u.x,
      g = (c.top + ((d && (null == (l = a.visualViewport) ? void 0 : l.offsetTop)) || 0)) / u.y,
      m = c.width / u.x,
      y = c.height / u.y
    if (f) {
      const t = n(f),
        e = i && s(i) ? n(i) : i
      let o = t.frameElement
      for (; o && i && e !== t; ) {
        const t = L(o),
          e = o.getBoundingClientRect(),
          i = getComputedStyle(o)
        ;(e.x += (o.clientLeft + parseFloat(i.paddingLeft)) * t.x),
          (e.y += (o.clientTop + parseFloat(i.paddingTop)) * t.y),
          (h *= t.x),
          (g *= t.y),
          (m *= t.x),
          (y *= t.y),
          (h += e.x),
          (g += e.y),
          (o = n(o).frameElement)
      }
    }
    return { width: m, height: y, top: g, right: h + m, bottom: g + y, left: h, x: h, y: g }
  }
  function R(t) {
    return ((f(t) ? t.ownerDocument : t.document) || window.document).documentElement
  }
  function W(t) {
    if ('html' === i$1(t)) return t
    const e = t.assignedSlot || t.parentNode || (u(t) ? t.host : null) || R(t)
    return u(e) ? e.host : e
  }
  function A(t) {
    const e = W(t)
    return g(e) ? t.ownerDocument.body : c(e) && a(e) ? e : A(e)
  }
  function H(t, e) {
    var o
    void 0 === e && (e = [])
    const i = A(t),
      r = i === (null == (o = t.ownerDocument) ? void 0 : o.body),
      l = n(i)
    return r ? e.concat(l, l.visualViewport || [], a(i) ? i : []) : e.concat(i, H(i))
  }
  function z(t, e, n, o) {
    void 0 === o && (o = {})
    const { ancestorScroll: i = !0, ancestorResize: r = !0, elementResize: l = !0, animationFrame: c = !1 } = o,
      f = i && !c,
      u = f || r ? [...(s(t) ? H(t) : t.contextElement ? H(t.contextElement) : []), ...H(e)] : []
    u.forEach((t) => {
      f && t.addEventListener('scroll', n, { passive: !0 }), r && t.addEventListener('resize', n)
    })
    let a,
      d = null
    if (l) {
      let o = !0
      ;(d = new ResizeObserver(() => {
        o || n(), (o = !1)
      })),
        s(t) && !c && d.observe(t),
        s(t) || !t.contextElement || c || d.observe(t.contextElement),
        d.observe(e)
    }
    let h = c ? E(t) : null
    return (
      c &&
        (function e() {
          const o = E(t)
          !h || (o.x === h.x && o.y === h.y && o.width === h.width && o.height === h.height) || n()
          ;(h = o), (a = requestAnimationFrame(e))
        })(),
      n(),
      () => {
        var t
        u.forEach((t) => {
          f && t.removeEventListener('scroll', n), r && t.removeEventListener('resize', n)
        }),
          null == (t = d) || t.disconnect(),
          (d = null),
          c && cancelAnimationFrame(a)
      }
    )
  }

  var index$1 = React$1.useLayoutEffect

  var _excluded$3$1 = [
    'className',
    'clearValue',
    'cx',
    'getStyles',
    'getClassNames',
    'getValue',
    'hasValue',
    'isMulti',
    'isRtl',
    'options',
    'selectOption',
    'selectProps',
    'setValue',
    'theme',
  ]
  // ==============================
  // NO OP
  // ==============================

  var noop$1 = function noop() {}

  // ==============================
  // Class Name Prefixer
  // ==============================

  /**
	 String representation of component state for styling with class names.

	 Expects an array of strings OR a string/object pair:
	 - className(['comp', 'comp-arg', 'comp-arg-2'])
	   @returns 'react-select__comp react-select__comp-arg react-select__comp-arg-2'
	 - className('comp', { some: true, state: false })
	   @returns 'react-select__comp react-select__comp--some'
	*/
  function applyPrefixToName(prefix, name) {
    if (!name) {
      return prefix
    } else if (name[0] === '-') {
      return prefix + name
    } else {
      return prefix + '__' + name
    }
  }
  function classNames(prefix, state) {
    for (var _len = arguments.length, classNameList = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
      classNameList[_key - 2] = arguments[_key]
    }
    var arr = [].concat(classNameList)
    if (state && prefix) {
      for (var key in state) {
        if (state.hasOwnProperty(key) && state[key]) {
          arr.push(''.concat(applyPrefixToName(prefix, key)))
        }
      }
    }
    return arr
      .filter(function (i) {
        return i
      })
      .map(function (i) {
        return String(i).trim()
      })
      .join(' ')
  }
  // ==============================
  // Clean Value
  // ==============================

  var cleanValue = function cleanValue(value) {
    if (isArray(value)) return value.filter(Boolean)
    if (_typeof(value) === 'object' && value !== null) return [value]
    return []
  }

  // ==============================
  // Clean Common Props
  // ==============================

  var cleanCommonProps = function cleanCommonProps(props) {
    //className
    props.className
    props.clearValue
    props.cx
    props.getStyles
    props.getClassNames
    props.getValue
    props.hasValue
    props.isMulti
    props.isRtl
    props.options
    props.selectOption
    props.selectProps
    props.setValue
    props.theme
    var innerProps = _objectWithoutProperties(props, _excluded$3$1)
    return _objectSpread2({}, innerProps)
  }

  // ==============================
  // Get Style Props
  // ==============================

  var getStyleProps = function getStyleProps(props, name, classNamesState) {
    var cx = props.cx,
      getStyles = props.getStyles,
      getClassNames = props.getClassNames,
      className = props.className
    return {
      css: getStyles(name, props),
      className: cx(classNamesState !== null && classNamesState !== void 0 ? classNamesState : {}, getClassNames(name, props), className),
    }
  }

  // ==============================
  // Handle Input Change
  // ==============================

  function handleInputChange(inputValue, actionMeta, onInputChange) {
    if (onInputChange) {
      var _newValue = onInputChange(inputValue, actionMeta)
      if (typeof _newValue === 'string') return _newValue
    }
    return inputValue
  }

  // ==============================
  // Scroll Helpers
  // ==============================

  function isDocumentElement(el) {
    return [document.documentElement, document.body, window].indexOf(el) > -1
  }

  // Normalized Scroll Top
  // ------------------------------

  function normalizedHeight(el) {
    if (isDocumentElement(el)) {
      return window.innerHeight
    }
    return el.clientHeight
  }

  // Normalized scrollTo & scrollTop
  // ------------------------------

  function getScrollTop(el) {
    if (isDocumentElement(el)) {
      return window.pageYOffset
    }
    return el.scrollTop
  }
  function scrollTo(el, top) {
    // with a scroll distance, we perform scroll on the element
    if (isDocumentElement(el)) {
      window.scrollTo(0, top)
      return
    }
    el.scrollTop = top
  }

  // Get Scroll Parent
  // ------------------------------

  function getScrollParent(element) {
    var style = getComputedStyle(element)
    var excludeStaticParent = style.position === 'absolute'
    var overflowRx = /(auto|scroll)/
    if (style.position === 'fixed') return document.documentElement
    for (var parent = element; (parent = parent.parentElement); ) {
      style = getComputedStyle(parent)
      if (excludeStaticParent && style.position === 'static') {
        continue
      }
      if (overflowRx.test(style.overflow + style.overflowY + style.overflowX)) {
        return parent
      }
    }
    return document.documentElement
  }

  // Animated Scroll To
  // ------------------------------

  /**
	  @param t: time (elapsed)
	  @param b: initial value
	  @param c: amount of change
	  @param d: duration
	*/
  function easeOutCubic(t, b, c, d) {
    return c * ((t = t / d - 1) * t * t + 1) + b
  }
  function animatedScrollTo(element, to) {
    var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 200
    var callback = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : noop$1
    var start = getScrollTop(element)
    var change = to - start
    var increment = 10
    var currentTime = 0
    function animateScroll() {
      currentTime += increment
      var val = easeOutCubic(currentTime, start, change, duration)
      scrollTo(element, val)
      if (currentTime < duration) {
        window.requestAnimationFrame(animateScroll)
      } else {
        callback(element)
      }
    }
    animateScroll()
  }

  // Scroll Into View
  // ------------------------------

  function scrollIntoView(menuEl, focusedEl) {
    var menuRect = menuEl.getBoundingClientRect()
    var focusedRect = focusedEl.getBoundingClientRect()
    var overScroll = focusedEl.offsetHeight / 3
    if (focusedRect.bottom + overScroll > menuRect.bottom) {
      scrollTo(menuEl, Math.min(focusedEl.offsetTop + focusedEl.clientHeight - menuEl.offsetHeight + overScroll, menuEl.scrollHeight))
    } else if (focusedRect.top - overScroll < menuRect.top) {
      scrollTo(menuEl, Math.max(focusedEl.offsetTop - overScroll, 0))
    }
  }

  // ==============================
  // Get bounding client object
  // ==============================

  // cannot get keys using array notation with DOMRect
  function getBoundingClientObj(element) {
    var rect = element.getBoundingClientRect()
    return {
      bottom: rect.bottom,
      height: rect.height,
      left: rect.left,
      right: rect.right,
      top: rect.top,
      width: rect.width,
    }
  }

  // ==============================
  // Touch Capability Detector
  // ==============================

  function isTouchCapable() {
    try {
      document.createEvent('TouchEvent')
      return true
    } catch (e) {
      return false
    }
  }

  // ==============================
  // Mobile Device Detector
  // ==============================

  function isMobileDevice() {
    try {
      return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)
    } catch (e) {
      return false
    }
  }

  // ==============================
  // Passive Event Detector
  // ==============================

  // https://github.com/rafgraph/detect-it/blob/main/src/index.ts#L19-L36
  var passiveOptionAccessed = false
  var options = {
    get passive() {
      return (passiveOptionAccessed = true)
    },
  }
  // check for SSR
  var w = typeof window !== 'undefined' ? window : {}
  if (w.addEventListener && w.removeEventListener) {
    w.addEventListener('p', noop$1, options)
    w.removeEventListener('p', noop$1, false)
  }
  var supportsPassiveEvents = passiveOptionAccessed
  function notNullish(item) {
    return item != null
  }
  function isArray(arg) {
    return Array.isArray(arg)
  }
  function valueTernary(isMulti, multiValue, singleValue) {
    return isMulti ? multiValue : singleValue
  }
  function singleValueAsValue(singleValue) {
    return singleValue
  }
  function multiValueAsValue(multiValue) {
    return multiValue
  }
  var removeProps = function removeProps(propsObj) {
    for (var _len2 = arguments.length, properties = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      properties[_key2 - 1] = arguments[_key2]
    }
    var propsMap = Object.entries(propsObj).filter(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 1),
        key = _ref2[0]
      return !properties.includes(key)
    })
    return propsMap.reduce(function (newProps, _ref3) {
      var _ref4 = _slicedToArray(_ref3, 2),
        key = _ref4[0],
        val = _ref4[1]
      newProps[key] = val
      return newProps
    }, {})
  }

  function getMenuPlacement(_ref) {
    var preferredMaxHeight = _ref.maxHeight,
      menuEl = _ref.menuEl,
      minHeight = _ref.minHeight,
      preferredPlacement = _ref.placement,
      shouldScroll = _ref.shouldScroll,
      isFixedPosition = _ref.isFixedPosition,
      controlHeight = _ref.controlHeight
    var scrollParent = getScrollParent(menuEl)
    var defaultState = {
      placement: 'bottom',
      maxHeight: preferredMaxHeight,
    }

    // something went wrong, return default state
    if (!menuEl || !menuEl.offsetParent) return defaultState

    // we can't trust `scrollParent.scrollHeight` --> it may increase when
    // the menu is rendered
    var _scrollParent$getBoun = scrollParent.getBoundingClientRect(),
      scrollHeight = _scrollParent$getBoun.height
    var _menuEl$getBoundingCl = menuEl.getBoundingClientRect(),
      menuBottom = _menuEl$getBoundingCl.bottom,
      menuHeight = _menuEl$getBoundingCl.height,
      menuTop = _menuEl$getBoundingCl.top
    var _menuEl$offsetParent$ = menuEl.offsetParent.getBoundingClientRect(),
      containerTop = _menuEl$offsetParent$.top
    var viewHeight = isFixedPosition ? window.innerHeight : normalizedHeight(scrollParent)
    var scrollTop = getScrollTop(scrollParent)
    var marginBottom = parseInt(getComputedStyle(menuEl).marginBottom, 10)
    var marginTop = parseInt(getComputedStyle(menuEl).marginTop, 10)
    var viewSpaceAbove = containerTop - marginTop
    var viewSpaceBelow = viewHeight - menuTop
    var scrollSpaceAbove = viewSpaceAbove + scrollTop
    var scrollSpaceBelow = scrollHeight - scrollTop - menuTop
    var scrollDown = menuBottom - viewHeight + scrollTop + marginBottom
    var scrollUp = scrollTop + menuTop - marginTop
    var scrollDuration = 160
    switch (preferredPlacement) {
      case 'auto':
      case 'bottom':
        // 1: the menu will fit, do nothing
        if (viewSpaceBelow >= menuHeight) {
          return {
            placement: 'bottom',
            maxHeight: preferredMaxHeight,
          }
        }

        // 2: the menu will fit, if scrolled
        if (scrollSpaceBelow >= menuHeight && !isFixedPosition) {
          if (shouldScroll) {
            animatedScrollTo(scrollParent, scrollDown, scrollDuration)
          }
          return {
            placement: 'bottom',
            maxHeight: preferredMaxHeight,
          }
        }

        // 3: the menu will fit, if constrained
        if ((!isFixedPosition && scrollSpaceBelow >= minHeight) || (isFixedPosition && viewSpaceBelow >= minHeight)) {
          if (shouldScroll) {
            animatedScrollTo(scrollParent, scrollDown, scrollDuration)
          }

          // we want to provide as much of the menu as possible to the user,
          // so give them whatever is available below rather than the minHeight.
          var constrainedHeight = isFixedPosition ? viewSpaceBelow - marginBottom : scrollSpaceBelow - marginBottom
          return {
            placement: 'bottom',
            maxHeight: constrainedHeight,
          }
        }

        // 4. Forked beviour when there isn't enough space below

        // AUTO: flip the menu, render above
        if (preferredPlacement === 'auto' || isFixedPosition) {
          // may need to be constrained after flipping
          var _constrainedHeight = preferredMaxHeight
          var spaceAbove = isFixedPosition ? viewSpaceAbove : scrollSpaceAbove
          if (spaceAbove >= minHeight) {
            _constrainedHeight = Math.min(spaceAbove - marginBottom - controlHeight, preferredMaxHeight)
          }
          return {
            placement: 'top',
            maxHeight: _constrainedHeight,
          }
        }

        // BOTTOM: allow browser to increase scrollable area and immediately set scroll
        if (preferredPlacement === 'bottom') {
          if (shouldScroll) {
            scrollTo(scrollParent, scrollDown)
          }
          return {
            placement: 'bottom',
            maxHeight: preferredMaxHeight,
          }
        }
        break
      case 'top':
        // 1: the menu will fit, do nothing
        if (viewSpaceAbove >= menuHeight) {
          return {
            placement: 'top',
            maxHeight: preferredMaxHeight,
          }
        }

        // 2: the menu will fit, if scrolled
        if (scrollSpaceAbove >= menuHeight && !isFixedPosition) {
          if (shouldScroll) {
            animatedScrollTo(scrollParent, scrollUp, scrollDuration)
          }
          return {
            placement: 'top',
            maxHeight: preferredMaxHeight,
          }
        }

        // 3: the menu will fit, if constrained
        if ((!isFixedPosition && scrollSpaceAbove >= minHeight) || (isFixedPosition && viewSpaceAbove >= minHeight)) {
          var _constrainedHeight2 = preferredMaxHeight

          // we want to provide as much of the menu as possible to the user,
          // so give them whatever is available below rather than the minHeight.
          if ((!isFixedPosition && scrollSpaceAbove >= minHeight) || (isFixedPosition && viewSpaceAbove >= minHeight)) {
            _constrainedHeight2 = isFixedPosition ? viewSpaceAbove - marginTop : scrollSpaceAbove - marginTop
          }
          if (shouldScroll) {
            animatedScrollTo(scrollParent, scrollUp, scrollDuration)
          }
          return {
            placement: 'top',
            maxHeight: _constrainedHeight2,
          }
        }

        // 4. not enough space, the browser WILL NOT increase scrollable area when
        // absolutely positioned element rendered above the viewport (only below).
        // Flip the menu, render below
        return {
          placement: 'bottom',
          maxHeight: preferredMaxHeight,
        }
      default:
        throw new Error('Invalid placement provided "'.concat(preferredPlacement, '".'))
    }
    return defaultState
  }

  // Menu Component
  // ------------------------------

  function alignToControl(placement) {
    var placementToCSSProp = {
      bottom: 'top',
      top: 'bottom',
    }
    return placement ? placementToCSSProp[placement] : 'bottom'
  }
  var coercePlacement = function coercePlacement(p) {
    return p === 'auto' ? 'bottom' : p
  }
  var menuCSS = function menuCSS(_ref2, unstyled) {
    var _objectSpread2$1
    var placement = _ref2.placement,
      _ref2$theme = _ref2.theme,
      borderRadius = _ref2$theme.borderRadius,
      spacing = _ref2$theme.spacing,
      colors = _ref2$theme.colors
    return _objectSpread2(
      ((_objectSpread2$1 = {
        label: 'menu',
      }),
      _defineProperty(_objectSpread2$1, alignToControl(placement), '100%'),
      _defineProperty(_objectSpread2$1, 'position', 'absolute'),
      _defineProperty(_objectSpread2$1, 'width', '100%'),
      _defineProperty(_objectSpread2$1, 'zIndex', 1),
      _objectSpread2$1),
      unstyled
        ? {}
        : {
            backgroundColor: colors.neutral0,
            borderRadius: borderRadius,
            boxShadow: '0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 4px 11px hsla(0, 0%, 0%, 0.1)',
            marginBottom: spacing.menuGutter,
            marginTop: spacing.menuGutter,
          },
    )
  }
  var PortalPlacementContext = /*#__PURE__*/ React$1.createContext(null)

  // NOTE: internal only
  var MenuPlacer = function MenuPlacer(props) {
    var children = props.children,
      minMenuHeight = props.minMenuHeight,
      maxMenuHeight = props.maxMenuHeight,
      menuPlacement = props.menuPlacement,
      menuPosition = props.menuPosition,
      menuShouldScrollIntoView = props.menuShouldScrollIntoView,
      theme = props.theme
    var _ref3 = React$1.useContext(PortalPlacementContext) || {},
      setPortalPlacement = _ref3.setPortalPlacement
    var ref = React$1.useRef(null)
    var _useState = React$1.useState(maxMenuHeight),
      _useState2 = _slicedToArray(_useState, 2),
      maxHeight = _useState2[0],
      setMaxHeight = _useState2[1]
    var _useState3 = React$1.useState(null),
      _useState4 = _slicedToArray(_useState3, 2),
      placement = _useState4[0],
      setPlacement = _useState4[1]
    var controlHeight = theme.spacing.controlHeight
    index$1(
      function () {
        var menuEl = ref.current
        if (!menuEl) return

        // DO NOT scroll if position is fixed
        var isFixedPosition = menuPosition === 'fixed'
        var shouldScroll = menuShouldScrollIntoView && !isFixedPosition
        var state = getMenuPlacement({
          maxHeight: maxMenuHeight,
          menuEl: menuEl,
          minHeight: minMenuHeight,
          placement: menuPlacement,
          shouldScroll: shouldScroll,
          isFixedPosition: isFixedPosition,
          controlHeight: controlHeight,
        })
        setMaxHeight(state.maxHeight)
        setPlacement(state.placement)
        setPortalPlacement === null || setPortalPlacement === void 0 ? void 0 : setPortalPlacement(state.placement)
      },
      [maxMenuHeight, menuPlacement, menuPosition, menuShouldScrollIntoView, minMenuHeight, setPortalPlacement, controlHeight],
    )
    return children({
      ref: ref,
      placerProps: _objectSpread2(
        _objectSpread2({}, props),
        {},
        {
          placement: placement || coercePlacement(menuPlacement),
          maxHeight: maxHeight,
        },
      ),
    })
  }
  var Menu = function Menu(props) {
    var children = props.children,
      innerRef = props.innerRef,
      innerProps = props.innerProps
    return jsx(
      'div',
      _extends$1(
        {},
        getStyleProps(props, 'menu', {
          menu: true,
        }),
        {
          ref: innerRef,
        },
        innerProps,
      ),
      children,
    )
  }

  // ==============================
  // Menu List
  // ==============================

  var menuListCSS = function menuListCSS(_ref4, unstyled) {
    var maxHeight = _ref4.maxHeight,
      baseUnit = _ref4.theme.spacing.baseUnit
    return _objectSpread2(
      {
        maxHeight: maxHeight,
        overflowY: 'auto',
        position: 'relative',
        // required for offset[Height, Top] > keyboard scroll
        WebkitOverflowScrolling: 'touch',
      },
      unstyled
        ? {}
        : {
            paddingBottom: baseUnit,
            paddingTop: baseUnit,
          },
    )
  }
  var MenuList = function MenuList(props) {
    var children = props.children,
      innerProps = props.innerProps,
      innerRef = props.innerRef,
      isMulti = props.isMulti
    return jsx(
      'div',
      _extends$1(
        {},
        getStyleProps(props, 'menuList', {
          'menu-list': true,
          'menu-list--is-multi': isMulti,
        }),
        {
          ref: innerRef,
        },
        innerProps,
      ),
      children,
    )
  }

  // ==============================
  // Menu Notices
  // ==============================

  var noticeCSS = function noticeCSS(_ref5, unstyled) {
    var _ref5$theme = _ref5.theme,
      baseUnit = _ref5$theme.spacing.baseUnit,
      colors = _ref5$theme.colors
    return _objectSpread2(
      {
        textAlign: 'center',
      },
      unstyled
        ? {}
        : {
            color: colors.neutral40,
            padding: ''.concat(baseUnit * 2, 'px ').concat(baseUnit * 3, 'px'),
          },
    )
  }
  var noOptionsMessageCSS = noticeCSS
  var loadingMessageCSS = noticeCSS
  var NoOptionsMessage = function NoOptionsMessage(props) {
    var children = props.children,
      innerProps = props.innerProps
    return jsx(
      'div',
      _extends$1(
        {},
        getStyleProps(props, 'noOptionsMessage', {
          'menu-notice': true,
          'menu-notice--no-options': true,
        }),
        innerProps,
      ),
      children,
    )
  }
  NoOptionsMessage.defaultProps = {
    children: 'No options',
  }
  var LoadingMessage = function LoadingMessage(props) {
    var children = props.children,
      innerProps = props.innerProps
    return jsx(
      'div',
      _extends$1(
        {},
        getStyleProps(props, 'loadingMessage', {
          'menu-notice': true,
          'menu-notice--loading': true,
        }),
        innerProps,
      ),
      children,
    )
  }
  LoadingMessage.defaultProps = {
    children: 'Loading...',
  }

  // ==============================
  // Menu Portal
  // ==============================

  var menuPortalCSS = function menuPortalCSS(_ref6) {
    var rect = _ref6.rect,
      offset = _ref6.offset,
      position = _ref6.position
    return {
      left: rect.left,
      position: position,
      top: offset,
      width: rect.width,
      zIndex: 1,
    }
  }
  var MenuPortal = function MenuPortal(props) {
    var appendTo = props.appendTo,
      children = props.children,
      controlElement = props.controlElement,
      innerProps = props.innerProps,
      menuPlacement = props.menuPlacement,
      menuPosition = props.menuPosition
    var menuPortalRef = React$1.useRef(null)
    var cleanupRef = React$1.useRef(null)
    var _useState5 = React$1.useState(coercePlacement(menuPlacement)),
      _useState6 = _slicedToArray(_useState5, 2),
      placement = _useState6[0],
      setPortalPlacement = _useState6[1]
    var portalPlacementContext = React$1.useMemo(function () {
      return {
        setPortalPlacement: setPortalPlacement,
      }
    }, [])
    var _useState7 = React$1.useState(null),
      _useState8 = _slicedToArray(_useState7, 2),
      computedPosition = _useState8[0],
      setComputedPosition = _useState8[1]
    var updateComputedPosition = React$1.useCallback(
      function () {
        if (!controlElement) return
        var rect = getBoundingClientObj(controlElement)
        var scrollDistance = menuPosition === 'fixed' ? 0 : window.pageYOffset
        var offset = rect[placement] + scrollDistance
        if (
          offset !== (computedPosition === null || computedPosition === void 0 ? void 0 : computedPosition.offset) ||
          rect.left !== (computedPosition === null || computedPosition === void 0 ? void 0 : computedPosition.rect.left) ||
          rect.width !== (computedPosition === null || computedPosition === void 0 ? void 0 : computedPosition.rect.width)
        ) {
          setComputedPosition({
            offset: offset,
            rect: rect,
          })
        }
      },
      [
        controlElement,
        menuPosition,
        placement,
        computedPosition === null || computedPosition === void 0 ? void 0 : computedPosition.offset,
        computedPosition === null || computedPosition === void 0 ? void 0 : computedPosition.rect.left,
        computedPosition === null || computedPosition === void 0 ? void 0 : computedPosition.rect.width,
      ],
    )
    index$1(
      function () {
        updateComputedPosition()
      },
      [updateComputedPosition],
    )
    var runAutoUpdate = React$1.useCallback(
      function () {
        if (typeof cleanupRef.current === 'function') {
          cleanupRef.current()
          cleanupRef.current = null
        }
        if (controlElement && menuPortalRef.current) {
          cleanupRef.current = z(controlElement, menuPortalRef.current, updateComputedPosition, {
            elementResize: 'ResizeObserver' in window,
          })
        }
      },
      [controlElement, updateComputedPosition],
    )
    index$1(
      function () {
        runAutoUpdate()
      },
      [runAutoUpdate],
    )
    var setMenuPortalElement = React$1.useCallback(
      function (menuPortalElement) {
        menuPortalRef.current = menuPortalElement
        runAutoUpdate()
      },
      [runAutoUpdate],
    )

    // bail early if required elements aren't present
    if ((!appendTo && menuPosition !== 'fixed') || !computedPosition) return null

    // same wrapper element whether fixed or portalled
    var menuWrapper = jsx(
      'div',
      _extends$1(
        {
          ref: setMenuPortalElement,
        },
        getStyleProps(
          _objectSpread2(
            _objectSpread2({}, props),
            {},
            {
              offset: computedPosition.offset,
              position: menuPosition,
              rect: computedPosition.rect,
            },
          ),
          'menuPortal',
          {
            'menu-portal': true,
          },
        ),
        innerProps,
      ),
      children,
    )
    return jsx(
      PortalPlacementContext.Provider,
      {
        value: portalPlacementContext,
      },
      appendTo ? /*#__PURE__*/ reactDom.exports.createPortal(menuWrapper, appendTo) : menuWrapper,
    )
  }

  // ==============================
  // Root Container
  // ==============================

  var containerCSS = function containerCSS(_ref) {
    var isDisabled = _ref.isDisabled,
      isRtl = _ref.isRtl
    return {
      label: 'container',
      direction: isRtl ? 'rtl' : undefined,
      pointerEvents: isDisabled ? 'none' : undefined,
      // cancel mouse events when disabled
      position: 'relative',
    }
  }
  var SelectContainer = function SelectContainer(props) {
    var children = props.children,
      innerProps = props.innerProps,
      isDisabled = props.isDisabled,
      isRtl = props.isRtl
    return jsx(
      'div',
      _extends$1(
        {},
        getStyleProps(props, 'container', {
          '--is-disabled': isDisabled,
          '--is-rtl': isRtl,
        }),
        innerProps,
      ),
      children,
    )
  }

  // ==============================
  // Value Container
  // ==============================

  var valueContainerCSS = function valueContainerCSS(_ref2, unstyled) {
    var spacing = _ref2.theme.spacing,
      isMulti = _ref2.isMulti,
      hasValue = _ref2.hasValue,
      controlShouldRenderValue = _ref2.selectProps.controlShouldRenderValue
    return _objectSpread2(
      {
        alignItems: 'center',
        display: isMulti && hasValue && controlShouldRenderValue ? 'flex' : 'grid',
        flex: 1,
        flexWrap: 'wrap',
        WebkitOverflowScrolling: 'touch',
        position: 'relative',
        overflow: 'hidden',
      },
      unstyled
        ? {}
        : {
            padding: ''.concat(spacing.baseUnit / 2, 'px ').concat(spacing.baseUnit * 2, 'px'),
          },
    )
  }
  var ValueContainer = function ValueContainer(props) {
    var children = props.children,
      innerProps = props.innerProps,
      isMulti = props.isMulti,
      hasValue = props.hasValue
    return jsx(
      'div',
      _extends$1(
        {},
        getStyleProps(props, 'valueContainer', {
          'value-container': true,
          'value-container--is-multi': isMulti,
          'value-container--has-value': hasValue,
        }),
        innerProps,
      ),
      children,
    )
  }

  // ==============================
  // Indicator Container
  // ==============================

  var indicatorsContainerCSS = function indicatorsContainerCSS() {
    return {
      alignItems: 'center',
      alignSelf: 'stretch',
      display: 'flex',
      flexShrink: 0,
    }
  }
  var IndicatorsContainer = function IndicatorsContainer(props) {
    var children = props.children,
      innerProps = props.innerProps
    return jsx(
      'div',
      _extends$1(
        {},
        getStyleProps(props, 'indicatorsContainer', {
          indicators: true,
        }),
        innerProps,
      ),
      children,
    )
  }

  var _templateObject
  var _excluded$2$1 = ['size']

  // ==============================
  // Dropdown & Clear Icons
  // ==============================
  var _ref2$2 = {
    name: '8mmkcg',
    styles: 'display:inline-block;fill:currentColor;line-height:1;stroke:currentColor;stroke-width:0',
  }
  var Svg = function Svg(_ref) {
    var size = _ref.size,
      props = _objectWithoutProperties(_ref, _excluded$2$1)
    return jsx(
      'svg',
      _extends$1(
        {
          height: size,
          width: size,
          viewBox: '0 0 20 20',
          'aria-hidden': 'true',
          focusable: 'false',
          css: _ref2$2,
        },
        props,
      ),
    )
  }
  var CrossIcon = function CrossIcon(props) {
    return jsx(
      Svg,
      _extends$1(
        {
          size: 20,
        },
        props,
      ),
      jsx('path', {
        d: 'M14.348 14.849c-0.469 0.469-1.229 0.469-1.697 0l-2.651-3.030-2.651 3.029c-0.469 0.469-1.229 0.469-1.697 0-0.469-0.469-0.469-1.229 0-1.697l2.758-3.15-2.759-3.152c-0.469-0.469-0.469-1.228 0-1.697s1.228-0.469 1.697 0l2.652 3.031 2.651-3.031c0.469-0.469 1.228-0.469 1.697 0s0.469 1.229 0 1.697l-2.758 3.152 2.758 3.15c0.469 0.469 0.469 1.229 0 1.698z',
      }),
    )
  }
  var DownChevron = function DownChevron(props) {
    return jsx(
      Svg,
      _extends$1(
        {
          size: 20,
        },
        props,
      ),
      jsx('path', {
        d: 'M4.516 7.548c0.436-0.446 1.043-0.481 1.576 0l3.908 3.747 3.908-3.747c0.533-0.481 1.141-0.446 1.574 0 0.436 0.445 0.408 1.197 0 1.615-0.406 0.418-4.695 4.502-4.695 4.502-0.217 0.223-0.502 0.335-0.787 0.335s-0.57-0.112-0.789-0.335c0 0-4.287-4.084-4.695-4.502s-0.436-1.17 0-1.615z',
      }),
    )
  }

  // ==============================
  // Dropdown & Clear Buttons
  // ==============================

  var baseCSS = function baseCSS(_ref3, unstyled) {
    var isFocused = _ref3.isFocused,
      _ref3$theme = _ref3.theme,
      baseUnit = _ref3$theme.spacing.baseUnit,
      colors = _ref3$theme.colors
    return _objectSpread2(
      {
        label: 'indicatorContainer',
        display: 'flex',
        transition: 'color 150ms',
      },
      unstyled
        ? {}
        : {
            color: isFocused ? colors.neutral60 : colors.neutral20,
            padding: baseUnit * 2,
            ':hover': {
              color: isFocused ? colors.neutral80 : colors.neutral40,
            },
          },
    )
  }
  var dropdownIndicatorCSS = baseCSS
  var DropdownIndicator = function DropdownIndicator(props) {
    var children = props.children,
      innerProps = props.innerProps
    return jsx(
      'div',
      _extends$1(
        {},
        getStyleProps(props, 'dropdownIndicator', {
          indicator: true,
          'dropdown-indicator': true,
        }),
        innerProps,
      ),
      children || jsx(DownChevron, null),
    )
  }
  var clearIndicatorCSS = baseCSS
  var ClearIndicator = function ClearIndicator(props) {
    var children = props.children,
      innerProps = props.innerProps
    return jsx(
      'div',
      _extends$1(
        {},
        getStyleProps(props, 'clearIndicator', {
          indicator: true,
          'clear-indicator': true,
        }),
        innerProps,
      ),
      children || jsx(CrossIcon, null),
    )
  }

  // ==============================
  // Separator
  // ==============================

  var indicatorSeparatorCSS = function indicatorSeparatorCSS(_ref4, unstyled) {
    var isDisabled = _ref4.isDisabled,
      _ref4$theme = _ref4.theme,
      baseUnit = _ref4$theme.spacing.baseUnit,
      colors = _ref4$theme.colors
    return _objectSpread2(
      {
        label: 'indicatorSeparator',
        alignSelf: 'stretch',
        width: 1,
      },
      unstyled
        ? {}
        : {
            backgroundColor: isDisabled ? colors.neutral10 : colors.neutral20,
            marginBottom: baseUnit * 2,
            marginTop: baseUnit * 2,
          },
    )
  }
  var IndicatorSeparator = function IndicatorSeparator(props) {
    var innerProps = props.innerProps
    return jsx(
      'span',
      _extends$1(
        {},
        innerProps,
        getStyleProps(props, 'indicatorSeparator', {
          'indicator-separator': true,
        }),
      ),
    )
  }

  // ==============================
  // Loading
  // ==============================

  var loadingDotAnimations = keyframes(_templateObject || (_templateObject = _taggedTemplateLiteral(['\n  0%, 80%, 100% { opacity: 0; }\n  40% { opacity: 1; }\n'])))
  var loadingIndicatorCSS = function loadingIndicatorCSS(_ref5, unstyled) {
    var isFocused = _ref5.isFocused,
      size = _ref5.size,
      _ref5$theme = _ref5.theme,
      colors = _ref5$theme.colors,
      baseUnit = _ref5$theme.spacing.baseUnit
    return _objectSpread2(
      {
        label: 'loadingIndicator',
        display: 'flex',
        transition: 'color 150ms',
        alignSelf: 'center',
        fontSize: size,
        lineHeight: 1,
        marginRight: size,
        textAlign: 'center',
        verticalAlign: 'middle',
      },
      unstyled
        ? {}
        : {
            color: isFocused ? colors.neutral60 : colors.neutral20,
            padding: baseUnit * 2,
          },
    )
  }
  var LoadingDot = function LoadingDot(_ref6) {
    var delay = _ref6.delay,
      offset = _ref6.offset
    return jsx('span', {
      css: /*#__PURE__*/ css$2(
        {
          animation: ''.concat(loadingDotAnimations, ' 1s ease-in-out ').concat(delay, 'ms infinite;'),
          backgroundColor: 'currentColor',
          borderRadius: '1em',
          display: 'inline-block',
          marginLeft: offset ? '1em' : undefined,
          height: '1em',
          verticalAlign: 'top',
          width: '1em',
        },
        '',
        '',
      ),
    })
  }
  var LoadingIndicator = function LoadingIndicator(props) {
    var innerProps = props.innerProps,
      isRtl = props.isRtl
    return jsx(
      'div',
      _extends$1(
        {},
        getStyleProps(props, 'loadingIndicator', {
          indicator: true,
          'loading-indicator': true,
        }),
        innerProps,
      ),
      jsx(LoadingDot, {
        delay: 0,
        offset: isRtl,
      }),
      jsx(LoadingDot, {
        delay: 160,
        offset: true,
      }),
      jsx(LoadingDot, {
        delay: 320,
        offset: !isRtl,
      }),
    )
  }
  LoadingIndicator.defaultProps = {
    size: 4,
  }

  var css$1 = function css(_ref, unstyled) {
    var isDisabled = _ref.isDisabled,
      isFocused = _ref.isFocused,
      _ref$theme = _ref.theme,
      colors = _ref$theme.colors,
      borderRadius = _ref$theme.borderRadius,
      spacing = _ref$theme.spacing
    return _objectSpread2(
      {
        label: 'control',
        alignItems: 'center',
        cursor: 'default',
        display: 'flex',
        flexWrap: 'wrap',
        justifyContent: 'space-between',
        minHeight: spacing.controlHeight,
        outline: '0 !important',
        position: 'relative',
        transition: 'all 100ms',
      },
      unstyled
        ? {}
        : {
            backgroundColor: isDisabled ? colors.neutral5 : colors.neutral0,
            borderColor: isDisabled ? colors.neutral10 : isFocused ? colors.primary : colors.neutral20,
            borderRadius: borderRadius,
            borderStyle: 'solid',
            borderWidth: 1,
            boxShadow: isFocused ? '0 0 0 1px '.concat(colors.primary) : undefined,
            '&:hover': {
              borderColor: isFocused ? colors.primary : colors.neutral30,
            },
          },
    )
  }
  var Control = function Control(props) {
    var children = props.children,
      isDisabled = props.isDisabled,
      isFocused = props.isFocused,
      innerRef = props.innerRef,
      innerProps = props.innerProps,
      menuIsOpen = props.menuIsOpen
    return jsx(
      'div',
      _extends$1(
        {
          ref: innerRef,
        },
        getStyleProps(props, 'control', {
          control: true,
          'control--is-disabled': isDisabled,
          'control--is-focused': isFocused,
          'control--menu-is-open': menuIsOpen,
        }),
        innerProps,
      ),
      children,
    )
  }

  var _excluded$1$2 = ['data']
  var groupCSS = function groupCSS(_ref, unstyled) {
    var spacing = _ref.theme.spacing
    return unstyled
      ? {}
      : {
          paddingBottom: spacing.baseUnit * 2,
          paddingTop: spacing.baseUnit * 2,
        }
  }
  var Group = function Group(props) {
    var children = props.children,
      cx = props.cx,
      getStyles = props.getStyles,
      getClassNames = props.getClassNames,
      Heading = props.Heading,
      headingProps = props.headingProps,
      innerProps = props.innerProps,
      label = props.label,
      theme = props.theme,
      selectProps = props.selectProps
    return jsx(
      'div',
      _extends$1(
        {},
        getStyleProps(props, 'group', {
          group: true,
        }),
        innerProps,
      ),
      jsx(
        Heading,
        _extends$1({}, headingProps, {
          selectProps: selectProps,
          theme: theme,
          getStyles: getStyles,
          getClassNames: getClassNames,
          cx: cx,
        }),
        label,
      ),
      jsx('div', null, children),
    )
  }
  var groupHeadingCSS = function groupHeadingCSS(_ref2, unstyled) {
    var _ref2$theme = _ref2.theme,
      colors = _ref2$theme.colors,
      spacing = _ref2$theme.spacing
    return _objectSpread2(
      {
        label: 'group',
        cursor: 'default',
        display: 'block',
      },
      unstyled
        ? {}
        : {
            color: colors.neutral40,
            fontSize: '75%',
            fontWeight: 500,
            marginBottom: '0.25em',
            paddingLeft: spacing.baseUnit * 3,
            paddingRight: spacing.baseUnit * 3,
            textTransform: 'uppercase',
          },
    )
  }
  var GroupHeading = function GroupHeading(props) {
    var _cleanCommonProps = cleanCommonProps(props)
    _cleanCommonProps.data
    var innerProps = _objectWithoutProperties(_cleanCommonProps, _excluded$1$2)
    return jsx(
      'div',
      _extends$1(
        {},
        getStyleProps(props, 'groupHeading', {
          'group-heading': true,
        }),
        innerProps,
      ),
    )
  }

  var _excluded$7 = ['innerRef', 'isDisabled', 'isHidden', 'inputClassName']
  var inputCSS = function inputCSS(_ref, unstyled) {
    var isDisabled = _ref.isDisabled,
      value = _ref.value,
      _ref$theme = _ref.theme,
      spacing = _ref$theme.spacing,
      colors = _ref$theme.colors
    return _objectSpread2(
      _objectSpread2(
        {
          visibility: isDisabled ? 'hidden' : 'visible',
          // force css to recompute when value change due to @emotion bug.
          // We can remove it whenever the bug is fixed.
          transform: value ? 'translateZ(0)' : '',
        },
        containerStyle,
      ),
      unstyled
        ? {}
        : {
            margin: spacing.baseUnit / 2,
            paddingBottom: spacing.baseUnit / 2,
            paddingTop: spacing.baseUnit / 2,
            color: colors.neutral80,
          },
    )
  }
  var spacingStyle = {
    gridArea: '1 / 2',
    font: 'inherit',
    minWidth: '2px',
    border: 0,
    margin: 0,
    outline: 0,
    padding: 0,
  }
  var containerStyle = {
    flex: '1 1 auto',
    display: 'inline-grid',
    gridArea: '1 / 1 / 2 / 3',
    gridTemplateColumns: '0 min-content',
    '&:after': _objectSpread2(
      {
        content: 'attr(data-value) " "',
        visibility: 'hidden',
        whiteSpace: 'pre',
      },
      spacingStyle,
    ),
  }
  var inputStyle = function inputStyle(isHidden) {
    return _objectSpread2(
      {
        label: 'input',
        color: 'inherit',
        background: 0,
        opacity: isHidden ? 0 : 1,
        width: '100%',
      },
      spacingStyle,
    )
  }
  var Input = function Input(props) {
    var cx = props.cx,
      value = props.value
    var _cleanCommonProps = cleanCommonProps(props),
      innerRef = _cleanCommonProps.innerRef,
      isDisabled = _cleanCommonProps.isDisabled,
      isHidden = _cleanCommonProps.isHidden,
      inputClassName = _cleanCommonProps.inputClassName,
      innerProps = _objectWithoutProperties(_cleanCommonProps, _excluded$7)
    return jsx(
      'div',
      _extends$1(
        {},
        getStyleProps(props, 'input', {
          'input-container': true,
        }),
        {
          'data-value': value || '',
        },
      ),
      jsx(
        'input',
        _extends$1(
          {
            className: cx(
              {
                input: true,
              },
              inputClassName,
            ),
            ref: innerRef,
            style: inputStyle(isHidden),
            disabled: isDisabled,
          },
          innerProps,
        ),
      ),
    )
  }

  var multiValueCSS = function multiValueCSS(_ref, unstyled) {
    var _ref$theme = _ref.theme,
      spacing = _ref$theme.spacing,
      borderRadius = _ref$theme.borderRadius,
      colors = _ref$theme.colors
    return _objectSpread2(
      {
        label: 'multiValue',
        display: 'flex',
        minWidth: 0,
      },
      unstyled
        ? {}
        : {
            backgroundColor: colors.neutral10,
            borderRadius: borderRadius / 2,
            margin: spacing.baseUnit / 2,
          },
    )
  }
  var multiValueLabelCSS = function multiValueLabelCSS(_ref2, unstyled) {
    var _ref2$theme = _ref2.theme,
      borderRadius = _ref2$theme.borderRadius,
      colors = _ref2$theme.colors,
      cropWithEllipsis = _ref2.cropWithEllipsis
    return _objectSpread2(
      {
        overflow: 'hidden',
        textOverflow: cropWithEllipsis || cropWithEllipsis === undefined ? 'ellipsis' : undefined,
        whiteSpace: 'nowrap',
      },
      unstyled
        ? {}
        : {
            borderRadius: borderRadius / 2,
            color: colors.neutral80,
            fontSize: '85%',
            padding: 3,
            paddingLeft: 6,
          },
    )
  }
  var multiValueRemoveCSS = function multiValueRemoveCSS(_ref3, unstyled) {
    var _ref3$theme = _ref3.theme,
      spacing = _ref3$theme.spacing,
      borderRadius = _ref3$theme.borderRadius,
      colors = _ref3$theme.colors,
      isFocused = _ref3.isFocused
    return _objectSpread2(
      {
        alignItems: 'center',
        display: 'flex',
      },
      unstyled
        ? {}
        : {
            borderRadius: borderRadius / 2,
            backgroundColor: isFocused ? colors.dangerLight : undefined,
            paddingLeft: spacing.baseUnit,
            paddingRight: spacing.baseUnit,
            ':hover': {
              backgroundColor: colors.dangerLight,
              color: colors.danger,
            },
          },
    )
  }
  var MultiValueGeneric = function MultiValueGeneric(_ref4) {
    var children = _ref4.children,
      innerProps = _ref4.innerProps
    return jsx('div', innerProps, children)
  }
  var MultiValueContainer = MultiValueGeneric
  var MultiValueLabel = MultiValueGeneric
  function MultiValueRemove(_ref5) {
    var children = _ref5.children,
      innerProps = _ref5.innerProps
    return jsx(
      'div',
      _extends$1(
        {
          role: 'button',
        },
        innerProps,
      ),
      children ||
        jsx(CrossIcon, {
          size: 14,
        }),
    )
  }
  var MultiValue = function MultiValue(props) {
    var children = props.children,
      components = props.components,
      data = props.data,
      innerProps = props.innerProps,
      isDisabled = props.isDisabled,
      removeProps = props.removeProps,
      selectProps = props.selectProps
    var Container = components.Container,
      Label = components.Label,
      Remove = components.Remove
    return jsx(
      Container,
      {
        data: data,
        innerProps: _objectSpread2(
          _objectSpread2(
            {},
            getStyleProps(props, 'multiValue', {
              'multi-value': true,
              'multi-value--is-disabled': isDisabled,
            }),
          ),
          innerProps,
        ),
        selectProps: selectProps,
      },
      jsx(
        Label,
        {
          data: data,
          innerProps: _objectSpread2(
            {},
            getStyleProps(props, 'multiValueLabel', {
              'multi-value__label': true,
            }),
          ),
          selectProps: selectProps,
        },
        children,
      ),
      jsx(Remove, {
        data: data,
        innerProps: _objectSpread2(
          _objectSpread2(
            {},
            getStyleProps(props, 'multiValueRemove', {
              'multi-value__remove': true,
            }),
          ),
          {},
          {
            'aria-label': 'Remove '.concat(children || 'option'),
          },
          removeProps,
        ),
        selectProps: selectProps,
      }),
    )
  }

  var optionCSS = function optionCSS(_ref, unstyled) {
    var isDisabled = _ref.isDisabled,
      isFocused = _ref.isFocused,
      isSelected = _ref.isSelected,
      _ref$theme = _ref.theme,
      spacing = _ref$theme.spacing,
      colors = _ref$theme.colors
    return _objectSpread2(
      {
        label: 'option',
        cursor: 'default',
        display: 'block',
        fontSize: 'inherit',
        width: '100%',
        userSelect: 'none',
        WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',
      },
      unstyled
        ? {}
        : {
            backgroundColor: isSelected ? colors.primary : isFocused ? colors.primary25 : 'transparent',
            color: isDisabled ? colors.neutral20 : isSelected ? colors.neutral0 : 'inherit',
            padding: ''.concat(spacing.baseUnit * 2, 'px ').concat(spacing.baseUnit * 3, 'px'),
            // provide some affordance on touch devices
            ':active': {
              backgroundColor: !isDisabled ? (isSelected ? colors.primary : colors.primary50) : undefined,
            },
          },
    )
  }
  var Option = function Option(props) {
    var children = props.children,
      isDisabled = props.isDisabled,
      isFocused = props.isFocused,
      isSelected = props.isSelected,
      innerRef = props.innerRef,
      innerProps = props.innerProps
    return jsx(
      'div',
      _extends$1(
        {},
        getStyleProps(props, 'option', {
          option: true,
          'option--is-disabled': isDisabled,
          'option--is-focused': isFocused,
          'option--is-selected': isSelected,
        }),
        {
          ref: innerRef,
          'aria-disabled': isDisabled,
        },
        innerProps,
      ),
      children,
    )
  }

  var placeholderCSS = function placeholderCSS(_ref, unstyled) {
    var _ref$theme = _ref.theme,
      spacing = _ref$theme.spacing,
      colors = _ref$theme.colors
    return _objectSpread2(
      {
        label: 'placeholder',
        gridArea: '1 / 1 / 2 / 3',
      },
      unstyled
        ? {}
        : {
            color: colors.neutral50,
            marginLeft: spacing.baseUnit / 2,
            marginRight: spacing.baseUnit / 2,
          },
    )
  }
  var Placeholder = function Placeholder(props) {
    var children = props.children,
      innerProps = props.innerProps
    return jsx(
      'div',
      _extends$1(
        {},
        getStyleProps(props, 'placeholder', {
          placeholder: true,
        }),
        innerProps,
      ),
      children,
    )
  }

  var css = function css(_ref, unstyled) {
    var isDisabled = _ref.isDisabled,
      _ref$theme = _ref.theme,
      spacing = _ref$theme.spacing,
      colors = _ref$theme.colors
    return _objectSpread2(
      {
        label: 'singleValue',
        gridArea: '1 / 1 / 2 / 3',
        maxWidth: '100%',
        overflow: 'hidden',
        textOverflow: 'ellipsis',
        whiteSpace: 'nowrap',
      },
      unstyled
        ? {}
        : {
            color: isDisabled ? colors.neutral40 : colors.neutral80,
            marginLeft: spacing.baseUnit / 2,
            marginRight: spacing.baseUnit / 2,
          },
    )
  }
  var SingleValue = function SingleValue(props) {
    var children = props.children,
      isDisabled = props.isDisabled,
      innerProps = props.innerProps
    return jsx(
      'div',
      _extends$1(
        {},
        getStyleProps(props, 'singleValue', {
          'single-value': true,
          'single-value--is-disabled': isDisabled,
        }),
        innerProps,
      ),
      children,
    )
  }

  var components = {
    ClearIndicator: ClearIndicator,
    Control: Control,
    DropdownIndicator: DropdownIndicator,
    DownChevron: DownChevron,
    CrossIcon: CrossIcon,
    Group: Group,
    GroupHeading: GroupHeading,
    IndicatorsContainer: IndicatorsContainer,
    IndicatorSeparator: IndicatorSeparator,
    Input: Input,
    LoadingIndicator: LoadingIndicator,
    Menu: Menu,
    MenuList: MenuList,
    MenuPortal: MenuPortal,
    LoadingMessage: LoadingMessage,
    NoOptionsMessage: NoOptionsMessage,
    MultiValue: MultiValue,
    MultiValueContainer: MultiValueContainer,
    MultiValueLabel: MultiValueLabel,
    MultiValueRemove: MultiValueRemove,
    Option: Option,
    Placeholder: Placeholder,
    SelectContainer: SelectContainer,
    SingleValue: SingleValue,
    ValueContainer: ValueContainer,
  }
  var defaultComponents = function defaultComponents(props) {
    return _objectSpread2(_objectSpread2({}, components), props.components)
  }

  var safeIsNaN =
    Number.isNaN ||
    function ponyfill(value) {
      return typeof value === 'number' && value !== value
    }
  function isEqual(first, second) {
    if (first === second) {
      return true
    }
    if (safeIsNaN(first) && safeIsNaN(second)) {
      return true
    }
    return false
  }
  function areInputsEqual(newInputs, lastInputs) {
    if (newInputs.length !== lastInputs.length) {
      return false
    }
    for (var i = 0; i < newInputs.length; i++) {
      if (!isEqual(newInputs[i], lastInputs[i])) {
        return false
      }
    }
    return true
  }

  function memoizeOne(resultFn, isEqual) {
    if (isEqual === void 0) {
      isEqual = areInputsEqual
    }
    var cache = null
    function memoized() {
      var newArgs = []
      for (var _i = 0; _i < arguments.length; _i++) {
        newArgs[_i] = arguments[_i]
      }
      if (cache && cache.lastThis === this && isEqual(newArgs, cache.lastArgs)) {
        return cache.lastResult
      }
      var lastResult = resultFn.apply(this, newArgs)
      cache = {
        lastResult: lastResult,
        lastArgs: newArgs,
        lastThis: this,
      }
      return lastResult
    }
    memoized.clear = function clear() {
      cache = null
    }
    return memoized
  }

  // Assistive text to describe visual elements. Hidden for sighted users.
  var _ref = {
    name: '7pg0cj-a11yText',
    styles: 'label:a11yText;z-index:9999;border:0;clip:rect(1px, 1px, 1px, 1px);height:1px;width:1px;position:absolute;overflow:hidden;padding:0;white-space:nowrap',
  }
  var A11yText = function A11yText(props) {
    return jsx(
      'span',
      _extends$1(
        {
          css: _ref,
        },
        props,
      ),
    )
  }

  var defaultAriaLiveMessages = {
    guidance: function guidance(props) {
      var isSearchable = props.isSearchable,
        isMulti = props.isMulti,
        isDisabled = props.isDisabled,
        tabSelectsValue = props.tabSelectsValue,
        context = props.context
      switch (context) {
        case 'menu':
          return 'Use Up and Down to choose options'
            .concat(isDisabled ? '' : ', press Enter to select the currently focused option', ', press Escape to exit the menu')
            .concat(tabSelectsValue ? ', press Tab to select the option and exit the menu' : '', '.')
        case 'input':
          return ''
            .concat(props['aria-label'] || 'Select', ' is focused ')
            .concat(isSearchable ? ',type to refine list' : '', ', press Down to open the menu, ')
            .concat(isMulti ? ' press left to focus selected values' : '')
        case 'value':
          return 'Use left and right to toggle between focused values, press Backspace to remove the currently focused value'
        default:
          return ''
      }
    },
    onChange: function onChange(props) {
      var action = props.action,
        _props$label = props.label,
        label = _props$label === void 0 ? '' : _props$label,
        labels = props.labels,
        isDisabled = props.isDisabled
      switch (action) {
        case 'deselect-option':
        case 'pop-value':
        case 'remove-value':
          return 'option '.concat(label, ', deselected.')
        case 'clear':
          return 'All selected options have been cleared.'
        case 'initial-input-focus':
          return 'option'.concat(labels.length > 1 ? 's' : '', ' ').concat(labels.join(','), ', selected.')
        case 'select-option':
          return isDisabled ? 'option '.concat(label, ' is disabled. Select another option.') : 'option '.concat(label, ', selected.')
        default:
          return ''
      }
    },
    onFocus: function onFocus(props) {
      var context = props.context,
        focused = props.focused,
        options = props.options,
        _props$label2 = props.label,
        label = _props$label2 === void 0 ? '' : _props$label2,
        selectValue = props.selectValue,
        isDisabled = props.isDisabled,
        isSelected = props.isSelected
      var getArrayIndex = function getArrayIndex(arr, item) {
        return arr && arr.length ? ''.concat(arr.indexOf(item) + 1, ' of ').concat(arr.length) : ''
      }
      if (context === 'value' && selectValue) {
        return 'value '.concat(label, ' focused, ').concat(getArrayIndex(selectValue, focused), '.')
      }
      if (context === 'menu') {
        var disabled = isDisabled ? ' disabled' : ''
        var status = ''.concat(isSelected ? 'selected' : 'focused').concat(disabled)
        return 'option '.concat(label, ' ').concat(status, ', ').concat(getArrayIndex(options, focused), '.')
      }
      return ''
    },
    onFilter: function onFilter(props) {
      var inputValue = props.inputValue,
        resultsMessage = props.resultsMessage
      return ''.concat(resultsMessage).concat(inputValue ? ' for search term ' + inputValue : '', '.')
    },
  }

  var LiveRegion = function LiveRegion(props) {
    var ariaSelection = props.ariaSelection,
      focusedOption = props.focusedOption,
      focusedValue = props.focusedValue,
      focusableOptions = props.focusableOptions,
      isFocused = props.isFocused,
      selectValue = props.selectValue,
      selectProps = props.selectProps,
      id = props.id
    var ariaLiveMessages = selectProps.ariaLiveMessages,
      getOptionLabel = selectProps.getOptionLabel,
      inputValue = selectProps.inputValue,
      isMulti = selectProps.isMulti,
      isOptionDisabled = selectProps.isOptionDisabled,
      isSearchable = selectProps.isSearchable,
      menuIsOpen = selectProps.menuIsOpen,
      options = selectProps.options,
      screenReaderStatus = selectProps.screenReaderStatus,
      tabSelectsValue = selectProps.tabSelectsValue
    var ariaLabel = selectProps['aria-label']
    var ariaLive = selectProps['aria-live']

    // Update aria live message configuration when prop changes
    var messages = React$1.useMemo(
      function () {
        return _objectSpread2(_objectSpread2({}, defaultAriaLiveMessages), ariaLiveMessages || {})
      },
      [ariaLiveMessages],
    )

    // Update aria live selected option when prop changes
    var ariaSelected = React$1.useMemo(
      function () {
        var message = ''
        if (ariaSelection && messages.onChange) {
          var option = ariaSelection.option,
            selectedOptions = ariaSelection.options,
            removedValue = ariaSelection.removedValue,
            removedValues = ariaSelection.removedValues,
            value = ariaSelection.value
          // select-option when !isMulti does not return option so we assume selected option is value
          var asOption = function asOption(val) {
            return !Array.isArray(val) ? val : null
          }

          // If there is just one item from the action then get its label
          var selected = removedValue || option || asOption(value)
          var label = selected ? getOptionLabel(selected) : ''

          // If there are multiple items from the action then return an array of labels
          var multiSelected = selectedOptions || removedValues || undefined
          var labels = multiSelected ? multiSelected.map(getOptionLabel) : []
          var onChangeProps = _objectSpread2(
            {
              // multiSelected items are usually items that have already been selected
              // or set by the user as a default value so we assume they are not disabled
              isDisabled: selected && isOptionDisabled(selected, selectValue),
              label: label,
              labels: labels,
            },
            ariaSelection,
          )
          message = messages.onChange(onChangeProps)
        }
        return message
      },
      [ariaSelection, messages, isOptionDisabled, selectValue, getOptionLabel],
    )
    var ariaFocused = React$1.useMemo(
      function () {
        var focusMsg = ''
        var focused = focusedOption || focusedValue
        var isSelected = !!(focusedOption && selectValue && selectValue.includes(focusedOption))
        if (focused && messages.onFocus) {
          var onFocusProps = {
            focused: focused,
            label: getOptionLabel(focused),
            isDisabled: isOptionDisabled(focused, selectValue),
            isSelected: isSelected,
            options: focusableOptions,
            context: focused === focusedOption ? 'menu' : 'value',
            selectValue: selectValue,
          }
          focusMsg = messages.onFocus(onFocusProps)
        }
        return focusMsg
      },
      [focusedOption, focusedValue, getOptionLabel, isOptionDisabled, messages, focusableOptions, selectValue],
    )
    var ariaResults = React$1.useMemo(
      function () {
        var resultsMsg = ''
        if (menuIsOpen && options.length && messages.onFilter) {
          var resultsMessage = screenReaderStatus({
            count: focusableOptions.length,
          })
          resultsMsg = messages.onFilter({
            inputValue: inputValue,
            resultsMessage: resultsMessage,
          })
        }
        return resultsMsg
      },
      [focusableOptions, inputValue, menuIsOpen, messages, options, screenReaderStatus],
    )
    var ariaGuidance = React$1.useMemo(
      function () {
        var guidanceMsg = ''
        if (messages.guidance) {
          var context = focusedValue ? 'value' : menuIsOpen ? 'menu' : 'input'
          guidanceMsg = messages.guidance({
            'aria-label': ariaLabel,
            context: context,
            isDisabled: focusedOption && isOptionDisabled(focusedOption, selectValue),
            isMulti: isMulti,
            isSearchable: isSearchable,
            tabSelectsValue: tabSelectsValue,
          })
        }
        return guidanceMsg
      },
      [ariaLabel, focusedOption, focusedValue, isMulti, isOptionDisabled, isSearchable, menuIsOpen, messages, selectValue, tabSelectsValue],
    )
    var ariaContext = ''.concat(ariaFocused, ' ').concat(ariaResults, ' ').concat(ariaGuidance)
    var ScreenReaderText = jsx(
      React$1.Fragment,
      null,
      jsx(
        'span',
        {
          id: 'aria-selection',
        },
        ariaSelected,
      ),
      jsx(
        'span',
        {
          id: 'aria-context',
        },
        ariaContext,
      ),
    )
    var isInitialFocus = (ariaSelection === null || ariaSelection === void 0 ? void 0 : ariaSelection.action) === 'initial-input-focus'
    return jsx(
      React$1.Fragment,
      null,
      jsx(
        A11yText,
        {
          id: id,
        },
        isInitialFocus && ScreenReaderText,
      ),
      jsx(
        A11yText,
        {
          'aria-live': ariaLive,
          'aria-atomic': 'false',
          'aria-relevant': 'additions text',
        },
        isFocused && !isInitialFocus && ScreenReaderText,
      ),
    )
  }

  var diacritics = [
    {
      base: 'A',
      letters:
        'A\u24B6\uFF21\xC0\xC1\xC2\u1EA6\u1EA4\u1EAA\u1EA8\xC3\u0100\u0102\u1EB0\u1EAE\u1EB4\u1EB2\u0226\u01E0\xC4\u01DE\u1EA2\xC5\u01FA\u01CD\u0200\u0202\u1EA0\u1EAC\u1EB6\u1E00\u0104\u023A\u2C6F',
    },
    {
      base: 'AA',
      letters: '\uA732',
    },
    {
      base: 'AE',
      letters: '\xC6\u01FC\u01E2',
    },
    {
      base: 'AO',
      letters: '\uA734',
    },
    {
      base: 'AU',
      letters: '\uA736',
    },
    {
      base: 'AV',
      letters: '\uA738\uA73A',
    },
    {
      base: 'AY',
      letters: '\uA73C',
    },
    {
      base: 'B',
      letters: 'B\u24B7\uFF22\u1E02\u1E04\u1E06\u0243\u0182\u0181',
    },
    {
      base: 'C',
      letters: 'C\u24B8\uFF23\u0106\u0108\u010A\u010C\xC7\u1E08\u0187\u023B\uA73E',
    },
    {
      base: 'D',
      letters: 'D\u24B9\uFF24\u1E0A\u010E\u1E0C\u1E10\u1E12\u1E0E\u0110\u018B\u018A\u0189\uA779',
    },
    {
      base: 'DZ',
      letters: '\u01F1\u01C4',
    },
    {
      base: 'Dz',
      letters: '\u01F2\u01C5',
    },
    {
      base: 'E',
      letters:
        'E\u24BA\uFF25\xC8\xC9\xCA\u1EC0\u1EBE\u1EC4\u1EC2\u1EBC\u0112\u1E14\u1E16\u0114\u0116\xCB\u1EBA\u011A\u0204\u0206\u1EB8\u1EC6\u0228\u1E1C\u0118\u1E18\u1E1A\u0190\u018E',
    },
    {
      base: 'F',
      letters: 'F\u24BB\uFF26\u1E1E\u0191\uA77B',
    },
    {
      base: 'G',
      letters: 'G\u24BC\uFF27\u01F4\u011C\u1E20\u011E\u0120\u01E6\u0122\u01E4\u0193\uA7A0\uA77D\uA77E',
    },
    {
      base: 'H',
      letters: 'H\u24BD\uFF28\u0124\u1E22\u1E26\u021E\u1E24\u1E28\u1E2A\u0126\u2C67\u2C75\uA78D',
    },
    {
      base: 'I',
      letters: 'I\u24BE\uFF29\xCC\xCD\xCE\u0128\u012A\u012C\u0130\xCF\u1E2E\u1EC8\u01CF\u0208\u020A\u1ECA\u012E\u1E2C\u0197',
    },
    {
      base: 'J',
      letters: 'J\u24BF\uFF2A\u0134\u0248',
    },
    {
      base: 'K',
      letters: 'K\u24C0\uFF2B\u1E30\u01E8\u1E32\u0136\u1E34\u0198\u2C69\uA740\uA742\uA744\uA7A2',
    },
    {
      base: 'L',
      letters: 'L\u24C1\uFF2C\u013F\u0139\u013D\u1E36\u1E38\u013B\u1E3C\u1E3A\u0141\u023D\u2C62\u2C60\uA748\uA746\uA780',
    },
    {
      base: 'LJ',
      letters: '\u01C7',
    },
    {
      base: 'Lj',
      letters: '\u01C8',
    },
    {
      base: 'M',
      letters: 'M\u24C2\uFF2D\u1E3E\u1E40\u1E42\u2C6E\u019C',
    },
    {
      base: 'N',
      letters: 'N\u24C3\uFF2E\u01F8\u0143\xD1\u1E44\u0147\u1E46\u0145\u1E4A\u1E48\u0220\u019D\uA790\uA7A4',
    },
    {
      base: 'NJ',
      letters: '\u01CA',
    },
    {
      base: 'Nj',
      letters: '\u01CB',
    },
    {
      base: 'O',
      letters:
        'O\u24C4\uFF2F\xD2\xD3\xD4\u1ED2\u1ED0\u1ED6\u1ED4\xD5\u1E4C\u022C\u1E4E\u014C\u1E50\u1E52\u014E\u022E\u0230\xD6\u022A\u1ECE\u0150\u01D1\u020C\u020E\u01A0\u1EDC\u1EDA\u1EE0\u1EDE\u1EE2\u1ECC\u1ED8\u01EA\u01EC\xD8\u01FE\u0186\u019F\uA74A\uA74C',
    },
    {
      base: 'OI',
      letters: '\u01A2',
    },
    {
      base: 'OO',
      letters: '\uA74E',
    },
    {
      base: 'OU',
      letters: '\u0222',
    },
    {
      base: 'P',
      letters: 'P\u24C5\uFF30\u1E54\u1E56\u01A4\u2C63\uA750\uA752\uA754',
    },
    {
      base: 'Q',
      letters: 'Q\u24C6\uFF31\uA756\uA758\u024A',
    },
    {
      base: 'R',
      letters: 'R\u24C7\uFF32\u0154\u1E58\u0158\u0210\u0212\u1E5A\u1E5C\u0156\u1E5E\u024C\u2C64\uA75A\uA7A6\uA782',
    },
    {
      base: 'S',
      letters: 'S\u24C8\uFF33\u1E9E\u015A\u1E64\u015C\u1E60\u0160\u1E66\u1E62\u1E68\u0218\u015E\u2C7E\uA7A8\uA784',
    },
    {
      base: 'T',
      letters: 'T\u24C9\uFF34\u1E6A\u0164\u1E6C\u021A\u0162\u1E70\u1E6E\u0166\u01AC\u01AE\u023E\uA786',
    },
    {
      base: 'TZ',
      letters: '\uA728',
    },
    {
      base: 'U',
      letters:
        'U\u24CA\uFF35\xD9\xDA\xDB\u0168\u1E78\u016A\u1E7A\u016C\xDC\u01DB\u01D7\u01D5\u01D9\u1EE6\u016E\u0170\u01D3\u0214\u0216\u01AF\u1EEA\u1EE8\u1EEE\u1EEC\u1EF0\u1EE4\u1E72\u0172\u1E76\u1E74\u0244',
    },
    {
      base: 'V',
      letters: 'V\u24CB\uFF36\u1E7C\u1E7E\u01B2\uA75E\u0245',
    },
    {
      base: 'VY',
      letters: '\uA760',
    },
    {
      base: 'W',
      letters: 'W\u24CC\uFF37\u1E80\u1E82\u0174\u1E86\u1E84\u1E88\u2C72',
    },
    {
      base: 'X',
      letters: 'X\u24CD\uFF38\u1E8A\u1E8C',
    },
    {
      base: 'Y',
      letters: 'Y\u24CE\uFF39\u1EF2\xDD\u0176\u1EF8\u0232\u1E8E\u0178\u1EF6\u1EF4\u01B3\u024E\u1EFE',
    },
    {
      base: 'Z',
      letters: 'Z\u24CF\uFF3A\u0179\u1E90\u017B\u017D\u1E92\u1E94\u01B5\u0224\u2C7F\u2C6B\uA762',
    },
    {
      base: 'a',
      letters:
        'a\u24D0\uFF41\u1E9A\xE0\xE1\xE2\u1EA7\u1EA5\u1EAB\u1EA9\xE3\u0101\u0103\u1EB1\u1EAF\u1EB5\u1EB3\u0227\u01E1\xE4\u01DF\u1EA3\xE5\u01FB\u01CE\u0201\u0203\u1EA1\u1EAD\u1EB7\u1E01\u0105\u2C65\u0250',
    },
    {
      base: 'aa',
      letters: '\uA733',
    },
    {
      base: 'ae',
      letters: '\xE6\u01FD\u01E3',
    },
    {
      base: 'ao',
      letters: '\uA735',
    },
    {
      base: 'au',
      letters: '\uA737',
    },
    {
      base: 'av',
      letters: '\uA739\uA73B',
    },
    {
      base: 'ay',
      letters: '\uA73D',
    },
    {
      base: 'b',
      letters: 'b\u24D1\uFF42\u1E03\u1E05\u1E07\u0180\u0183\u0253',
    },
    {
      base: 'c',
      letters: 'c\u24D2\uFF43\u0107\u0109\u010B\u010D\xE7\u1E09\u0188\u023C\uA73F\u2184',
    },
    {
      base: 'd',
      letters: 'd\u24D3\uFF44\u1E0B\u010F\u1E0D\u1E11\u1E13\u1E0F\u0111\u018C\u0256\u0257\uA77A',
    },
    {
      base: 'dz',
      letters: '\u01F3\u01C6',
    },
    {
      base: 'e',
      letters:
        'e\u24D4\uFF45\xE8\xE9\xEA\u1EC1\u1EBF\u1EC5\u1EC3\u1EBD\u0113\u1E15\u1E17\u0115\u0117\xEB\u1EBB\u011B\u0205\u0207\u1EB9\u1EC7\u0229\u1E1D\u0119\u1E19\u1E1B\u0247\u025B\u01DD',
    },
    {
      base: 'f',
      letters: 'f\u24D5\uFF46\u1E1F\u0192\uA77C',
    },
    {
      base: 'g',
      letters: 'g\u24D6\uFF47\u01F5\u011D\u1E21\u011F\u0121\u01E7\u0123\u01E5\u0260\uA7A1\u1D79\uA77F',
    },
    {
      base: 'h',
      letters: 'h\u24D7\uFF48\u0125\u1E23\u1E27\u021F\u1E25\u1E29\u1E2B\u1E96\u0127\u2C68\u2C76\u0265',
    },
    {
      base: 'hv',
      letters: '\u0195',
    },
    {
      base: 'i',
      letters: 'i\u24D8\uFF49\xEC\xED\xEE\u0129\u012B\u012D\xEF\u1E2F\u1EC9\u01D0\u0209\u020B\u1ECB\u012F\u1E2D\u0268\u0131',
    },
    {
      base: 'j',
      letters: 'j\u24D9\uFF4A\u0135\u01F0\u0249',
    },
    {
      base: 'k',
      letters: 'k\u24DA\uFF4B\u1E31\u01E9\u1E33\u0137\u1E35\u0199\u2C6A\uA741\uA743\uA745\uA7A3',
    },
    {
      base: 'l',
      letters: 'l\u24DB\uFF4C\u0140\u013A\u013E\u1E37\u1E39\u013C\u1E3D\u1E3B\u017F\u0142\u019A\u026B\u2C61\uA749\uA781\uA747',
    },
    {
      base: 'lj',
      letters: '\u01C9',
    },
    {
      base: 'm',
      letters: 'm\u24DC\uFF4D\u1E3F\u1E41\u1E43\u0271\u026F',
    },
    {
      base: 'n',
      letters: 'n\u24DD\uFF4E\u01F9\u0144\xF1\u1E45\u0148\u1E47\u0146\u1E4B\u1E49\u019E\u0272\u0149\uA791\uA7A5',
    },
    {
      base: 'nj',
      letters: '\u01CC',
    },
    {
      base: 'o',
      letters:
        'o\u24DE\uFF4F\xF2\xF3\xF4\u1ED3\u1ED1\u1ED7\u1ED5\xF5\u1E4D\u022D\u1E4F\u014D\u1E51\u1E53\u014F\u022F\u0231\xF6\u022B\u1ECF\u0151\u01D2\u020D\u020F\u01A1\u1EDD\u1EDB\u1EE1\u1EDF\u1EE3\u1ECD\u1ED9\u01EB\u01ED\xF8\u01FF\u0254\uA74B\uA74D\u0275',
    },
    {
      base: 'oi',
      letters: '\u01A3',
    },
    {
      base: 'ou',
      letters: '\u0223',
    },
    {
      base: 'oo',
      letters: '\uA74F',
    },
    {
      base: 'p',
      letters: 'p\u24DF\uFF50\u1E55\u1E57\u01A5\u1D7D\uA751\uA753\uA755',
    },
    {
      base: 'q',
      letters: 'q\u24E0\uFF51\u024B\uA757\uA759',
    },
    {
      base: 'r',
      letters: 'r\u24E1\uFF52\u0155\u1E59\u0159\u0211\u0213\u1E5B\u1E5D\u0157\u1E5F\u024D\u027D\uA75B\uA7A7\uA783',
    },
    {
      base: 's',
      letters: 's\u24E2\uFF53\xDF\u015B\u1E65\u015D\u1E61\u0161\u1E67\u1E63\u1E69\u0219\u015F\u023F\uA7A9\uA785\u1E9B',
    },
    {
      base: 't',
      letters: 't\u24E3\uFF54\u1E6B\u1E97\u0165\u1E6D\u021B\u0163\u1E71\u1E6F\u0167\u01AD\u0288\u2C66\uA787',
    },
    {
      base: 'tz',
      letters: '\uA729',
    },
    {
      base: 'u',
      letters:
        'u\u24E4\uFF55\xF9\xFA\xFB\u0169\u1E79\u016B\u1E7B\u016D\xFC\u01DC\u01D8\u01D6\u01DA\u1EE7\u016F\u0171\u01D4\u0215\u0217\u01B0\u1EEB\u1EE9\u1EEF\u1EED\u1EF1\u1EE5\u1E73\u0173\u1E77\u1E75\u0289',
    },
    {
      base: 'v',
      letters: 'v\u24E5\uFF56\u1E7D\u1E7F\u028B\uA75F\u028C',
    },
    {
      base: 'vy',
      letters: '\uA761',
    },
    {
      base: 'w',
      letters: 'w\u24E6\uFF57\u1E81\u1E83\u0175\u1E87\u1E85\u1E98\u1E89\u2C73',
    },
    {
      base: 'x',
      letters: 'x\u24E7\uFF58\u1E8B\u1E8D',
    },
    {
      base: 'y',
      letters: 'y\u24E8\uFF59\u1EF3\xFD\u0177\u1EF9\u0233\u1E8F\xFF\u1EF7\u1E99\u1EF5\u01B4\u024F\u1EFF',
    },
    {
      base: 'z',
      letters: 'z\u24E9\uFF5A\u017A\u1E91\u017C\u017E\u1E93\u1E95\u01B6\u0225\u0240\u2C6C\uA763',
    },
  ]
  var anyDiacritic = new RegExp(
    '[' +
      diacritics
        .map(function (d) {
          return d.letters
        })
        .join('') +
      ']',
    'g',
  )
  var diacriticToBase = {}
  for (var i = 0; i < diacritics.length; i++) {
    var diacritic = diacritics[i]
    for (var j = 0; j < diacritic.letters.length; j++) {
      diacriticToBase[diacritic.letters[j]] = diacritic.base
    }
  }
  var stripDiacritics = function stripDiacritics(str) {
    return str.replace(anyDiacritic, function (match) {
      return diacriticToBase[match]
    })
  }

  var memoizedStripDiacriticsForInput = memoizeOne(stripDiacritics)
  var trimString = function trimString(str) {
    return str.replace(/^\s+|\s+$/g, '')
  }
  var defaultStringify = function defaultStringify(option) {
    return ''.concat(option.label, ' ').concat(option.value)
  }
  var createFilter = function createFilter(config) {
    return function (option, rawInput) {
      // eslint-disable-next-line no-underscore-dangle
      if (option.data.__isNew__) return true
      var _ignoreCase$ignoreAcc = _objectSpread2(
          {
            ignoreCase: true,
            ignoreAccents: true,
            stringify: defaultStringify,
            trim: true,
            matchFrom: 'any',
          },
          config,
        ),
        ignoreCase = _ignoreCase$ignoreAcc.ignoreCase,
        ignoreAccents = _ignoreCase$ignoreAcc.ignoreAccents,
        stringify = _ignoreCase$ignoreAcc.stringify,
        trim = _ignoreCase$ignoreAcc.trim,
        matchFrom = _ignoreCase$ignoreAcc.matchFrom
      var input = trim ? trimString(rawInput) : rawInput
      var candidate = trim ? trimString(stringify(option)) : stringify(option)
      if (ignoreCase) {
        input = input.toLowerCase()
        candidate = candidate.toLowerCase()
      }
      if (ignoreAccents) {
        input = memoizedStripDiacriticsForInput(input)
        candidate = stripDiacritics(candidate)
      }
      return matchFrom === 'start' ? candidate.substr(0, input.length) === input : candidate.indexOf(input) > -1
    }
  }

  var _excluded$6 = ['innerRef']
  function DummyInput(_ref) {
    var innerRef = _ref.innerRef,
      props = _objectWithoutProperties(_ref, _excluded$6)
    // Remove animation props not meant for HTML elements
    var filteredProps = removeProps(props, 'onExited', 'in', 'enter', 'exit', 'appear')
    return jsx(
      'input',
      _extends$1(
        {
          ref: innerRef,
        },
        filteredProps,
        {
          css: /*#__PURE__*/ css$2(
            {
              label: 'dummyInput',
              // get rid of any default styles
              background: 0,
              border: 0,
              // important! this hides the flashing cursor
              caretColor: 'transparent',
              fontSize: 'inherit',
              gridArea: '1 / 1 / 2 / 3',
              outline: 0,
              padding: 0,
              // important! without `width` browsers won't allow focus
              width: 1,
              // remove cursor on desktop
              color: 'transparent',
              // remove cursor on mobile whilst maintaining "scroll into view" behaviour
              left: -100,
              opacity: 0,
              position: 'relative',
              transform: 'scale(.01)',
            },
            '',
            '',
          ),
        },
      ),
    )
  }

  var cancelScroll = function cancelScroll(event) {
    event.preventDefault()
    event.stopPropagation()
  }
  function useScrollCapture(_ref) {
    var isEnabled = _ref.isEnabled,
      onBottomArrive = _ref.onBottomArrive,
      onBottomLeave = _ref.onBottomLeave,
      onTopArrive = _ref.onTopArrive,
      onTopLeave = _ref.onTopLeave
    var isBottom = React$1.useRef(false)
    var isTop = React$1.useRef(false)
    var touchStart = React$1.useRef(0)
    var scrollTarget = React$1.useRef(null)
    var handleEventDelta = React$1.useCallback(
      function (event, delta) {
        if (scrollTarget.current === null) return
        var _scrollTarget$current = scrollTarget.current,
          scrollTop = _scrollTarget$current.scrollTop,
          scrollHeight = _scrollTarget$current.scrollHeight,
          clientHeight = _scrollTarget$current.clientHeight
        var target = scrollTarget.current
        var isDeltaPositive = delta > 0
        var availableScroll = scrollHeight - clientHeight - scrollTop
        var shouldCancelScroll = false

        // reset bottom/top flags
        if (availableScroll > delta && isBottom.current) {
          if (onBottomLeave) onBottomLeave(event)
          isBottom.current = false
        }
        if (isDeltaPositive && isTop.current) {
          if (onTopLeave) onTopLeave(event)
          isTop.current = false
        }

        // bottom limit
        if (isDeltaPositive && delta > availableScroll) {
          if (onBottomArrive && !isBottom.current) {
            onBottomArrive(event)
          }
          target.scrollTop = scrollHeight
          shouldCancelScroll = true
          isBottom.current = true

          // top limit
        } else if (!isDeltaPositive && -delta > scrollTop) {
          if (onTopArrive && !isTop.current) {
            onTopArrive(event)
          }
          target.scrollTop = 0
          shouldCancelScroll = true
          isTop.current = true
        }

        // cancel scroll
        if (shouldCancelScroll) {
          cancelScroll(event)
        }
      },
      [onBottomArrive, onBottomLeave, onTopArrive, onTopLeave],
    )
    var onWheel = React$1.useCallback(
      function (event) {
        handleEventDelta(event, event.deltaY)
      },
      [handleEventDelta],
    )
    var onTouchStart = React$1.useCallback(function (event) {
      // set touch start so we can calculate touchmove delta
      touchStart.current = event.changedTouches[0].clientY
    }, [])
    var onTouchMove = React$1.useCallback(
      function (event) {
        var deltaY = touchStart.current - event.changedTouches[0].clientY
        handleEventDelta(event, deltaY)
      },
      [handleEventDelta],
    )
    var startListening = React$1.useCallback(
      function (el) {
        // bail early if no element is available to attach to
        if (!el) return
        var notPassive = supportsPassiveEvents
          ? {
              passive: false,
            }
          : false
        el.addEventListener('wheel', onWheel, notPassive)
        el.addEventListener('touchstart', onTouchStart, notPassive)
        el.addEventListener('touchmove', onTouchMove, notPassive)
      },
      [onTouchMove, onTouchStart, onWheel],
    )
    var stopListening = React$1.useCallback(
      function (el) {
        // bail early if no element is available to detach from
        if (!el) return
        el.removeEventListener('wheel', onWheel, false)
        el.removeEventListener('touchstart', onTouchStart, false)
        el.removeEventListener('touchmove', onTouchMove, false)
      },
      [onTouchMove, onTouchStart, onWheel],
    )
    React$1.useEffect(
      function () {
        if (!isEnabled) return
        var element = scrollTarget.current
        startListening(element)
        return function () {
          stopListening(element)
        }
      },
      [isEnabled, startListening, stopListening],
    )
    return function (element) {
      scrollTarget.current = element
    }
  }

  var STYLE_KEYS = ['boxSizing', 'height', 'overflow', 'paddingRight', 'position']
  var LOCK_STYLES = {
    boxSizing: 'border-box',
    // account for possible declaration `width: 100%;` on body
    overflow: 'hidden',
    position: 'relative',
    height: '100%',
  }
  function preventTouchMove(e) {
    e.preventDefault()
  }
  function allowTouchMove(e) {
    e.stopPropagation()
  }
  function preventInertiaScroll() {
    var top = this.scrollTop
    var totalScroll = this.scrollHeight
    var currentScroll = top + this.offsetHeight
    if (top === 0) {
      this.scrollTop = 1
    } else if (currentScroll === totalScroll) {
      this.scrollTop = top - 1
    }
  }

  // `ontouchstart` check works on most browsers
  // `maxTouchPoints` works on IE10/11 and Surface
  function isTouchDevice() {
    return 'ontouchstart' in window || navigator.maxTouchPoints
  }
  var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement)
  var activeScrollLocks = 0
  var listenerOptions = {
    capture: false,
    passive: false,
  }
  function useScrollLock(_ref) {
    var isEnabled = _ref.isEnabled,
      _ref$accountForScroll = _ref.accountForScrollbars,
      accountForScrollbars = _ref$accountForScroll === void 0 ? true : _ref$accountForScroll
    var originalStyles = React$1.useRef({})
    var scrollTarget = React$1.useRef(null)
    var addScrollLock = React$1.useCallback(
      function (touchScrollTarget) {
        if (!canUseDOM) return
        var target = document.body
        var targetStyle = target && target.style
        if (accountForScrollbars) {
          // store any styles already applied to the body
          STYLE_KEYS.forEach(function (key) {
            var val = targetStyle && targetStyle[key]
            originalStyles.current[key] = val
          })
        }

        // apply the lock styles and padding if this is the first scroll lock
        if (accountForScrollbars && activeScrollLocks < 1) {
          var currentPadding = parseInt(originalStyles.current.paddingRight, 10) || 0
          var clientWidth = document.body ? document.body.clientWidth : 0
          var adjustedPadding = window.innerWidth - clientWidth + currentPadding || 0
          Object.keys(LOCK_STYLES).forEach(function (key) {
            var val = LOCK_STYLES[key]
            if (targetStyle) {
              targetStyle[key] = val
            }
          })
          if (targetStyle) {
            targetStyle.paddingRight = ''.concat(adjustedPadding, 'px')
          }
        }

        // account for touch devices
        if (target && isTouchDevice()) {
          // Mobile Safari ignores { overflow: hidden } declaration on the body.
          target.addEventListener('touchmove', preventTouchMove, listenerOptions)

          // Allow scroll on provided target
          if (touchScrollTarget) {
            touchScrollTarget.addEventListener('touchstart', preventInertiaScroll, listenerOptions)
            touchScrollTarget.addEventListener('touchmove', allowTouchMove, listenerOptions)
          }
        }

        // increment active scroll locks
        activeScrollLocks += 1
      },
      [accountForScrollbars],
    )
    var removeScrollLock = React$1.useCallback(
      function (touchScrollTarget) {
        if (!canUseDOM) return
        var target = document.body
        var targetStyle = target && target.style

        // safely decrement active scroll locks
        activeScrollLocks = Math.max(activeScrollLocks - 1, 0)

        // reapply original body styles, if any
        if (accountForScrollbars && activeScrollLocks < 1) {
          STYLE_KEYS.forEach(function (key) {
            var val = originalStyles.current[key]
            if (targetStyle) {
              targetStyle[key] = val
            }
          })
        }

        // remove touch listeners
        if (target && isTouchDevice()) {
          target.removeEventListener('touchmove', preventTouchMove, listenerOptions)
          if (touchScrollTarget) {
            touchScrollTarget.removeEventListener('touchstart', preventInertiaScroll, listenerOptions)
            touchScrollTarget.removeEventListener('touchmove', allowTouchMove, listenerOptions)
          }
        }
      },
      [accountForScrollbars],
    )
    React$1.useEffect(
      function () {
        if (!isEnabled) return
        var element = scrollTarget.current
        addScrollLock(element)
        return function () {
          removeScrollLock(element)
        }
      },
      [isEnabled, addScrollLock, removeScrollLock],
    )
    return function (element) {
      scrollTarget.current = element
    }
  }
  var blurSelectInput = function blurSelectInput() {
    return document.activeElement && document.activeElement.blur()
  }
  var _ref2$1 = {
    name: '1kfdb0e',
    styles: 'position:fixed;left:0;bottom:0;right:0;top:0',
  }
  function ScrollManager(_ref) {
    var children = _ref.children,
      lockEnabled = _ref.lockEnabled,
      _ref$captureEnabled = _ref.captureEnabled,
      captureEnabled = _ref$captureEnabled === void 0 ? true : _ref$captureEnabled,
      onBottomArrive = _ref.onBottomArrive,
      onBottomLeave = _ref.onBottomLeave,
      onTopArrive = _ref.onTopArrive,
      onTopLeave = _ref.onTopLeave
    var setScrollCaptureTarget = useScrollCapture({
      isEnabled: captureEnabled,
      onBottomArrive: onBottomArrive,
      onBottomLeave: onBottomLeave,
      onTopArrive: onTopArrive,
      onTopLeave: onTopLeave,
    })
    var setScrollLockTarget = useScrollLock({
      isEnabled: lockEnabled,
    })
    var targetRef = function targetRef(element) {
      setScrollCaptureTarget(element)
      setScrollLockTarget(element)
    }
    return jsx(
      React$1.Fragment,
      null,
      lockEnabled &&
        jsx('div', {
          onClick: blurSelectInput,
          css: _ref2$1,
        }),
      children(targetRef),
    )
  }
  var _ref2 = {
    name: '1a0ro4n-requiredInput',
    styles: 'label:requiredInput;opacity:0;pointer-events:none;position:absolute;bottom:0;left:0;right:0;width:100%',
  }
  var RequiredInput = function RequiredInput(_ref) {
    var name = _ref.name,
      onFocus = _ref.onFocus
    return jsx('input', {
      required: true,
      name: name,
      tabIndex: -1,
      onFocus: onFocus,
      css: _ref2,
      // Prevent `Switching from uncontrolled to controlled` error
      value: '',
      onChange: function onChange() {},
    })
  }

  var formatGroupLabel = function formatGroupLabel(group) {
    return group.label
  }
  var getOptionLabel$1 = function getOptionLabel(option) {
    return option.label
  }
  var getOptionValue$1 = function getOptionValue(option) {
    return option.value
  }
  var isOptionDisabled = function isOptionDisabled(option) {
    return !!option.isDisabled
  }

  var defaultStyles = {
    clearIndicator: clearIndicatorCSS,
    container: containerCSS,
    control: css$1,
    dropdownIndicator: dropdownIndicatorCSS,
    group: groupCSS,
    groupHeading: groupHeadingCSS,
    indicatorsContainer: indicatorsContainerCSS,
    indicatorSeparator: indicatorSeparatorCSS,
    input: inputCSS,
    loadingIndicator: loadingIndicatorCSS,
    loadingMessage: loadingMessageCSS,
    menu: menuCSS,
    menuList: menuListCSS,
    menuPortal: menuPortalCSS,
    multiValue: multiValueCSS,
    multiValueLabel: multiValueLabelCSS,
    multiValueRemove: multiValueRemoveCSS,
    noOptionsMessage: noOptionsMessageCSS,
    option: optionCSS,
    placeholder: placeholderCSS,
    singleValue: css,
    valueContainer: valueContainerCSS,
  }

  var colors = {
    primary: '#2684FF',
    primary75: '#4C9AFF',
    primary50: '#B2D4FF',
    primary25: '#DEEBFF',
    danger: '#DE350B',
    dangerLight: '#FFBDAD',
    neutral0: 'hsl(0, 0%, 100%)',
    neutral5: 'hsl(0, 0%, 95%)',
    neutral10: 'hsl(0, 0%, 90%)',
    neutral20: 'hsl(0, 0%, 80%)',
    neutral30: 'hsl(0, 0%, 70%)',
    neutral40: 'hsl(0, 0%, 60%)',
    neutral50: 'hsl(0, 0%, 50%)',
    neutral60: 'hsl(0, 0%, 40%)',
    neutral70: 'hsl(0, 0%, 30%)',
    neutral80: 'hsl(0, 0%, 20%)',
    neutral90: 'hsl(0, 0%, 10%)',
  }
  var borderRadius = 4
  // Used to calculate consistent margin/padding on elements
  var baseUnit = 4
  // The minimum height of the control
  var controlHeight = 38
  // The amount of space between the control and menu */
  var menuGutter = baseUnit * 2
  var spacing = {
    baseUnit: baseUnit,
    controlHeight: controlHeight,
    menuGutter: menuGutter,
  }
  var defaultTheme = {
    borderRadius: borderRadius,
    colors: colors,
    spacing: spacing,
  }

  var defaultProps$1 = {
    'aria-live': 'polite',
    backspaceRemovesValue: true,
    blurInputOnSelect: isTouchCapable(),
    captureMenuScroll: !isTouchCapable(),
    classNames: {},
    closeMenuOnSelect: true,
    closeMenuOnScroll: false,
    components: {},
    controlShouldRenderValue: true,
    escapeClearsValue: false,
    filterOption: createFilter(),
    formatGroupLabel: formatGroupLabel,
    getOptionLabel: getOptionLabel$1,
    getOptionValue: getOptionValue$1,
    isDisabled: false,
    isLoading: false,
    isMulti: false,
    isRtl: false,
    isSearchable: true,
    isOptionDisabled: isOptionDisabled,
    loadingMessage: function loadingMessage() {
      return 'Loading...'
    },
    maxMenuHeight: 300,
    minMenuHeight: 140,
    menuIsOpen: false,
    menuPlacement: 'bottom',
    menuPosition: 'absolute',
    menuShouldBlockScroll: false,
    menuShouldScrollIntoView: !isMobileDevice(),
    noOptionsMessage: function noOptionsMessage() {
      return 'No options'
    },
    openMenuOnFocus: false,
    openMenuOnClick: true,
    options: [],
    pageSize: 5,
    placeholder: 'Select...',
    screenReaderStatus: function screenReaderStatus(_ref) {
      var count = _ref.count
      return ''.concat(count, ' result').concat(count !== 1 ? 's' : '', ' available')
    },
    styles: {},
    tabIndex: 0,
    tabSelectsValue: true,
    unstyled: false,
  }
  function toCategorizedOption(props, option, selectValue, index) {
    var isDisabled = _isOptionDisabled(props, option, selectValue)
    var isSelected = _isOptionSelected(props, option, selectValue)
    var label = getOptionLabel(props, option)
    var value = getOptionValue(props, option)
    return {
      type: 'option',
      data: option,
      isDisabled: isDisabled,
      isSelected: isSelected,
      label: label,
      value: value,
      index: index,
    }
  }
  function buildCategorizedOptions(props, selectValue) {
    return props.options
      .map(function (groupOrOption, groupOrOptionIndex) {
        if ('options' in groupOrOption) {
          var categorizedOptions = groupOrOption.options
            .map(function (option, optionIndex) {
              return toCategorizedOption(props, option, selectValue, optionIndex)
            })
            .filter(function (categorizedOption) {
              return isFocusable(props, categorizedOption)
            })
          return categorizedOptions.length > 0
            ? {
                type: 'group',
                data: groupOrOption,
                options: categorizedOptions,
                index: groupOrOptionIndex,
              }
            : undefined
        }
        var categorizedOption = toCategorizedOption(props, groupOrOption, selectValue, groupOrOptionIndex)
        return isFocusable(props, categorizedOption) ? categorizedOption : undefined
      })
      .filter(notNullish)
  }
  function buildFocusableOptionsFromCategorizedOptions(categorizedOptions) {
    return categorizedOptions.reduce(function (optionsAccumulator, categorizedOption) {
      if (categorizedOption.type === 'group') {
        optionsAccumulator.push.apply(
          optionsAccumulator,
          _toConsumableArray(
            categorizedOption.options.map(function (option) {
              return option.data
            }),
          ),
        )
      } else {
        optionsAccumulator.push(categorizedOption.data)
      }
      return optionsAccumulator
    }, [])
  }
  function buildFocusableOptions(props, selectValue) {
    return buildFocusableOptionsFromCategorizedOptions(buildCategorizedOptions(props, selectValue))
  }
  function isFocusable(props, categorizedOption) {
    var _props$inputValue = props.inputValue,
      inputValue = _props$inputValue === void 0 ? '' : _props$inputValue
    var data = categorizedOption.data,
      isSelected = categorizedOption.isSelected,
      label = categorizedOption.label,
      value = categorizedOption.value
    return (
      (!shouldHideSelectedOptions(props) || !isSelected) &&
      _filterOption(
        props,
        {
          label: label,
          value: value,
          data: data,
        },
        inputValue,
      )
    )
  }
  function getNextFocusedValue(state, nextSelectValue) {
    var focusedValue = state.focusedValue,
      lastSelectValue = state.selectValue
    var lastFocusedIndex = lastSelectValue.indexOf(focusedValue)
    if (lastFocusedIndex > -1) {
      var nextFocusedIndex = nextSelectValue.indexOf(focusedValue)
      if (nextFocusedIndex > -1) {
        // the focused value is still in the selectValue, return it
        return focusedValue
      } else if (lastFocusedIndex < nextSelectValue.length) {
        // the focusedValue is not present in the next selectValue array by
        // reference, so return the new value at the same index
        return nextSelectValue[lastFocusedIndex]
      }
    }
    return null
  }
  function getNextFocusedOption(state, options) {
    var lastFocusedOption = state.focusedOption
    return lastFocusedOption && options.indexOf(lastFocusedOption) > -1 ? lastFocusedOption : options[0]
  }
  var getOptionLabel = function getOptionLabel(props, data) {
    return props.getOptionLabel(data)
  }
  var getOptionValue = function getOptionValue(props, data) {
    return props.getOptionValue(data)
  }
  function _isOptionDisabled(props, option, selectValue) {
    return typeof props.isOptionDisabled === 'function' ? props.isOptionDisabled(option, selectValue) : false
  }
  function _isOptionSelected(props, option, selectValue) {
    if (selectValue.indexOf(option) > -1) return true
    if (typeof props.isOptionSelected === 'function') {
      return props.isOptionSelected(option, selectValue)
    }
    var candidate = getOptionValue(props, option)
    return selectValue.some(function (i) {
      return getOptionValue(props, i) === candidate
    })
  }
  function _filterOption(props, option, inputValue) {
    return props.filterOption ? props.filterOption(option, inputValue) : true
  }
  var shouldHideSelectedOptions = function shouldHideSelectedOptions(props) {
    var hideSelectedOptions = props.hideSelectedOptions,
      isMulti = props.isMulti
    if (hideSelectedOptions === undefined) return isMulti
    return hideSelectedOptions
  }
  var instanceId = 1
  var Select$1 = /*#__PURE__*/ (function (_Component) {
    _inherits(Select, _Component)
    var _super = _createSuper(Select)
    // Misc. Instance Properties
    // ------------------------------

    // TODO

    // Refs
    // ------------------------------

    // Lifecycle
    // ------------------------------

    function Select(_props) {
      var _this
      _classCallCheck(this, Select)
      _this = _super.call(this, _props)
      _this.state = {
        ariaSelection: null,
        focusedOption: null,
        focusedValue: null,
        inputIsHidden: false,
        isFocused: false,
        selectValue: [],
        clearFocusValueOnUpdate: false,
        prevWasFocused: false,
        inputIsHiddenAfterUpdate: undefined,
        prevProps: undefined,
      }
      _this.blockOptionHover = false
      _this.isComposing = false
      _this.commonProps = void 0
      _this.initialTouchX = 0
      _this.initialTouchY = 0
      _this.instancePrefix = ''
      _this.openAfterFocus = false
      _this.scrollToFocusedOptionOnUpdate = false
      _this.userIsDragging = void 0
      _this.controlRef = null
      _this.getControlRef = function (ref) {
        _this.controlRef = ref
      }
      _this.focusedOptionRef = null
      _this.getFocusedOptionRef = function (ref) {
        _this.focusedOptionRef = ref
      }
      _this.menuListRef = null
      _this.getMenuListRef = function (ref) {
        _this.menuListRef = ref
      }
      _this.inputRef = null
      _this.getInputRef = function (ref) {
        _this.inputRef = ref
      }
      _this.focus = _this.focusInput
      _this.blur = _this.blurInput
      _this.onChange = function (newValue, actionMeta) {
        var _this$props = _this.props,
          onChange = _this$props.onChange,
          name = _this$props.name
        actionMeta.name = name
        _this.ariaOnChange(newValue, actionMeta)
        onChange(newValue, actionMeta)
      }
      _this.setValue = function (newValue, action, option) {
        var _this$props2 = _this.props,
          closeMenuOnSelect = _this$props2.closeMenuOnSelect,
          isMulti = _this$props2.isMulti,
          inputValue = _this$props2.inputValue
        _this.onInputChange('', {
          action: 'set-value',
          prevInputValue: inputValue,
        })
        if (closeMenuOnSelect) {
          _this.setState({
            inputIsHiddenAfterUpdate: !isMulti,
          })
          _this.onMenuClose()
        }
        // when the select value should change, we should reset focusedValue
        _this.setState({
          clearFocusValueOnUpdate: true,
        })
        _this.onChange(newValue, {
          action: action,
          option: option,
        })
      }
      _this.selectOption = function (newValue) {
        var _this$props3 = _this.props,
          blurInputOnSelect = _this$props3.blurInputOnSelect,
          isMulti = _this$props3.isMulti,
          name = _this$props3.name
        var selectValue = _this.state.selectValue
        var deselected = isMulti && _this.isOptionSelected(newValue, selectValue)
        var isDisabled = _this.isOptionDisabled(newValue, selectValue)
        if (deselected) {
          var candidate = _this.getOptionValue(newValue)
          _this.setValue(
            multiValueAsValue(
              selectValue.filter(function (i) {
                return _this.getOptionValue(i) !== candidate
              }),
            ),
            'deselect-option',
            newValue,
          )
        } else if (!isDisabled) {
          // Select option if option is not disabled
          if (isMulti) {
            _this.setValue(multiValueAsValue([].concat(_toConsumableArray(selectValue), [newValue])), 'select-option', newValue)
          } else {
            _this.setValue(singleValueAsValue(newValue), 'select-option')
          }
        } else {
          _this.ariaOnChange(singleValueAsValue(newValue), {
            action: 'select-option',
            option: newValue,
            name: name,
          })
          return
        }
        if (blurInputOnSelect) {
          _this.blurInput()
        }
      }
      _this.removeValue = function (removedValue) {
        var isMulti = _this.props.isMulti
        var selectValue = _this.state.selectValue
        var candidate = _this.getOptionValue(removedValue)
        var newValueArray = selectValue.filter(function (i) {
          return _this.getOptionValue(i) !== candidate
        })
        var newValue = valueTernary(isMulti, newValueArray, newValueArray[0] || null)
        _this.onChange(newValue, {
          action: 'remove-value',
          removedValue: removedValue,
        })
        _this.focusInput()
      }
      _this.clearValue = function () {
        var selectValue = _this.state.selectValue
        _this.onChange(valueTernary(_this.props.isMulti, [], null), {
          action: 'clear',
          removedValues: selectValue,
        })
      }
      _this.popValue = function () {
        var isMulti = _this.props.isMulti
        var selectValue = _this.state.selectValue
        var lastSelectedValue = selectValue[selectValue.length - 1]
        var newValueArray = selectValue.slice(0, selectValue.length - 1)
        var newValue = valueTernary(isMulti, newValueArray, newValueArray[0] || null)
        _this.onChange(newValue, {
          action: 'pop-value',
          removedValue: lastSelectedValue,
        })
      }
      _this.getValue = function () {
        return _this.state.selectValue
      }
      _this.cx = function () {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key]
        }
        return classNames.apply(void 0, [_this.props.classNamePrefix].concat(args))
      }
      _this.getOptionLabel = function (data) {
        return getOptionLabel(_this.props, data)
      }
      _this.getOptionValue = function (data) {
        return getOptionValue(_this.props, data)
      }
      _this.getStyles = function (key, props) {
        var unstyled = _this.props.unstyled
        var base = defaultStyles[key](props, unstyled)
        base.boxSizing = 'border-box'
        var custom = _this.props.styles[key]
        return custom ? custom(base, props) : base
      }
      _this.getClassNames = function (key, props) {
        var _this$props$className, _this$props$className2
        return (_this$props$className = (_this$props$className2 = _this.props.classNames)[key]) === null || _this$props$className === void 0
          ? void 0
          : _this$props$className.call(_this$props$className2, props)
      }
      _this.getElementId = function (element) {
        return ''.concat(_this.instancePrefix, '-').concat(element)
      }
      _this.getComponents = function () {
        return defaultComponents(_this.props)
      }
      _this.buildCategorizedOptions = function () {
        return buildCategorizedOptions(_this.props, _this.state.selectValue)
      }
      _this.getCategorizedOptions = function () {
        return _this.props.menuIsOpen ? _this.buildCategorizedOptions() : []
      }
      _this.buildFocusableOptions = function () {
        return buildFocusableOptionsFromCategorizedOptions(_this.buildCategorizedOptions())
      }
      _this.getFocusableOptions = function () {
        return _this.props.menuIsOpen ? _this.buildFocusableOptions() : []
      }
      _this.ariaOnChange = function (value, actionMeta) {
        _this.setState({
          ariaSelection: _objectSpread2(
            {
              value: value,
            },
            actionMeta,
          ),
        })
      }
      _this.onMenuMouseDown = function (event) {
        if (event.button !== 0) {
          return
        }
        event.stopPropagation()
        event.preventDefault()
        _this.focusInput()
      }
      _this.onMenuMouseMove = function (event) {
        _this.blockOptionHover = false
      }
      _this.onControlMouseDown = function (event) {
        // Event captured by dropdown indicator
        if (event.defaultPrevented) {
          return
        }
        var openMenuOnClick = _this.props.openMenuOnClick
        if (!_this.state.isFocused) {
          if (openMenuOnClick) {
            _this.openAfterFocus = true
          }
          _this.focusInput()
        } else if (!_this.props.menuIsOpen) {
          if (openMenuOnClick) {
            _this.openMenu('first')
          }
        } else {
          if (event.target.tagName !== 'INPUT' && event.target.tagName !== 'TEXTAREA') {
            _this.onMenuClose()
          }
        }
        if (event.target.tagName !== 'INPUT' && event.target.tagName !== 'TEXTAREA') {
          event.preventDefault()
        }
      }
      _this.onDropdownIndicatorMouseDown = function (event) {
        // ignore mouse events that weren't triggered by the primary button
        if (event && event.type === 'mousedown' && event.button !== 0) {
          return
        }
        if (_this.props.isDisabled) return
        var _this$props4 = _this.props,
          isMulti = _this$props4.isMulti,
          menuIsOpen = _this$props4.menuIsOpen
        _this.focusInput()
        if (menuIsOpen) {
          _this.setState({
            inputIsHiddenAfterUpdate: !isMulti,
          })
          _this.onMenuClose()
        } else {
          _this.openMenu('first')
        }
        event.preventDefault()
      }
      _this.onClearIndicatorMouseDown = function (event) {
        // ignore mouse events that weren't triggered by the primary button
        if (event && event.type === 'mousedown' && event.button !== 0) {
          return
        }
        _this.clearValue()
        event.preventDefault()
        _this.openAfterFocus = false
        if (event.type === 'touchend') {
          _this.focusInput()
        } else {
          setTimeout(function () {
            return _this.focusInput()
          })
        }
      }
      _this.onScroll = function (event) {
        if (typeof _this.props.closeMenuOnScroll === 'boolean') {
          if (event.target instanceof HTMLElement && isDocumentElement(event.target)) {
            _this.props.onMenuClose()
          }
        } else if (typeof _this.props.closeMenuOnScroll === 'function') {
          if (_this.props.closeMenuOnScroll(event)) {
            _this.props.onMenuClose()
          }
        }
      }
      _this.onCompositionStart = function () {
        _this.isComposing = true
      }
      _this.onCompositionEnd = function () {
        _this.isComposing = false
      }
      _this.onTouchStart = function (_ref2) {
        var touches = _ref2.touches
        var touch = touches && touches.item(0)
        if (!touch) {
          return
        }
        _this.initialTouchX = touch.clientX
        _this.initialTouchY = touch.clientY
        _this.userIsDragging = false
      }
      _this.onTouchMove = function (_ref3) {
        var touches = _ref3.touches
        var touch = touches && touches.item(0)
        if (!touch) {
          return
        }
        var deltaX = Math.abs(touch.clientX - _this.initialTouchX)
        var deltaY = Math.abs(touch.clientY - _this.initialTouchY)
        var moveThreshold = 5
        _this.userIsDragging = deltaX > moveThreshold || deltaY > moveThreshold
      }
      _this.onTouchEnd = function (event) {
        if (_this.userIsDragging) return

        // close the menu if the user taps outside
        // we're checking on event.target here instead of event.currentTarget, because we want to assert information
        // on events on child elements, not the document (which we've attached this handler to).
        if (_this.controlRef && !_this.controlRef.contains(event.target) && _this.menuListRef && !_this.menuListRef.contains(event.target)) {
          _this.blurInput()
        }

        // reset move vars
        _this.initialTouchX = 0
        _this.initialTouchY = 0
      }
      _this.onControlTouchEnd = function (event) {
        if (_this.userIsDragging) return
        _this.onControlMouseDown(event)
      }
      _this.onClearIndicatorTouchEnd = function (event) {
        if (_this.userIsDragging) return
        _this.onClearIndicatorMouseDown(event)
      }
      _this.onDropdownIndicatorTouchEnd = function (event) {
        if (_this.userIsDragging) return
        _this.onDropdownIndicatorMouseDown(event)
      }
      _this.handleInputChange = function (event) {
        var prevInputValue = _this.props.inputValue
        var inputValue = event.currentTarget.value
        _this.setState({
          inputIsHiddenAfterUpdate: false,
        })
        _this.onInputChange(inputValue, {
          action: 'input-change',
          prevInputValue: prevInputValue,
        })
        if (!_this.props.menuIsOpen) {
          _this.onMenuOpen()
        }
      }
      _this.onInputFocus = function (event) {
        if (_this.props.onFocus) {
          _this.props.onFocus(event)
        }
        _this.setState({
          inputIsHiddenAfterUpdate: false,
          isFocused: true,
        })
        if (_this.openAfterFocus || _this.props.openMenuOnFocus) {
          _this.openMenu('first')
        }
        _this.openAfterFocus = false
      }
      _this.onInputBlur = function (event) {
        var prevInputValue = _this.props.inputValue
        if (_this.menuListRef && _this.menuListRef.contains(document.activeElement)) {
          _this.inputRef.focus()
          return
        }
        if (_this.props.onBlur) {
          _this.props.onBlur(event)
        }
        _this.onInputChange('', {
          action: 'input-blur',
          prevInputValue: prevInputValue,
        })
        _this.onMenuClose()
        _this.setState({
          focusedValue: null,
          isFocused: false,
        })
      }
      _this.onOptionHover = function (focusedOption) {
        if (_this.blockOptionHover || _this.state.focusedOption === focusedOption) {
          return
        }
        _this.setState({
          focusedOption: focusedOption,
        })
      }
      _this.shouldHideSelectedOptions = function () {
        return shouldHideSelectedOptions(_this.props)
      }
      _this.onValueInputFocus = function (e) {
        e.preventDefault()
        e.stopPropagation()
        _this.focus()
      }
      _this.onKeyDown = function (event) {
        var _this$props5 = _this.props,
          isMulti = _this$props5.isMulti,
          backspaceRemovesValue = _this$props5.backspaceRemovesValue,
          escapeClearsValue = _this$props5.escapeClearsValue,
          inputValue = _this$props5.inputValue,
          isClearable = _this$props5.isClearable,
          isDisabled = _this$props5.isDisabled,
          menuIsOpen = _this$props5.menuIsOpen,
          onKeyDown = _this$props5.onKeyDown,
          tabSelectsValue = _this$props5.tabSelectsValue,
          openMenuOnFocus = _this$props5.openMenuOnFocus
        var _this$state = _this.state,
          focusedOption = _this$state.focusedOption,
          focusedValue = _this$state.focusedValue,
          selectValue = _this$state.selectValue
        if (isDisabled) return
        if (typeof onKeyDown === 'function') {
          onKeyDown(event)
          if (event.defaultPrevented) {
            return
          }
        }

        // Block option hover events when the user has just pressed a key
        _this.blockOptionHover = true
        switch (event.key) {
          case 'ArrowLeft':
            if (!isMulti || inputValue) return
            _this.focusValue('previous')
            break
          case 'ArrowRight':
            if (!isMulti || inputValue) return
            _this.focusValue('next')
            break
          case 'Delete':
          case 'Backspace':
            if (inputValue) return
            if (focusedValue) {
              _this.removeValue(focusedValue)
            } else {
              if (!backspaceRemovesValue) return
              if (isMulti) {
                _this.popValue()
              } else if (isClearable) {
                _this.clearValue()
              }
            }
            break
          case 'Tab':
            if (_this.isComposing) return
            if (
              event.shiftKey ||
              !menuIsOpen ||
              !tabSelectsValue ||
              !focusedOption ||
              // don't capture the event if the menu opens on focus and the focused
              // option is already selected; it breaks the flow of navigation
              (openMenuOnFocus && _this.isOptionSelected(focusedOption, selectValue))
            ) {
              return
            }
            _this.selectOption(focusedOption)
            break
          case 'Enter':
            if (event.keyCode === 229) {
              // ignore the keydown event from an Input Method Editor(IME)
              // ref. https://www.w3.org/TR/uievents/#determine-keydown-keyup-keyCode
              break
            }
            if (menuIsOpen) {
              if (!focusedOption) return
              if (_this.isComposing) return
              _this.selectOption(focusedOption)
              break
            }
            return
          case 'Escape':
            if (menuIsOpen) {
              _this.setState({
                inputIsHiddenAfterUpdate: false,
              })
              _this.onInputChange('', {
                action: 'menu-close',
                prevInputValue: inputValue,
              })
              _this.onMenuClose()
            } else if (isClearable && escapeClearsValue) {
              _this.clearValue()
            }
            break
          case ' ':
            // space
            if (inputValue) {
              return
            }
            if (!menuIsOpen) {
              _this.openMenu('first')
              break
            }
            if (!focusedOption) return
            _this.selectOption(focusedOption)
            break
          case 'ArrowUp':
            if (menuIsOpen) {
              _this.focusOption('up')
            } else {
              _this.openMenu('last')
            }
            break
          case 'ArrowDown':
            if (menuIsOpen) {
              _this.focusOption('down')
            } else {
              _this.openMenu('first')
            }
            break
          case 'PageUp':
            if (!menuIsOpen) return
            _this.focusOption('pageup')
            break
          case 'PageDown':
            if (!menuIsOpen) return
            _this.focusOption('pagedown')
            break
          case 'Home':
            if (!menuIsOpen) return
            _this.focusOption('first')
            break
          case 'End':
            if (!menuIsOpen) return
            _this.focusOption('last')
            break
          default:
            return
        }
        event.preventDefault()
      }
      _this.instancePrefix = 'react-select-' + (_this.props.instanceId || ++instanceId)
      _this.state.selectValue = cleanValue(_props.value)

      // Set focusedOption if menuIsOpen is set on init (e.g. defaultMenuIsOpen)
      if (_props.menuIsOpen && _this.state.selectValue.length) {
        var focusableOptions = _this.buildFocusableOptions()
        var optionIndex = focusableOptions.indexOf(_this.state.selectValue[0])
        _this.state.focusedOption = focusableOptions[optionIndex]
      }
      return _this
    }
    _createClass(
      Select,
      [
        {
          key: 'componentDidMount',
          value: function componentDidMount() {
            this.startListeningComposition()
            this.startListeningToTouch()
            if (this.props.closeMenuOnScroll && document && document.addEventListener) {
              // Listen to all scroll events, and filter them out inside of 'onScroll'
              document.addEventListener('scroll', this.onScroll, true)
            }
            if (this.props.autoFocus) {
              this.focusInput()
            }

            // Scroll focusedOption into view if menuIsOpen is set on mount (e.g. defaultMenuIsOpen)
            if (this.props.menuIsOpen && this.state.focusedOption && this.menuListRef && this.focusedOptionRef) {
              scrollIntoView(this.menuListRef, this.focusedOptionRef)
            }
          },
        },
        {
          key: 'componentDidUpdate',
          value: function componentDidUpdate(prevProps) {
            var _this$props6 = this.props,
              isDisabled = _this$props6.isDisabled,
              menuIsOpen = _this$props6.menuIsOpen
            var isFocused = this.state.isFocused
            if (
              // ensure focus is restored correctly when the control becomes enabled
              (isFocused && !isDisabled && prevProps.isDisabled) ||
              // ensure focus is on the Input when the menu opens
              (isFocused && menuIsOpen && !prevProps.menuIsOpen)
            ) {
              this.focusInput()
            }
            if (isFocused && isDisabled && !prevProps.isDisabled) {
              // ensure select state gets blurred in case Select is programmatically disabled while focused
              // eslint-disable-next-line react/no-did-update-set-state
              this.setState(
                {
                  isFocused: false,
                },
                this.onMenuClose,
              )
            } else if (!isFocused && !isDisabled && prevProps.isDisabled && this.inputRef === document.activeElement) {
              // ensure select state gets focused in case Select is programatically re-enabled while focused (Firefox)
              // eslint-disable-next-line react/no-did-update-set-state
              this.setState({
                isFocused: true,
              })
            }

            // scroll the focused option into view if necessary
            if (this.menuListRef && this.focusedOptionRef && this.scrollToFocusedOptionOnUpdate) {
              scrollIntoView(this.menuListRef, this.focusedOptionRef)
              this.scrollToFocusedOptionOnUpdate = false
            }
          },
        },
        {
          key: 'componentWillUnmount',
          value: function componentWillUnmount() {
            this.stopListeningComposition()
            this.stopListeningToTouch()
            document.removeEventListener('scroll', this.onScroll, true)
          },

          // ==============================
          // Consumer Handlers
          // ==============================
        },
        {
          key: 'onMenuOpen',
          value: function onMenuOpen() {
            this.props.onMenuOpen()
          },
        },
        {
          key: 'onMenuClose',
          value: function onMenuClose() {
            this.onInputChange('', {
              action: 'menu-close',
              prevInputValue: this.props.inputValue,
            })
            this.props.onMenuClose()
          },
        },
        {
          key: 'onInputChange',
          value: function onInputChange(newValue, actionMeta) {
            this.props.onInputChange(newValue, actionMeta)
          },

          // ==============================
          // Methods
          // ==============================
        },
        {
          key: 'focusInput',
          value: function focusInput() {
            if (!this.inputRef) return
            this.inputRef.focus()
          },
        },
        {
          key: 'blurInput',
          value: function blurInput() {
            if (!this.inputRef) return
            this.inputRef.blur()
          },

          // aliased for consumers
        },
        {
          key: 'openMenu',
          value: function openMenu(focusOption) {
            var _this2 = this
            var _this$state2 = this.state,
              selectValue = _this$state2.selectValue,
              isFocused = _this$state2.isFocused
            var focusableOptions = this.buildFocusableOptions()
            var openAtIndex = focusOption === 'first' ? 0 : focusableOptions.length - 1
            if (!this.props.isMulti) {
              var selectedIndex = focusableOptions.indexOf(selectValue[0])
              if (selectedIndex > -1) {
                openAtIndex = selectedIndex
              }
            }

            // only scroll if the menu isn't already open
            this.scrollToFocusedOptionOnUpdate = !(isFocused && this.menuListRef)
            this.setState(
              {
                inputIsHiddenAfterUpdate: false,
                focusedValue: null,
                focusedOption: focusableOptions[openAtIndex],
              },
              function () {
                return _this2.onMenuOpen()
              },
            )
          },
        },
        {
          key: 'focusValue',
          value: function focusValue(direction) {
            var _this$state3 = this.state,
              selectValue = _this$state3.selectValue,
              focusedValue = _this$state3.focusedValue

            // Only multiselects support value focusing
            if (!this.props.isMulti) return
            this.setState({
              focusedOption: null,
            })
            var focusedIndex = selectValue.indexOf(focusedValue)
            if (!focusedValue) {
              focusedIndex = -1
            }
            var lastIndex = selectValue.length - 1
            var nextFocus = -1
            if (!selectValue.length) return
            switch (direction) {
              case 'previous':
                if (focusedIndex === 0) {
                  // don't cycle from the start to the end
                  nextFocus = 0
                } else if (focusedIndex === -1) {
                  // if nothing is focused, focus the last value first
                  nextFocus = lastIndex
                } else {
                  nextFocus = focusedIndex - 1
                }
                break
              case 'next':
                if (focusedIndex > -1 && focusedIndex < lastIndex) {
                  nextFocus = focusedIndex + 1
                }
                break
            }
            this.setState({
              inputIsHidden: nextFocus !== -1,
              focusedValue: selectValue[nextFocus],
            })
          },
        },
        {
          key: 'focusOption',
          value: function focusOption() {
            var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'first'
            var pageSize = this.props.pageSize
            var focusedOption = this.state.focusedOption
            var options = this.getFocusableOptions()
            if (!options.length) return
            var nextFocus = 0 // handles 'first'
            var focusedIndex = options.indexOf(focusedOption)
            if (!focusedOption) {
              focusedIndex = -1
            }
            if (direction === 'up') {
              nextFocus = focusedIndex > 0 ? focusedIndex - 1 : options.length - 1
            } else if (direction === 'down') {
              nextFocus = (focusedIndex + 1) % options.length
            } else if (direction === 'pageup') {
              nextFocus = focusedIndex - pageSize
              if (nextFocus < 0) nextFocus = 0
            } else if (direction === 'pagedown') {
              nextFocus = focusedIndex + pageSize
              if (nextFocus > options.length - 1) nextFocus = options.length - 1
            } else if (direction === 'last') {
              nextFocus = options.length - 1
            }
            this.scrollToFocusedOptionOnUpdate = true
            this.setState({
              focusedOption: options[nextFocus],
              focusedValue: null,
            })
          },
        },
        {
          key: 'getTheme',
          value:
            // ==============================
            // Getters
            // ==============================

            function getTheme() {
              // Use the default theme if there are no customisations.
              if (!this.props.theme) {
                return defaultTheme
              }
              // If the theme prop is a function, assume the function
              // knows how to merge the passed-in default theme with
              // its own modifications.
              if (typeof this.props.theme === 'function') {
                return this.props.theme(defaultTheme)
              }
              // Otherwise, if a plain theme object was passed in,
              // overlay it with the default theme.
              return _objectSpread2(_objectSpread2({}, defaultTheme), this.props.theme)
            },
        },
        {
          key: 'getCommonProps',
          value: function getCommonProps() {
            var clearValue = this.clearValue,
              cx = this.cx,
              getStyles = this.getStyles,
              getClassNames = this.getClassNames,
              getValue = this.getValue,
              selectOption = this.selectOption,
              setValue = this.setValue,
              props = this.props
            var isMulti = props.isMulti,
              isRtl = props.isRtl,
              options = props.options
            var hasValue = this.hasValue()
            return {
              clearValue: clearValue,
              cx: cx,
              getStyles: getStyles,
              getClassNames: getClassNames,
              getValue: getValue,
              hasValue: hasValue,
              isMulti: isMulti,
              isRtl: isRtl,
              options: options,
              selectOption: selectOption,
              selectProps: props,
              setValue: setValue,
              theme: this.getTheme(),
            }
          },
        },
        {
          key: 'hasValue',
          value: function hasValue() {
            var selectValue = this.state.selectValue
            return selectValue.length > 0
          },
        },
        {
          key: 'hasOptions',
          value: function hasOptions() {
            return !!this.getFocusableOptions().length
          },
        },
        {
          key: 'isClearable',
          value: function isClearable() {
            var _this$props7 = this.props,
              isClearable = _this$props7.isClearable,
              isMulti = _this$props7.isMulti

            // single select, by default, IS NOT clearable
            // multi select, by default, IS clearable
            if (isClearable === undefined) return isMulti
            return isClearable
          },
        },
        {
          key: 'isOptionDisabled',
          value: function isOptionDisabled(option, selectValue) {
            return _isOptionDisabled(this.props, option, selectValue)
          },
        },
        {
          key: 'isOptionSelected',
          value: function isOptionSelected(option, selectValue) {
            return _isOptionSelected(this.props, option, selectValue)
          },
        },
        {
          key: 'filterOption',
          value: function filterOption(option, inputValue) {
            return _filterOption(this.props, option, inputValue)
          },
        },
        {
          key: 'formatOptionLabel',
          value: function formatOptionLabel(data, context) {
            if (typeof this.props.formatOptionLabel === 'function') {
              var _inputValue = this.props.inputValue
              var _selectValue = this.state.selectValue
              return this.props.formatOptionLabel(data, {
                context: context,
                inputValue: _inputValue,
                selectValue: _selectValue,
              })
            } else {
              return this.getOptionLabel(data)
            }
          },
        },
        {
          key: 'formatGroupLabel',
          value: function formatGroupLabel(data) {
            return this.props.formatGroupLabel(data)
          },

          // ==============================
          // Mouse Handlers
          // ==============================
        },
        {
          key: 'startListeningComposition',
          value:
            // ==============================
            // Composition Handlers
            // ==============================

            function startListeningComposition() {
              if (document && document.addEventListener) {
                document.addEventListener('compositionstart', this.onCompositionStart, false)
                document.addEventListener('compositionend', this.onCompositionEnd, false)
              }
            },
        },
        {
          key: 'stopListeningComposition',
          value: function stopListeningComposition() {
            if (document && document.removeEventListener) {
              document.removeEventListener('compositionstart', this.onCompositionStart)
              document.removeEventListener('compositionend', this.onCompositionEnd)
            }
          },
        },
        {
          key: 'startListeningToTouch',
          value:
            // ==============================
            // Touch Handlers
            // ==============================

            function startListeningToTouch() {
              if (document && document.addEventListener) {
                document.addEventListener('touchstart', this.onTouchStart, false)
                document.addEventListener('touchmove', this.onTouchMove, false)
                document.addEventListener('touchend', this.onTouchEnd, false)
              }
            },
        },
        {
          key: 'stopListeningToTouch',
          value: function stopListeningToTouch() {
            if (document && document.removeEventListener) {
              document.removeEventListener('touchstart', this.onTouchStart)
              document.removeEventListener('touchmove', this.onTouchMove)
              document.removeEventListener('touchend', this.onTouchEnd)
            }
          },
        },
        {
          key: 'renderInput',
          value:
            // ==============================
            // Renderers
            // ==============================
            function renderInput() {
              var _this$props8 = this.props,
                isDisabled = _this$props8.isDisabled,
                isSearchable = _this$props8.isSearchable,
                inputId = _this$props8.inputId,
                inputValue = _this$props8.inputValue,
                tabIndex = _this$props8.tabIndex,
                form = _this$props8.form,
                menuIsOpen = _this$props8.menuIsOpen,
                required = _this$props8.required
              var _this$getComponents = this.getComponents(),
                Input = _this$getComponents.Input
              var _this$state4 = this.state,
                inputIsHidden = _this$state4.inputIsHidden,
                ariaSelection = _this$state4.ariaSelection
              var commonProps = this.commonProps
              var id = inputId || this.getElementId('input')

              // aria attributes makes the JSX "noisy", separated for clarity
              var ariaAttributes = _objectSpread2(
                _objectSpread2(
                  _objectSpread2(
                    {
                      'aria-autocomplete': 'list',
                      'aria-expanded': menuIsOpen,
                      'aria-haspopup': true,
                      'aria-errormessage': this.props['aria-errormessage'],
                      'aria-invalid': this.props['aria-invalid'],
                      'aria-label': this.props['aria-label'],
                      'aria-labelledby': this.props['aria-labelledby'],
                      'aria-required': required,
                      role: 'combobox',
                    },
                    menuIsOpen && {
                      'aria-controls': this.getElementId('listbox'),
                      'aria-owns': this.getElementId('listbox'),
                    },
                  ),
                  !isSearchable && {
                    'aria-readonly': true,
                  },
                ),
                this.hasValue()
                  ? (ariaSelection === null || ariaSelection === void 0 ? void 0 : ariaSelection.action) === 'initial-input-focus' && {
                      'aria-describedby': this.getElementId('live-region'),
                    }
                  : {
                      'aria-describedby': this.getElementId('placeholder'),
                    },
              )
              if (!isSearchable) {
                // use a dummy input to maintain focus/blur functionality
                return /*#__PURE__*/ React__namespace.createElement(
                  DummyInput,
                  _extends$1(
                    {
                      id: id,
                      innerRef: this.getInputRef,
                      onBlur: this.onInputBlur,
                      onChange: noop$1,
                      onFocus: this.onInputFocus,
                      disabled: isDisabled,
                      tabIndex: tabIndex,
                      inputMode: 'none',
                      form: form,
                      value: '',
                    },
                    ariaAttributes,
                  ),
                )
              }
              return /*#__PURE__*/ React__namespace.createElement(
                Input,
                _extends$1(
                  {},
                  commonProps,
                  {
                    autoCapitalize: 'none',
                    autoComplete: 'off',
                    autoCorrect: 'off',
                    id: id,
                    innerRef: this.getInputRef,
                    isDisabled: isDisabled,
                    isHidden: inputIsHidden,
                    onBlur: this.onInputBlur,
                    onChange: this.handleInputChange,
                    onFocus: this.onInputFocus,
                    spellCheck: 'false',
                    tabIndex: tabIndex,
                    form: form,
                    type: 'text',
                    value: inputValue,
                  },
                  ariaAttributes,
                ),
              )
            },
        },
        {
          key: 'renderPlaceholderOrValue',
          value: function renderPlaceholderOrValue() {
            var _this3 = this
            var _this$getComponents2 = this.getComponents(),
              MultiValue = _this$getComponents2.MultiValue,
              MultiValueContainer = _this$getComponents2.MultiValueContainer,
              MultiValueLabel = _this$getComponents2.MultiValueLabel,
              MultiValueRemove = _this$getComponents2.MultiValueRemove,
              SingleValue = _this$getComponents2.SingleValue,
              Placeholder = _this$getComponents2.Placeholder
            var commonProps = this.commonProps
            var _this$props9 = this.props,
              controlShouldRenderValue = _this$props9.controlShouldRenderValue,
              isDisabled = _this$props9.isDisabled,
              isMulti = _this$props9.isMulti,
              inputValue = _this$props9.inputValue,
              placeholder = _this$props9.placeholder
            var _this$state5 = this.state,
              selectValue = _this$state5.selectValue,
              focusedValue = _this$state5.focusedValue,
              isFocused = _this$state5.isFocused
            if (!this.hasValue() || !controlShouldRenderValue) {
              return inputValue
                ? null
                : /*#__PURE__*/ React__namespace.createElement(
                    Placeholder,
                    _extends$1({}, commonProps, {
                      key: 'placeholder',
                      isDisabled: isDisabled,
                      isFocused: isFocused,
                      innerProps: {
                        id: this.getElementId('placeholder'),
                      },
                    }),
                    placeholder,
                  )
            }
            if (isMulti) {
              return selectValue.map(function (opt, index) {
                var isOptionFocused = opt === focusedValue
                var key = ''.concat(_this3.getOptionLabel(opt), '-').concat(_this3.getOptionValue(opt))
                return /*#__PURE__*/ React__namespace.createElement(
                  MultiValue,
                  _extends$1({}, commonProps, {
                    components: {
                      Container: MultiValueContainer,
                      Label: MultiValueLabel,
                      Remove: MultiValueRemove,
                    },
                    isFocused: isOptionFocused,
                    isDisabled: isDisabled,
                    key: key,
                    index: index,
                    removeProps: {
                      onClick: function onClick() {
                        return _this3.removeValue(opt)
                      },
                      onTouchEnd: function onTouchEnd() {
                        return _this3.removeValue(opt)
                      },
                      onMouseDown: function onMouseDown(e) {
                        e.preventDefault()
                      },
                    },
                    data: opt,
                  }),
                  _this3.formatOptionLabel(opt, 'value'),
                )
              })
            }
            if (inputValue) {
              return null
            }
            var singleValue = selectValue[0]
            return /*#__PURE__*/ React__namespace.createElement(
              SingleValue,
              _extends$1({}, commonProps, {
                data: singleValue,
                isDisabled: isDisabled,
              }),
              this.formatOptionLabel(singleValue, 'value'),
            )
          },
        },
        {
          key: 'renderClearIndicator',
          value: function renderClearIndicator() {
            var _this$getComponents3 = this.getComponents(),
              ClearIndicator = _this$getComponents3.ClearIndicator
            var commonProps = this.commonProps
            var _this$props10 = this.props,
              isDisabled = _this$props10.isDisabled,
              isLoading = _this$props10.isLoading
            var isFocused = this.state.isFocused
            if (!this.isClearable() || !ClearIndicator || isDisabled || !this.hasValue() || isLoading) {
              return null
            }
            var innerProps = {
              onMouseDown: this.onClearIndicatorMouseDown,
              onTouchEnd: this.onClearIndicatorTouchEnd,
              'aria-hidden': 'true',
            }
            return /*#__PURE__*/ React__namespace.createElement(
              ClearIndicator,
              _extends$1({}, commonProps, {
                innerProps: innerProps,
                isFocused: isFocused,
              }),
            )
          },
        },
        {
          key: 'renderLoadingIndicator',
          value: function renderLoadingIndicator() {
            var _this$getComponents4 = this.getComponents(),
              LoadingIndicator = _this$getComponents4.LoadingIndicator
            var commonProps = this.commonProps
            var _this$props11 = this.props,
              isDisabled = _this$props11.isDisabled,
              isLoading = _this$props11.isLoading
            var isFocused = this.state.isFocused
            if (!LoadingIndicator || !isLoading) return null
            var innerProps = {
              'aria-hidden': 'true',
            }
            return /*#__PURE__*/ React__namespace.createElement(
              LoadingIndicator,
              _extends$1({}, commonProps, {
                innerProps: innerProps,
                isDisabled: isDisabled,
                isFocused: isFocused,
              }),
            )
          },
        },
        {
          key: 'renderIndicatorSeparator',
          value: function renderIndicatorSeparator() {
            var _this$getComponents5 = this.getComponents(),
              DropdownIndicator = _this$getComponents5.DropdownIndicator,
              IndicatorSeparator = _this$getComponents5.IndicatorSeparator

            // separator doesn't make sense without the dropdown indicator
            if (!DropdownIndicator || !IndicatorSeparator) return null
            var commonProps = this.commonProps
            var isDisabled = this.props.isDisabled
            var isFocused = this.state.isFocused
            return /*#__PURE__*/ React__namespace.createElement(
              IndicatorSeparator,
              _extends$1({}, commonProps, {
                isDisabled: isDisabled,
                isFocused: isFocused,
              }),
            )
          },
        },
        {
          key: 'renderDropdownIndicator',
          value: function renderDropdownIndicator() {
            var _this$getComponents6 = this.getComponents(),
              DropdownIndicator = _this$getComponents6.DropdownIndicator
            if (!DropdownIndicator) return null
            var commonProps = this.commonProps
            var isDisabled = this.props.isDisabled
            var isFocused = this.state.isFocused
            var innerProps = {
              onMouseDown: this.onDropdownIndicatorMouseDown,
              onTouchEnd: this.onDropdownIndicatorTouchEnd,
              'aria-hidden': 'true',
            }
            return /*#__PURE__*/ React__namespace.createElement(
              DropdownIndicator,
              _extends$1({}, commonProps, {
                innerProps: innerProps,
                isDisabled: isDisabled,
                isFocused: isFocused,
              }),
            )
          },
        },
        {
          key: 'renderMenu',
          value: function renderMenu() {
            var _this4 = this
            var _this$getComponents7 = this.getComponents(),
              Group = _this$getComponents7.Group,
              GroupHeading = _this$getComponents7.GroupHeading,
              Menu = _this$getComponents7.Menu,
              MenuList = _this$getComponents7.MenuList,
              MenuPortal = _this$getComponents7.MenuPortal,
              LoadingMessage = _this$getComponents7.LoadingMessage,
              NoOptionsMessage = _this$getComponents7.NoOptionsMessage,
              Option = _this$getComponents7.Option
            var commonProps = this.commonProps
            var focusedOption = this.state.focusedOption
            var _this$props12 = this.props,
              captureMenuScroll = _this$props12.captureMenuScroll,
              inputValue = _this$props12.inputValue,
              isLoading = _this$props12.isLoading,
              loadingMessage = _this$props12.loadingMessage,
              minMenuHeight = _this$props12.minMenuHeight,
              maxMenuHeight = _this$props12.maxMenuHeight,
              menuIsOpen = _this$props12.menuIsOpen,
              menuPlacement = _this$props12.menuPlacement,
              menuPosition = _this$props12.menuPosition,
              menuPortalTarget = _this$props12.menuPortalTarget,
              menuShouldBlockScroll = _this$props12.menuShouldBlockScroll,
              menuShouldScrollIntoView = _this$props12.menuShouldScrollIntoView,
              noOptionsMessage = _this$props12.noOptionsMessage,
              onMenuScrollToTop = _this$props12.onMenuScrollToTop,
              onMenuScrollToBottom = _this$props12.onMenuScrollToBottom
            if (!menuIsOpen) return null

            // TODO: Internal Option Type here
            var render = function render(props, id) {
              var type = props.type,
                data = props.data,
                isDisabled = props.isDisabled,
                isSelected = props.isSelected,
                label = props.label,
                value = props.value
              var isFocused = focusedOption === data
              var onHover = isDisabled
                ? undefined
                : function () {
                    return _this4.onOptionHover(data)
                  }
              var onSelect = isDisabled
                ? undefined
                : function () {
                    return _this4.selectOption(data)
                  }
              var optionId = ''.concat(_this4.getElementId('option'), '-').concat(id)
              var innerProps = {
                id: optionId,
                onClick: onSelect,
                onMouseMove: onHover,
                onMouseOver: onHover,
                tabIndex: -1,
              }
              return /*#__PURE__*/ React__namespace.createElement(
                Option,
                _extends$1({}, commonProps, {
                  innerProps: innerProps,
                  data: data,
                  isDisabled: isDisabled,
                  isSelected: isSelected,
                  key: optionId,
                  label: label,
                  type: type,
                  value: value,
                  isFocused: isFocused,
                  innerRef: isFocused ? _this4.getFocusedOptionRef : undefined,
                }),
                _this4.formatOptionLabel(props.data, 'menu'),
              )
            }
            var menuUI
            if (this.hasOptions()) {
              menuUI = this.getCategorizedOptions().map(function (item) {
                if (item.type === 'group') {
                  var _data = item.data,
                    options = item.options,
                    groupIndex = item.index
                  var groupId = ''.concat(_this4.getElementId('group'), '-').concat(groupIndex)
                  var headingId = ''.concat(groupId, '-heading')
                  return /*#__PURE__*/ React__namespace.createElement(
                    Group,
                    _extends$1({}, commonProps, {
                      key: groupId,
                      data: _data,
                      options: options,
                      Heading: GroupHeading,
                      headingProps: {
                        id: headingId,
                        data: item.data,
                      },
                      label: _this4.formatGroupLabel(item.data),
                    }),
                    item.options.map(function (option) {
                      return render(option, ''.concat(groupIndex, '-').concat(option.index))
                    }),
                  )
                } else if (item.type === 'option') {
                  return render(item, ''.concat(item.index))
                }
              })
            } else if (isLoading) {
              var message = loadingMessage({
                inputValue: inputValue,
              })
              if (message === null) return null
              menuUI = /*#__PURE__*/ React__namespace.createElement(LoadingMessage, commonProps, message)
            } else {
              var _message = noOptionsMessage({
                inputValue: inputValue,
              })
              if (_message === null) return null
              menuUI = /*#__PURE__*/ React__namespace.createElement(NoOptionsMessage, commonProps, _message)
            }
            var menuPlacementProps = {
              minMenuHeight: minMenuHeight,
              maxMenuHeight: maxMenuHeight,
              menuPlacement: menuPlacement,
              menuPosition: menuPosition,
              menuShouldScrollIntoView: menuShouldScrollIntoView,
            }
            var menuElement = /*#__PURE__*/ React__namespace.createElement(MenuPlacer, _extends$1({}, commonProps, menuPlacementProps), function (_ref4) {
              var ref = _ref4.ref,
                _ref4$placerProps = _ref4.placerProps,
                placement = _ref4$placerProps.placement,
                maxHeight = _ref4$placerProps.maxHeight
              return /*#__PURE__*/ React__namespace.createElement(
                Menu,
                _extends$1({}, commonProps, menuPlacementProps, {
                  innerRef: ref,
                  innerProps: {
                    onMouseDown: _this4.onMenuMouseDown,
                    onMouseMove: _this4.onMenuMouseMove,
                    id: _this4.getElementId('listbox'),
                  },
                  isLoading: isLoading,
                  placement: placement,
                }),
                /*#__PURE__*/ React__namespace.createElement(
                  ScrollManager,
                  {
                    captureEnabled: captureMenuScroll,
                    onTopArrive: onMenuScrollToTop,
                    onBottomArrive: onMenuScrollToBottom,
                    lockEnabled: menuShouldBlockScroll,
                  },
                  function (scrollTargetRef) {
                    return /*#__PURE__*/ React__namespace.createElement(
                      MenuList,
                      _extends$1({}, commonProps, {
                        innerRef: function innerRef(instance) {
                          _this4.getMenuListRef(instance)
                          scrollTargetRef(instance)
                        },
                        isLoading: isLoading,
                        maxHeight: maxHeight,
                        focusedOption: focusedOption,
                      }),
                      menuUI,
                    )
                  },
                ),
              )
            })

            // positioning behaviour is almost identical for portalled and fixed,
            // so we use the same component. the actual portalling logic is forked
            // within the component based on `menuPosition`
            return menuPortalTarget || menuPosition === 'fixed'
              ? /*#__PURE__*/ React__namespace.createElement(
                  MenuPortal,
                  _extends$1({}, commonProps, {
                    appendTo: menuPortalTarget,
                    controlElement: this.controlRef,
                    menuPlacement: menuPlacement,
                    menuPosition: menuPosition,
                  }),
                  menuElement,
                )
              : menuElement
          },
        },
        {
          key: 'renderFormField',
          value: function renderFormField() {
            var _this5 = this
            var _this$props13 = this.props,
              delimiter = _this$props13.delimiter,
              isDisabled = _this$props13.isDisabled,
              isMulti = _this$props13.isMulti,
              name = _this$props13.name,
              required = _this$props13.required
            var selectValue = this.state.selectValue
            if (!name || isDisabled) return
            if (required && !this.hasValue()) {
              return /*#__PURE__*/ React__namespace.createElement(RequiredInput, {
                name: name,
                onFocus: this.onValueInputFocus,
              })
            }
            if (isMulti) {
              if (delimiter) {
                var value = selectValue
                  .map(function (opt) {
                    return _this5.getOptionValue(opt)
                  })
                  .join(delimiter)
                return /*#__PURE__*/ React__namespace.createElement('input', {
                  name: name,
                  type: 'hidden',
                  value: value,
                })
              } else {
                var input =
                  selectValue.length > 0
                    ? selectValue.map(function (opt, i) {
                        return /*#__PURE__*/ React__namespace.createElement('input', {
                          key: 'i-'.concat(i),
                          name: name,
                          type: 'hidden',
                          value: _this5.getOptionValue(opt),
                        })
                      })
                    : /*#__PURE__*/ React__namespace.createElement('input', {
                        name: name,
                        type: 'hidden',
                        value: '',
                      })
                return /*#__PURE__*/ React__namespace.createElement('div', null, input)
              }
            } else {
              var _value = selectValue[0] ? this.getOptionValue(selectValue[0]) : ''
              return /*#__PURE__*/ React__namespace.createElement('input', {
                name: name,
                type: 'hidden',
                value: _value,
              })
            }
          },
        },
        {
          key: 'renderLiveRegion',
          value: function renderLiveRegion() {
            var commonProps = this.commonProps
            var _this$state6 = this.state,
              ariaSelection = _this$state6.ariaSelection,
              focusedOption = _this$state6.focusedOption,
              focusedValue = _this$state6.focusedValue,
              isFocused = _this$state6.isFocused,
              selectValue = _this$state6.selectValue
            var focusableOptions = this.getFocusableOptions()
            return /*#__PURE__*/ React__namespace.createElement(
              LiveRegion,
              _extends$1({}, commonProps, {
                id: this.getElementId('live-region'),
                ariaSelection: ariaSelection,
                focusedOption: focusedOption,
                focusedValue: focusedValue,
                isFocused: isFocused,
                selectValue: selectValue,
                focusableOptions: focusableOptions,
              }),
            )
          },
        },
        {
          key: 'render',
          value: function render() {
            var _this$getComponents8 = this.getComponents(),
              Control = _this$getComponents8.Control,
              IndicatorsContainer = _this$getComponents8.IndicatorsContainer,
              SelectContainer = _this$getComponents8.SelectContainer,
              ValueContainer = _this$getComponents8.ValueContainer
            var _this$props14 = this.props,
              className = _this$props14.className,
              id = _this$props14.id,
              isDisabled = _this$props14.isDisabled,
              menuIsOpen = _this$props14.menuIsOpen
            var isFocused = this.state.isFocused
            var commonProps = (this.commonProps = this.getCommonProps())
            return /*#__PURE__*/ React__namespace.createElement(
              SelectContainer,
              _extends$1({}, commonProps, {
                className: className,
                innerProps: {
                  id: id,
                  onKeyDown: this.onKeyDown,
                },
                isDisabled: isDisabled,
                isFocused: isFocused,
              }),
              this.renderLiveRegion(),
              /*#__PURE__*/ React__namespace.createElement(
                Control,
                _extends$1({}, commonProps, {
                  innerRef: this.getControlRef,
                  innerProps: {
                    onMouseDown: this.onControlMouseDown,
                    onTouchEnd: this.onControlTouchEnd,
                  },
                  isDisabled: isDisabled,
                  isFocused: isFocused,
                  menuIsOpen: menuIsOpen,
                }),
                /*#__PURE__*/ React__namespace.createElement(
                  ValueContainer,
                  _extends$1({}, commonProps, {
                    isDisabled: isDisabled,
                  }),
                  this.renderPlaceholderOrValue(),
                  this.renderInput(),
                ),
                /*#__PURE__*/ React__namespace.createElement(
                  IndicatorsContainer,
                  _extends$1({}, commonProps, {
                    isDisabled: isDisabled,
                  }),
                  this.renderClearIndicator(),
                  this.renderLoadingIndicator(),
                  this.renderIndicatorSeparator(),
                  this.renderDropdownIndicator(),
                ),
              ),
              this.renderMenu(),
              this.renderFormField(),
            )
          },
        },
      ],
      [
        {
          key: 'getDerivedStateFromProps',
          value: function getDerivedStateFromProps(props, state) {
            var prevProps = state.prevProps,
              clearFocusValueOnUpdate = state.clearFocusValueOnUpdate,
              inputIsHiddenAfterUpdate = state.inputIsHiddenAfterUpdate,
              ariaSelection = state.ariaSelection,
              isFocused = state.isFocused,
              prevWasFocused = state.prevWasFocused
            var options = props.options,
              value = props.value,
              menuIsOpen = props.menuIsOpen,
              inputValue = props.inputValue,
              isMulti = props.isMulti
            var selectValue = cleanValue(value)
            var newMenuOptionsState = {}
            if (prevProps && (value !== prevProps.value || options !== prevProps.options || menuIsOpen !== prevProps.menuIsOpen || inputValue !== prevProps.inputValue)) {
              var focusableOptions = menuIsOpen ? buildFocusableOptions(props, selectValue) : []
              var focusedValue = clearFocusValueOnUpdate ? getNextFocusedValue(state, selectValue) : null
              var focusedOption = getNextFocusedOption(state, focusableOptions)
              newMenuOptionsState = {
                selectValue: selectValue,
                focusedOption: focusedOption,
                focusedValue: focusedValue,
                clearFocusValueOnUpdate: false,
              }
            }
            // some updates should toggle the state of the input visibility
            var newInputIsHiddenState =
              inputIsHiddenAfterUpdate != null && props !== prevProps
                ? {
                    inputIsHidden: inputIsHiddenAfterUpdate,
                    inputIsHiddenAfterUpdate: undefined,
                  }
                : {}
            var newAriaSelection = ariaSelection
            var hasKeptFocus = isFocused && prevWasFocused
            if (isFocused && !hasKeptFocus) {
              // If `value` or `defaultValue` props are not empty then announce them
              // when the Select is initially focused
              newAriaSelection = {
                value: valueTernary(isMulti, selectValue, selectValue[0] || null),
                options: selectValue,
                action: 'initial-input-focus',
              }
              hasKeptFocus = !prevWasFocused
            }

            // If the 'initial-input-focus' action has been set already
            // then reset the ariaSelection to null
            if ((ariaSelection === null || ariaSelection === void 0 ? void 0 : ariaSelection.action) === 'initial-input-focus') {
              newAriaSelection = null
            }
            return _objectSpread2(
              _objectSpread2(_objectSpread2({}, newMenuOptionsState), newInputIsHiddenState),
              {},
              {
                prevProps: props,
                ariaSelection: newAriaSelection,
                prevWasFocused: hasKeptFocus,
              },
            )
          },
        },
      ],
    )
    return Select
  })(React$1.Component)
  Select$1.defaultProps = defaultProps$1

  var StateManagedSelect = /*#__PURE__*/ React$1.forwardRef(function (props, ref) {
    var baseSelectProps = useStateManager(props)
    return /*#__PURE__*/ React__namespace.createElement(
      Select$1,
      _extends$1(
        {
          ref: ref,
        },
        baseSelectProps,
      ),
    )
  })

  var Select = StateManagedSelect

  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype)
    subClass.prototype.constructor = subClass
    _setPrototypeOf(subClass, superClass)
  }

  var config = {
    disabled: false,
  }

  var TransitionGroupContext = React__default['default'].createContext(null)

  var forceReflow = function forceReflow(node) {
    return node.scrollTop
  }

  var UNMOUNTED = 'unmounted'
  var EXITED = 'exited'
  var ENTERING = 'entering'
  var ENTERED = 'entered'
  var EXITING = 'exiting'
  /**
   * The Transition component lets you describe a transition from one component
   * state to another _over time_ with a simple declarative API. Most commonly
   * it's used to animate the mounting and unmounting of a component, but can also
   * be used to describe in-place transition states as well.
   *
   * ---
   *
   * **Note**: `Transition` is a platform-agnostic base component. If you're using
   * transitions in CSS, you'll probably want to use
   * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)
   * instead. It inherits all the features of `Transition`, but contains
   * additional features necessary to play nice with CSS transitions (hence the
   * name of the component).
   *
   * ---
   *
   * By default the `Transition` component does not alter the behavior of the
   * component it renders, it only tracks "enter" and "exit" states for the
   * components. It's up to you to give meaning and effect to those states. For
   * example we can add styles to a component when it enters or exits:
   *
   * ```jsx
   * import { Transition } from 'react-transition-group';
   *
   * const duration = 300;
   *
   * const defaultStyle = {
   *   transition: `opacity ${duration}ms ease-in-out`,
   *   opacity: 0,
   * }
   *
   * const transitionStyles = {
   *   entering: { opacity: 1 },
   *   entered:  { opacity: 1 },
   *   exiting:  { opacity: 0 },
   *   exited:  { opacity: 0 },
   * };
   *
   * const Fade = ({ in: inProp }) => (
   *   <Transition in={inProp} timeout={duration}>
   *     {state => (
   *       <div style={{
   *         ...defaultStyle,
   *         ...transitionStyles[state]
   *       }}>
   *         I'm a fade Transition!
   *       </div>
   *     )}
   *   </Transition>
   * );
   * ```
   *
   * There are 4 main states a Transition can be in:
   *  - `'entering'`
   *  - `'entered'`
   *  - `'exiting'`
   *  - `'exited'`
   *
   * Transition state is toggled via the `in` prop. When `true` the component
   * begins the "Enter" stage. During this stage, the component will shift from
   * its current transition state, to `'entering'` for the duration of the
   * transition and then to the `'entered'` stage once it's complete. Let's take
   * the following example (we'll use the
   * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):
   *
   * ```jsx
   * function App() {
   *   const [inProp, setInProp] = useState(false);
   *   return (
   *     <div>
   *       <Transition in={inProp} timeout={500}>
   *         {state => (
   *           // ...
   *         )}
   *       </Transition>
   *       <button onClick={() => setInProp(true)}>
   *         Click to Enter
   *       </button>
   *     </div>
   *   );
   * }
   * ```
   *
   * When the button is clicked the component will shift to the `'entering'` state
   * and stay there for 500ms (the value of `timeout`) before it finally switches
   * to `'entered'`.
   *
   * When `in` is `false` the same thing happens except the state moves from
   * `'exiting'` to `'exited'`.
   */

  var Transition = /*#__PURE__*/ (function (_React$Component) {
    _inheritsLoose(Transition, _React$Component)

    function Transition(props, context) {
      var _this

      _this = _React$Component.call(this, props, context) || this
      var parentGroup = context // In the context of a TransitionGroup all enters are really appears

      var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear
      var initialStatus
      _this.appearStatus = null

      if (props.in) {
        if (appear) {
          initialStatus = EXITED
          _this.appearStatus = ENTERING
        } else {
          initialStatus = ENTERED
        }
      } else {
        if (props.unmountOnExit || props.mountOnEnter) {
          initialStatus = UNMOUNTED
        } else {
          initialStatus = EXITED
        }
      }

      _this.state = {
        status: initialStatus,
      }
      _this.nextCallback = null
      return _this
    }

    Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {
      var nextIn = _ref.in

      if (nextIn && prevState.status === UNMOUNTED) {
        return {
          status: EXITED,
        }
      }

      return null
    } // getSnapshotBeforeUpdate(prevProps) {
    //   let nextStatus = null
    //   if (prevProps !== this.props) {
    //     const { status } = this.state
    //     if (this.props.in) {
    //       if (status !== ENTERING && status !== ENTERED) {
    //         nextStatus = ENTERING
    //       }
    //     } else {
    //       if (status === ENTERING || status === ENTERED) {
    //         nextStatus = EXITING
    //       }
    //     }
    //   }
    //   return { nextStatus }
    // }

    var _proto = Transition.prototype

    _proto.componentDidMount = function componentDidMount() {
      this.updateStatus(true, this.appearStatus)
    }

    _proto.componentDidUpdate = function componentDidUpdate(prevProps) {
      var nextStatus = null

      if (prevProps !== this.props) {
        var status = this.state.status

        if (this.props.in) {
          if (status !== ENTERING && status !== ENTERED) {
            nextStatus = ENTERING
          }
        } else {
          if (status === ENTERING || status === ENTERED) {
            nextStatus = EXITING
          }
        }
      }

      this.updateStatus(false, nextStatus)
    }

    _proto.componentWillUnmount = function componentWillUnmount() {
      this.cancelNextCallback()
    }

    _proto.getTimeouts = function getTimeouts() {
      var timeout = this.props.timeout
      var exit, enter, appear
      exit = enter = appear = timeout

      if (timeout != null && typeof timeout !== 'number') {
        exit = timeout.exit
        enter = timeout.enter // TODO: remove fallback for next major

        appear = timeout.appear !== undefined ? timeout.appear : enter
      }

      return {
        exit: exit,
        enter: enter,
        appear: appear,
      }
    }

    _proto.updateStatus = function updateStatus(mounting, nextStatus) {
      if (mounting === void 0) {
        mounting = false
      }

      if (nextStatus !== null) {
        // nextStatus will always be ENTERING or EXITING.
        this.cancelNextCallback()

        if (nextStatus === ENTERING) {
          if (this.props.unmountOnExit || this.props.mountOnEnter) {
            var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this) // https://github.com/reactjs/react-transition-group/pull/749
            // With unmountOnExit or mountOnEnter, the enter animation should happen at the transition between `exited` and `entering`.
            // To make the animation happen,  we have to separate each rendering and avoid being processed as batched.

            if (node) forceReflow(node)
          }

          this.performEnter(mounting)
        } else {
          this.performExit()
        }
      } else if (this.props.unmountOnExit && this.state.status === EXITED) {
        this.setState({
          status: UNMOUNTED,
        })
      }
    }

    _proto.performEnter = function performEnter(mounting) {
      var _this2 = this

      var enter = this.props.enter
      var appearing = this.context ? this.context.isMounting : mounting

      var _ref2 = this.props.nodeRef ? [appearing] : [ReactDOM.findDOMNode(this), appearing],
        maybeNode = _ref2[0],
        maybeAppearing = _ref2[1]

      var timeouts = this.getTimeouts()
      var enterTimeout = appearing ? timeouts.appear : timeouts.enter // no enter animation skip right to ENTERED
      // if we are mounting and running this it means appear _must_ be set

      if ((!mounting && !enter) || config.disabled) {
        this.safeSetState(
          {
            status: ENTERED,
          },
          function () {
            _this2.props.onEntered(maybeNode)
          },
        )
        return
      }

      this.props.onEnter(maybeNode, maybeAppearing)
      this.safeSetState(
        {
          status: ENTERING,
        },
        function () {
          _this2.props.onEntering(maybeNode, maybeAppearing)

          _this2.onTransitionEnd(enterTimeout, function () {
            _this2.safeSetState(
              {
                status: ENTERED,
              },
              function () {
                _this2.props.onEntered(maybeNode, maybeAppearing)
              },
            )
          })
        },
      )
    }

    _proto.performExit = function performExit() {
      var _this3 = this

      var exit = this.props.exit
      var timeouts = this.getTimeouts()
      var maybeNode = this.props.nodeRef ? undefined : ReactDOM.findDOMNode(this) // no exit animation skip right to EXITED

      if (!exit || config.disabled) {
        this.safeSetState(
          {
            status: EXITED,
          },
          function () {
            _this3.props.onExited(maybeNode)
          },
        )
        return
      }

      this.props.onExit(maybeNode)
      this.safeSetState(
        {
          status: EXITING,
        },
        function () {
          _this3.props.onExiting(maybeNode)

          _this3.onTransitionEnd(timeouts.exit, function () {
            _this3.safeSetState(
              {
                status: EXITED,
              },
              function () {
                _this3.props.onExited(maybeNode)
              },
            )
          })
        },
      )
    }

    _proto.cancelNextCallback = function cancelNextCallback() {
      if (this.nextCallback !== null) {
        this.nextCallback.cancel()
        this.nextCallback = null
      }
    }

    _proto.safeSetState = function safeSetState(nextState, callback) {
      // This shouldn't be necessary, but there are weird race conditions with
      // setState callbacks and unmounting in testing, so always make sure that
      // we can cancel any pending setState callbacks after we unmount.
      callback = this.setNextCallback(callback)
      this.setState(nextState, callback)
    }

    _proto.setNextCallback = function setNextCallback(callback) {
      var _this4 = this

      var active = true

      this.nextCallback = function (event) {
        if (active) {
          active = false
          _this4.nextCallback = null
          callback(event)
        }
      }

      this.nextCallback.cancel = function () {
        active = false
      }

      return this.nextCallback
    }

    _proto.onTransitionEnd = function onTransitionEnd(timeout, handler) {
      this.setNextCallback(handler)
      var node = this.props.nodeRef ? this.props.nodeRef.current : ReactDOM.findDOMNode(this)
      var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener

      if (!node || doesNotHaveTimeoutOrListener) {
        setTimeout(this.nextCallback, 0)
        return
      }

      if (this.props.addEndListener) {
        var _ref3 = this.props.nodeRef ? [this.nextCallback] : [node, this.nextCallback],
          maybeNode = _ref3[0],
          maybeNextCallback = _ref3[1]

        this.props.addEndListener(maybeNode, maybeNextCallback)
      }

      if (timeout != null) {
        setTimeout(this.nextCallback, timeout)
      }
    }

    _proto.render = function render() {
      var status = this.state.status

      if (status === UNMOUNTED) {
        return null
      }

      var _this$props = this.props,
        children = _this$props.children
      _this$props.in
      _this$props.mountOnEnter
      _this$props.unmountOnExit
      _this$props.appear
      _this$props.enter
      _this$props.exit
      _this$props.timeout
      _this$props.addEndListener
      _this$props.onEnter
      _this$props.onEntering
      _this$props.onEntered
      _this$props.onExit
      _this$props.onExiting
      _this$props.onExited
      _this$props.nodeRef
      var childProps = _objectWithoutPropertiesLoose(_this$props, [
        'children',
        'in',
        'mountOnEnter',
        'unmountOnExit',
        'appear',
        'enter',
        'exit',
        'timeout',
        'addEndListener',
        'onEnter',
        'onEntering',
        'onEntered',
        'onExit',
        'onExiting',
        'onExited',
        'nodeRef',
      ])

      return (
        /*#__PURE__*/
        // allows for nested Transitions
        React__default['default'].createElement(
          TransitionGroupContext.Provider,
          {
            value: null,
          },
          typeof children === 'function' ? children(status, childProps) : React__default['default'].cloneElement(React__default['default'].Children.only(children), childProps),
        )
      )
    }

    return Transition
  })(React__default['default'].Component)

  Transition.contextType = TransitionGroupContext
  Transition.propTypes = {} // Name the function so it is clearer in the documentation

  function noop() {}

  Transition.defaultProps = {
    in: false,
    mountOnEnter: false,
    unmountOnExit: false,
    appear: false,
    enter: true,
    exit: true,
    onEnter: noop,
    onEntering: noop,
    onEntered: noop,
    onExit: noop,
    onExiting: noop,
    onExited: noop,
  }
  Transition.UNMOUNTED = UNMOUNTED
  Transition.EXITED = EXITED
  Transition.ENTERING = ENTERING
  Transition.ENTERED = ENTERED
  Transition.EXITING = EXITING
  var Transition$1 = Transition

  /**
   * Given `this.props.children`, return an object mapping key to child.
   *
   * @param {*} children `this.props.children`
   * @return {object} Mapping of key to child
   */

  function getChildMapping(children, mapFn) {
    var mapper = function mapper(child) {
      return mapFn && React$1.isValidElement(child) ? mapFn(child) : child
    }

    var result = Object.create(null)
    if (children)
      React$1.Children.map(children, function (c) {
        return c
      }).forEach(function (child) {
        // run the map function here instead so that the key is the computed one
        result[child.key] = mapper(child)
      })
    return result
  }
  /**
   * When you're adding or removing children some may be added or removed in the
   * same render pass. We want to show *both* since we want to simultaneously
   * animate elements in and out. This function takes a previous set of keys
   * and a new set of keys and merges them with its best guess of the correct
   * ordering. In the future we may expose some of the utilities in
   * ReactMultiChild to make this easy, but for now React itself does not
   * directly have this concept of the union of prevChildren and nextChildren
   * so we implement it here.
   *
   * @param {object} prev prev children as returned from
   * `ReactTransitionChildMapping.getChildMapping()`.
   * @param {object} next next children as returned from
   * `ReactTransitionChildMapping.getChildMapping()`.
   * @return {object} a key set that contains all keys in `prev` and all keys
   * in `next` in a reasonable order.
   */

  function mergeChildMappings(prev, next) {
    prev = prev || {}
    next = next || {}

    function getValueForKey(key) {
      return key in next ? next[key] : prev[key]
    } // For each key of `next`, the list of keys to insert before that key in
    // the combined list

    var nextKeysPending = Object.create(null)
    var pendingKeys = []

    for (var prevKey in prev) {
      if (prevKey in next) {
        if (pendingKeys.length) {
          nextKeysPending[prevKey] = pendingKeys
          pendingKeys = []
        }
      } else {
        pendingKeys.push(prevKey)
      }
    }

    var i
    var childMapping = {}

    for (var nextKey in next) {
      if (nextKeysPending[nextKey]) {
        for (i = 0; i < nextKeysPending[nextKey].length; i++) {
          var pendingNextKey = nextKeysPending[nextKey][i]
          childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey)
        }
      }

      childMapping[nextKey] = getValueForKey(nextKey)
    } // Finally, add the keys which didn't appear before any key in `next`

    for (i = 0; i < pendingKeys.length; i++) {
      childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i])
    }

    return childMapping
  }

  function getProp(child, prop, props) {
    return props[prop] != null ? props[prop] : child.props[prop]
  }

  function getInitialChildMapping(props, onExited) {
    return getChildMapping(props.children, function (child) {
      return React$1.cloneElement(child, {
        onExited: onExited.bind(null, child),
        in: true,
        appear: getProp(child, 'appear', props),
        enter: getProp(child, 'enter', props),
        exit: getProp(child, 'exit', props),
      })
    })
  }
  function getNextChildMapping(nextProps, prevChildMapping, onExited) {
    var nextChildMapping = getChildMapping(nextProps.children)
    var children = mergeChildMappings(prevChildMapping, nextChildMapping)
    Object.keys(children).forEach(function (key) {
      var child = children[key]
      if (!React$1.isValidElement(child)) return
      var hasPrev = key in prevChildMapping
      var hasNext = key in nextChildMapping
      var prevChild = prevChildMapping[key]
      var isLeaving = React$1.isValidElement(prevChild) && !prevChild.props.in // item is new (entering)

      if (hasNext && (!hasPrev || isLeaving)) {
        // console.log('entering', key)
        children[key] = React$1.cloneElement(child, {
          onExited: onExited.bind(null, child),
          in: true,
          exit: getProp(child, 'exit', nextProps),
          enter: getProp(child, 'enter', nextProps),
        })
      } else if (!hasNext && hasPrev && !isLeaving) {
        // item is old (exiting)
        // console.log('leaving', key)
        children[key] = React$1.cloneElement(child, {
          in: false,
        })
      } else if (hasNext && hasPrev && React$1.isValidElement(prevChild)) {
        // item hasn't changed transition states
        // copy over the last transition props;
        // console.log('unchanged', key)
        children[key] = React$1.cloneElement(child, {
          onExited: onExited.bind(null, child),
          in: prevChild.props.in,
          exit: getProp(child, 'exit', nextProps),
          enter: getProp(child, 'enter', nextProps),
        })
      }
    })
    return children
  }

  var values =
    Object.values ||
    function (obj) {
      return Object.keys(obj).map(function (k) {
        return obj[k]
      })
    }

  var defaultProps = {
    component: 'div',
    childFactory: function childFactory(child) {
      return child
    },
  }
  /**
   * The `<TransitionGroup>` component manages a set of transition components
   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition
   * components, `<TransitionGroup>` is a state machine for managing the mounting
   * and unmounting of components over time.
   *
   * Consider the example below. As items are removed or added to the TodoList the
   * `in` prop is toggled automatically by the `<TransitionGroup>`.
   *
   * Note that `<TransitionGroup>`  does not define any animation behavior!
   * Exactly _how_ a list item animates is up to the individual transition
   * component. This means you can mix and match animations across different list
   * items.
   */

  var TransitionGroup = /*#__PURE__*/ (function (_React$Component) {
    _inheritsLoose(TransitionGroup, _React$Component)

    function TransitionGroup(props, context) {
      var _this

      _this = _React$Component.call(this, props, context) || this

      var handleExited = _this.handleExited.bind(_assertThisInitialized(_this)) // Initial children should all be entering, dependent on appear

      _this.state = {
        contextValue: {
          isMounting: true,
        },
        handleExited: handleExited,
        firstRender: true,
      }
      return _this
    }

    var _proto = TransitionGroup.prototype

    _proto.componentDidMount = function componentDidMount() {
      this.mounted = true
      this.setState({
        contextValue: {
          isMounting: false,
        },
      })
    }

    _proto.componentWillUnmount = function componentWillUnmount() {
      this.mounted = false
    }

    TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {
      var prevChildMapping = _ref.children,
        handleExited = _ref.handleExited,
        firstRender = _ref.firstRender
      return {
        children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),
        firstRender: false,
      }
    } // node is `undefined` when user provided `nodeRef` prop

    _proto.handleExited = function handleExited(child, node) {
      var currentChildMapping = getChildMapping(this.props.children)
      if (child.key in currentChildMapping) return

      if (child.props.onExited) {
        child.props.onExited(node)
      }

      if (this.mounted) {
        this.setState(function (state) {
          var children = _extends$1({}, state.children)

          delete children[child.key]
          return {
            children: children,
          }
        })
      }
    }

    _proto.render = function render() {
      var _this$props = this.props,
        Component = _this$props.component,
        childFactory = _this$props.childFactory,
        props = _objectWithoutPropertiesLoose(_this$props, ['component', 'childFactory'])

      var contextValue = this.state.contextValue
      var children = values(this.state.children).map(childFactory)
      delete props.appear
      delete props.enter
      delete props.exit

      if (Component === null) {
        return /*#__PURE__*/ React__default['default'].createElement(
          TransitionGroupContext.Provider,
          {
            value: contextValue,
          },
          children,
        )
      }

      return /*#__PURE__*/ React__default['default'].createElement(
        TransitionGroupContext.Provider,
        {
          value: contextValue,
        },
        /*#__PURE__*/ React__default['default'].createElement(Component, props, children),
      )
    }

    return TransitionGroup
  })(React__default['default'].Component)

  TransitionGroup.propTypes = {}
  TransitionGroup.defaultProps = defaultProps
  var TransitionGroup$1 = TransitionGroup

  var _excluded$4 = ['in', 'onExited', 'appear', 'enter', 'exit']
  // strip transition props off before spreading onto select component
  var AnimatedInput = function AnimatedInput(WrappedComponent) {
    return function (_ref) {
      _ref.in
      _ref.onExited
      _ref.appear
      _ref.enter
      _ref.exit
      var props = _objectWithoutProperties(_ref, _excluded$4)
      return /*#__PURE__*/ React__namespace.createElement(WrappedComponent, props)
    }
  }

  var _excluded$3 = ['component', 'duration', 'in', 'onExited']
  var Fade = function Fade(_ref) {
    var Tag = _ref.component,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? 1 : _ref$duration,
      inProp = _ref.in
    _ref.onExited
    var props = _objectWithoutProperties(_ref, _excluded$3)
    var nodeRef = React$1.useRef(null)
    var transition = {
      entering: {
        opacity: 0,
      },
      entered: {
        opacity: 1,
        transition: 'opacity '.concat(duration, 'ms'),
      },
      exiting: {
        opacity: 0,
      },
      exited: {
        opacity: 0,
      },
    }
    return /*#__PURE__*/ React__namespace.createElement(
      Transition$1,
      {
        mountOnEnter: true,
        unmountOnExit: true,
        in: inProp,
        timeout: duration,
        nodeRef: nodeRef,
      },
      function (state) {
        var innerProps = {
          style: _objectSpread2({}, transition[state]),
          ref: nodeRef,
        }
        return /*#__PURE__*/ React__namespace.createElement(
          Tag,
          _extends$1(
            {
              innerProps: innerProps,
            },
            props,
          ),
        )
      },
    )
  }

  // ==============================
  // Collapse Transition
  // ==============================

  var collapseDuration = 260
  // wrap each MultiValue with a collapse transition; decreases width until
  // finally removing from DOM
  var Collapse = function Collapse(_ref2) {
    var children = _ref2.children,
      _in = _ref2.in,
      _onExited = _ref2.onExited
    var ref = React$1.useRef(null)
    var _useState = React$1.useState('auto'),
      _useState2 = _slicedToArray(_useState, 2),
      width = _useState2[0],
      setWidth = _useState2[1]
    React$1.useEffect(function () {
      var el = ref.current
      if (!el) return

      /*
	      Here we're invoking requestAnimationFrame with a callback invoking our
	      call to getBoundingClientRect and setState in order to resolve an edge case
	      around portalling. Certain portalling solutions briefly remove children from the DOM
	      before appending them to the target node. This is to avoid us trying to call getBoundingClientrect
	      while the Select component is in this state.
	    */
      // cannot use `offsetWidth` because it is rounded
      var rafId = window.requestAnimationFrame(function () {
        return setWidth(el.getBoundingClientRect().width)
      })
      return function () {
        return window.cancelAnimationFrame(rafId)
      }
    }, [])
    var getStyleFromStatus = function getStyleFromStatus(status) {
      switch (status) {
        default:
          return {
            width: width,
          }
        case 'exiting':
          return {
            width: 0,
            transition: 'width '.concat(collapseDuration, 'ms ease-out'),
          }
        case 'exited':
          return {
            width: 0,
          }
      }
    }
    return /*#__PURE__*/ React__namespace.createElement(
      Transition$1,
      {
        enter: false,
        mountOnEnter: true,
        unmountOnExit: true,
        in: _in,
        onExited: function onExited() {
          var el = ref.current
          if (!el) return
          _onExited === null || _onExited === void 0 ? void 0 : _onExited(el)
        },
        timeout: collapseDuration,
        nodeRef: ref,
      },
      function (status) {
        return /*#__PURE__*/ React__namespace.createElement(
          'div',
          {
            ref: ref,
            style: _objectSpread2(
              {
                overflow: 'hidden',
                whiteSpace: 'nowrap',
              },
              getStyleFromStatus(status),
            ),
          },
          children,
        )
      },
    )
  }

  var _excluded$2 = ['in', 'onExited']
  // strip transition props off before spreading onto actual component

  var AnimatedMultiValue = function AnimatedMultiValue(WrappedComponent) {
    return function (_ref) {
      var inProp = _ref.in,
        onExited = _ref.onExited,
        props = _objectWithoutProperties(_ref, _excluded$2)
      return /*#__PURE__*/ React__namespace.createElement(
        Collapse,
        {
          in: inProp,
          onExited: onExited,
        },
        /*#__PURE__*/ React__namespace.createElement(
          WrappedComponent,
          _extends$1(
            {
              cropWithEllipsis: inProp,
            },
            props,
          ),
        ),
      )
    }
  }

  // fade in when last multi-value removed, otherwise instant
  var AnimatedPlaceholder = function AnimatedPlaceholder(WrappedComponent) {
    return function (props) {
      return /*#__PURE__*/ React__namespace.createElement(
        Fade,
        _extends$1(
          {
            component: WrappedComponent,
            duration: props.isMulti ? collapseDuration : 1,
          },
          props,
        ),
      )
    }
  }

  // instant fade; all transition-group children must be transitions

  var AnimatedSingleValue = function AnimatedSingleValue(WrappedComponent) {
    return function (props) {
      return /*#__PURE__*/ React__namespace.createElement(
        Fade,
        _extends$1(
          {
            component: WrappedComponent,
          },
          props,
        ),
      )
    }
  }

  var _excluded$1$1 = ['component'],
    _excluded2 = ['children']
  // make ValueContainer a transition group
  var AnimatedValueContainer = function AnimatedValueContainer(WrappedComponent) {
    return function (props) {
      return props.isMulti
        ? /*#__PURE__*/ React__namespace.createElement(
            IsMultiValueContainer,
            _extends$1(
              {
                component: WrappedComponent,
              },
              props,
            ),
          )
        : /*#__PURE__*/ React__namespace.createElement(
            TransitionGroup$1,
            _extends$1(
              {
                component: WrappedComponent,
              },
              props,
            ),
          )
    }
  }
  var IsMultiValueContainer = function IsMultiValueContainer(_ref) {
    var component = _ref.component,
      restProps = _objectWithoutProperties(_ref, _excluded$1$1)
    var multiProps = useIsMultiValueContainer(restProps)
    return /*#__PURE__*/ React__namespace.createElement(
      TransitionGroup$1,
      _extends$1(
        {
          component: component,
        },
        multiProps,
      ),
    )
  }
  var useIsMultiValueContainer = function useIsMultiValueContainer(_ref2) {
    var children = _ref2.children,
      props = _objectWithoutProperties(_ref2, _excluded2)
    var isMulti = props.isMulti,
      hasValue = props.hasValue,
      innerProps = props.innerProps,
      _props$selectProps = props.selectProps,
      components = _props$selectProps.components,
      controlShouldRenderValue = _props$selectProps.controlShouldRenderValue
    var _useState = React$1.useState(isMulti && controlShouldRenderValue && hasValue),
      _useState2 = _slicedToArray(_useState, 2),
      cssDisplayFlex = _useState2[0],
      setCssDisplayFlex = _useState2[1]
    var _useState3 = React$1.useState(false),
      _useState4 = _slicedToArray(_useState3, 2),
      removingValue = _useState4[0],
      setRemovingValue = _useState4[1]
    React$1.useEffect(
      function () {
        if (hasValue && !cssDisplayFlex) {
          setCssDisplayFlex(true)
        }
      },
      [hasValue, cssDisplayFlex],
    )
    React$1.useEffect(
      function () {
        if (removingValue && !hasValue && cssDisplayFlex) {
          setCssDisplayFlex(false)
        }
        setRemovingValue(false)
      },
      [removingValue, hasValue, cssDisplayFlex],
    )
    var onExited = function onExited() {
      return setRemovingValue(true)
    }
    var childMapper = function childMapper(child) {
      if (isMulti && /*#__PURE__*/ React__namespace.isValidElement(child)) {
        // Add onExited callback to MultiValues
        if (child.type === components.MultiValue) {
          return /*#__PURE__*/ React__namespace.cloneElement(child, {
            onExited: onExited,
          })
        }
        // While container flexed, Input cursor is shown after Placeholder text,
        // so remove Placeholder until display is set back to grid
        if (child.type === components.Placeholder && cssDisplayFlex) {
          return null
        }
      }
      return child
    }
    var newInnerProps = _objectSpread2(
      _objectSpread2({}, innerProps),
      {},
      {
        style: _objectSpread2(
          _objectSpread2({}, innerProps === null || innerProps === void 0 ? void 0 : innerProps.style),
          {},
          {
            display: (isMulti && hasValue) || cssDisplayFlex ? 'flex' : 'grid',
          },
        ),
      },
    )
    var newProps = _objectSpread2(
      _objectSpread2({}, props),
      {},
      {
        innerProps: newInnerProps,
        children: React__namespace.Children.toArray(children).map(childMapper),
      },
    )
    return newProps
  }

  var _excluded$5 = ['Input', 'MultiValue', 'Placeholder', 'SingleValue', 'ValueContainer']
  var makeAnimated = function makeAnimated() {
    var externalComponents = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}
    var components = defaultComponents({
      components: externalComponents,
    })
    var Input = components.Input,
      MultiValue = components.MultiValue,
      Placeholder = components.Placeholder,
      SingleValue = components.SingleValue,
      ValueContainer = components.ValueContainer,
      rest = _objectWithoutProperties(components, _excluded$5)
    return _objectSpread2(
      {
        Input: AnimatedInput(Input),
        MultiValue: AnimatedMultiValue(MultiValue),
        Placeholder: AnimatedPlaceholder(Placeholder),
        SingleValue: AnimatedSingleValue(SingleValue),
        ValueContainer: AnimatedValueContainer(ValueContainer),
      },
      rest,
    )
  }
  var AnimatedComponents = makeAnimated()
  AnimatedComponents.Input
  AnimatedComponents.MultiValue
  AnimatedComponents.Placeholder
  AnimatedComponents.SingleValue
  AnimatedComponents.ValueContainer
  var index = memoizeOne(makeAnimated)

  var _excluded$1 = ['defaultOptions', 'cacheOptions', 'loadOptions', 'options', 'isLoading', 'onInputChange', 'filterOption']
  function useAsync(_ref) {
    var _ref$defaultOptions = _ref.defaultOptions,
      propsDefaultOptions = _ref$defaultOptions === void 0 ? false : _ref$defaultOptions,
      _ref$cacheOptions = _ref.cacheOptions,
      cacheOptions = _ref$cacheOptions === void 0 ? false : _ref$cacheOptions,
      propsLoadOptions = _ref.loadOptions
    _ref.options
    var _ref$isLoading = _ref.isLoading,
      propsIsLoading = _ref$isLoading === void 0 ? false : _ref$isLoading,
      propsOnInputChange = _ref.onInputChange,
      _ref$filterOption = _ref.filterOption,
      filterOption = _ref$filterOption === void 0 ? null : _ref$filterOption,
      restSelectProps = _objectWithoutProperties(_ref, _excluded$1)
    var propsInputValue = restSelectProps.inputValue
    var lastRequest = React$1.useRef(undefined)
    var mounted = React$1.useRef(false)
    var _useState = React$1.useState(Array.isArray(propsDefaultOptions) ? propsDefaultOptions : undefined),
      _useState2 = _slicedToArray(_useState, 2),
      defaultOptions = _useState2[0],
      setDefaultOptions = _useState2[1]
    var _useState3 = React$1.useState(typeof propsInputValue !== 'undefined' ? propsInputValue : ''),
      _useState4 = _slicedToArray(_useState3, 2),
      stateInputValue = _useState4[0],
      setStateInputValue = _useState4[1]
    var _useState5 = React$1.useState(propsDefaultOptions === true),
      _useState6 = _slicedToArray(_useState5, 2),
      isLoading = _useState6[0],
      setIsLoading = _useState6[1]
    var _useState7 = React$1.useState(undefined),
      _useState8 = _slicedToArray(_useState7, 2),
      loadedInputValue = _useState8[0],
      setLoadedInputValue = _useState8[1]
    var _useState9 = React$1.useState([]),
      _useState10 = _slicedToArray(_useState9, 2),
      loadedOptions = _useState10[0],
      setLoadedOptions = _useState10[1]
    var _useState11 = React$1.useState(false),
      _useState12 = _slicedToArray(_useState11, 2),
      passEmptyOptions = _useState12[0],
      setPassEmptyOptions = _useState12[1]
    var _useState13 = React$1.useState({}),
      _useState14 = _slicedToArray(_useState13, 2),
      optionsCache = _useState14[0],
      setOptionsCache = _useState14[1]
    var _useState15 = React$1.useState(undefined),
      _useState16 = _slicedToArray(_useState15, 2),
      prevDefaultOptions = _useState16[0],
      setPrevDefaultOptions = _useState16[1]
    var _useState17 = React$1.useState(undefined),
      _useState18 = _slicedToArray(_useState17, 2),
      prevCacheOptions = _useState18[0],
      setPrevCacheOptions = _useState18[1]
    if (cacheOptions !== prevCacheOptions) {
      setOptionsCache({})
      setPrevCacheOptions(cacheOptions)
    }
    if (propsDefaultOptions !== prevDefaultOptions) {
      setDefaultOptions(Array.isArray(propsDefaultOptions) ? propsDefaultOptions : undefined)
      setPrevDefaultOptions(propsDefaultOptions)
    }
    React$1.useEffect(function () {
      mounted.current = true
      return function () {
        mounted.current = false
      }
    }, [])
    var loadOptions = React$1.useCallback(
      function (inputValue, callback) {
        if (!propsLoadOptions) return callback()
        var loader = propsLoadOptions(inputValue, callback)
        if (loader && typeof loader.then === 'function') {
          loader.then(callback, function () {
            return callback()
          })
        }
      },
      [propsLoadOptions],
    )
    React$1.useEffect(function () {
      if (propsDefaultOptions === true) {
        loadOptions(stateInputValue, function (options) {
          if (!mounted.current) return
          setDefaultOptions(options || [])
          setIsLoading(!!lastRequest.current)
        })
      }
      // NOTE: this effect is designed to only run when the component mounts,
      // so we don't want to include any hook dependencies
      // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [])
    var onInputChange = React$1.useCallback(
      function (newValue, actionMeta) {
        var inputValue = handleInputChange(newValue, actionMeta, propsOnInputChange)
        if (!inputValue) {
          lastRequest.current = undefined
          setStateInputValue('')
          setLoadedInputValue('')
          setLoadedOptions([])
          setIsLoading(false)
          setPassEmptyOptions(false)
          return
        }
        if (cacheOptions && optionsCache[inputValue]) {
          setStateInputValue(inputValue)
          setLoadedInputValue(inputValue)
          setLoadedOptions(optionsCache[inputValue])
          setIsLoading(false)
          setPassEmptyOptions(false)
        } else {
          var request = (lastRequest.current = {})
          setStateInputValue(inputValue)
          setIsLoading(true)
          setPassEmptyOptions(!loadedInputValue)
          loadOptions(inputValue, function (options) {
            if (!mounted) return
            if (request !== lastRequest.current) return
            lastRequest.current = undefined
            setIsLoading(false)
            setLoadedInputValue(inputValue)
            setLoadedOptions(options || [])
            setPassEmptyOptions(false)
            setOptionsCache(options ? _objectSpread2(_objectSpread2({}, optionsCache), {}, _defineProperty({}, inputValue, options)) : optionsCache)
          })
        }
      },
      [cacheOptions, loadOptions, loadedInputValue, optionsCache, propsOnInputChange],
    )
    var options = passEmptyOptions ? [] : stateInputValue && loadedInputValue ? loadedOptions : defaultOptions || []
    return _objectSpread2(
      _objectSpread2({}, restSelectProps),
      {},
      {
        options: options,
        isLoading: isLoading || propsIsLoading,
        onInputChange: onInputChange,
        filterOption: filterOption,
      },
    )
  }

  var AsyncSelect = /*#__PURE__*/ React$1.forwardRef(function (props, ref) {
    var stateManagedProps = useAsync(props)
    var selectProps = useStateManager(stateManagedProps)
    return /*#__PURE__*/ React__namespace.createElement(
      Select$1,
      _extends$1(
        {
          ref: ref,
        },
        selectProps,
      ),
    )
  })

  var _excluded = ['allowCreateWhileLoading', 'createOptionPosition', 'formatCreateLabel', 'isValidNewOption', 'getNewOptionData', 'onCreateOption', 'options', 'onChange']
  var compareOption = function compareOption() {
    var inputValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ''
    var option = arguments.length > 1 ? arguments[1] : undefined
    var accessors = arguments.length > 2 ? arguments[2] : undefined
    var candidate = String(inputValue).toLowerCase()
    var optionValue = String(accessors.getOptionValue(option)).toLowerCase()
    var optionLabel = String(accessors.getOptionLabel(option)).toLowerCase()
    return optionValue === candidate || optionLabel === candidate
  }
  var builtins = {
    formatCreateLabel: function formatCreateLabel(inputValue) {
      return 'Create "'.concat(inputValue, '"')
    },
    isValidNewOption: function isValidNewOption(inputValue, selectValue, selectOptions, accessors) {
      return !(
        !inputValue ||
        selectValue.some(function (option) {
          return compareOption(inputValue, option, accessors)
        }) ||
        selectOptions.some(function (option) {
          return compareOption(inputValue, option, accessors)
        })
      )
    },
    getNewOptionData: function getNewOptionData(inputValue, optionLabel) {
      return {
        label: optionLabel,
        value: inputValue,
        __isNew__: true,
      }
    },
  }
  function useCreatable(_ref) {
    var _ref$allowCreateWhile = _ref.allowCreateWhileLoading,
      allowCreateWhileLoading = _ref$allowCreateWhile === void 0 ? false : _ref$allowCreateWhile,
      _ref$createOptionPosi = _ref.createOptionPosition,
      createOptionPosition = _ref$createOptionPosi === void 0 ? 'last' : _ref$createOptionPosi,
      _ref$formatCreateLabe = _ref.formatCreateLabel,
      formatCreateLabel = _ref$formatCreateLabe === void 0 ? builtins.formatCreateLabel : _ref$formatCreateLabe,
      _ref$isValidNewOption = _ref.isValidNewOption,
      isValidNewOption = _ref$isValidNewOption === void 0 ? builtins.isValidNewOption : _ref$isValidNewOption,
      _ref$getNewOptionData = _ref.getNewOptionData,
      getNewOptionData = _ref$getNewOptionData === void 0 ? builtins.getNewOptionData : _ref$getNewOptionData,
      onCreateOption = _ref.onCreateOption,
      _ref$options = _ref.options,
      propsOptions = _ref$options === void 0 ? [] : _ref$options,
      propsOnChange = _ref.onChange,
      restSelectProps = _objectWithoutProperties(_ref, _excluded)
    var _restSelectProps$getO = restSelectProps.getOptionValue,
      getOptionValue$1$1 = _restSelectProps$getO === void 0 ? getOptionValue$1 : _restSelectProps$getO,
      _restSelectProps$getO2 = restSelectProps.getOptionLabel,
      getOptionLabel$1$1 = _restSelectProps$getO2 === void 0 ? getOptionLabel$1 : _restSelectProps$getO2,
      inputValue = restSelectProps.inputValue,
      isLoading = restSelectProps.isLoading,
      isMulti = restSelectProps.isMulti,
      value = restSelectProps.value,
      name = restSelectProps.name
    var newOption = React$1.useMemo(
      function () {
        return isValidNewOption(inputValue, cleanValue(value), propsOptions, {
          getOptionValue: getOptionValue$1$1,
          getOptionLabel: getOptionLabel$1$1,
        })
          ? getNewOptionData(inputValue, formatCreateLabel(inputValue))
          : undefined
      },
      [formatCreateLabel, getNewOptionData, getOptionLabel$1$1, getOptionValue$1$1, inputValue, isValidNewOption, propsOptions, value],
    )
    var options = React$1.useMemo(
      function () {
        return (allowCreateWhileLoading || !isLoading) && newOption
          ? createOptionPosition === 'first'
            ? [newOption].concat(_toConsumableArray(propsOptions))
            : [].concat(_toConsumableArray(propsOptions), [newOption])
          : propsOptions
      },
      [allowCreateWhileLoading, createOptionPosition, isLoading, newOption, propsOptions],
    )
    var onChange = React$1.useCallback(
      function (newValue, actionMeta) {
        if (actionMeta.action !== 'select-option') {
          return propsOnChange(newValue, actionMeta)
        }
        var valueArray = Array.isArray(newValue) ? newValue : [newValue]
        if (valueArray[valueArray.length - 1] === newOption) {
          if (onCreateOption) onCreateOption(inputValue)
          else {
            var newOptionData = getNewOptionData(inputValue, inputValue)
            var newActionMeta = {
              action: 'create-option',
              name: name,
              option: newOptionData,
            }
            propsOnChange(valueTernary(isMulti, [].concat(_toConsumableArray(cleanValue(value)), [newOptionData]), newOptionData), newActionMeta)
          }
          return
        }
        propsOnChange(newValue, actionMeta)
      },
      [getNewOptionData, inputValue, isMulti, name, newOption, onCreateOption, propsOnChange, value],
    )
    return _objectSpread2(
      _objectSpread2({}, restSelectProps),
      {},
      {
        options: options,
        onChange: onChange,
      },
    )
  }

  var CreatableSelect = /*#__PURE__*/ React$1.forwardRef(function (props, ref) {
    var creatableProps = useStateManager(props)
    var selectProps = useCreatable(creatableProps)
    return /*#__PURE__*/ React__namespace.createElement(
      Select$1,
      _extends$1(
        {
          ref: ref,
        },
        selectProps,
      ),
    )
  })

  var reactErrorBoundary_umd = { exports: {} }

  ;(function (module, exports) {
    ;(function (global, factory) {
      factory(exports, React__default['default'])
    })(commonjsGlobal, function (exports, React) {
      function _interopNamespace(e) {
        if (e && e.__esModule) return e
        var n = Object.create(null)
        if (e) {
          Object.keys(e).forEach(function (k) {
            if (k !== 'default') {
              var d = Object.getOwnPropertyDescriptor(e, k)
              Object.defineProperty(
                n,
                k,
                d.get
                  ? d
                  : {
                      enumerable: true,
                      get: function () {
                        return e[k]
                      },
                    },
              )
            }
          })
        }
        n['default'] = e
        return Object.freeze(n)
      }

      var React__namespace = /*#__PURE__*/ _interopNamespace(React)

      function _setPrototypeOf(o, p) {
        _setPrototypeOf =
          Object.setPrototypeOf ||
          function _setPrototypeOf(o, p) {
            o.__proto__ = p
            return o
          }

        return _setPrototypeOf(o, p)
      }

      function _inheritsLoose(subClass, superClass) {
        subClass.prototype = Object.create(superClass.prototype)
        subClass.prototype.constructor = subClass
        _setPrototypeOf(subClass, superClass)
      }

      var changedArray = function changedArray(a, b) {
        if (a === void 0) {
          a = []
        }

        if (b === void 0) {
          b = []
        }

        return (
          a.length !== b.length ||
          a.some(function (item, index) {
            return !Object.is(item, b[index])
          })
        )
      }

      var initialState = {
        error: null,
      }

      var ErrorBoundary = /*#__PURE__*/ (function (_React$Component) {
        _inheritsLoose(ErrorBoundary, _React$Component)

        function ErrorBoundary() {
          var _this

          for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {
            _args[_key] = arguments[_key]
          }

          _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this
          _this.state = initialState

          _this.resetErrorBoundary = function () {
            var _this$props

            for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
              args[_key2] = arguments[_key2]
            }

            _this.props.onReset == null ? void 0 : (_this$props = _this.props).onReset.apply(_this$props, args)

            _this.reset()
          }

          return _this
        }

        ErrorBoundary.getDerivedStateFromError = function getDerivedStateFromError(error) {
          return {
            error: error,
          }
        }

        var _proto = ErrorBoundary.prototype

        _proto.reset = function reset() {
          this.setState(initialState)
        }

        _proto.componentDidCatch = function componentDidCatch(error, info) {
          var _this$props$onError, _this$props2
          ;(_this$props$onError = (_this$props2 = this.props).onError) == null ? void 0 : _this$props$onError.call(_this$props2, error, info)
        }

        _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {
          var error = this.state.error
          var resetKeys = this.props.resetKeys // There's an edge case where if the thing that triggered the error
          // happens to *also* be in the resetKeys array, we'd end up resetting
          // the error boundary immediately. This would likely trigger a second
          // error to be thrown.
          // So we make sure that we don't check the resetKeys on the first call
          // of cDU after the error is set

          if (error !== null && prevState.error !== null && changedArray(prevProps.resetKeys, resetKeys)) {
            var _this$props$onResetKe, _this$props3
            ;(_this$props$onResetKe = (_this$props3 = this.props).onResetKeysChange) == null ? void 0 : _this$props$onResetKe.call(_this$props3, prevProps.resetKeys, resetKeys)
            this.reset()
          }
        }

        _proto.render = function render() {
          var error = this.state.error
          var _this$props4 = this.props,
            fallbackRender = _this$props4.fallbackRender,
            FallbackComponent = _this$props4.FallbackComponent,
            fallback = _this$props4.fallback

          if (error !== null) {
            var _props = {
              error: error,
              resetErrorBoundary: this.resetErrorBoundary,
            }

            if (/*#__PURE__*/ React__namespace.isValidElement(fallback)) {
              return fallback
            } else if (typeof fallbackRender === 'function') {
              return fallbackRender(_props)
            } else if (FallbackComponent) {
              return /*#__PURE__*/ React__namespace.createElement(FallbackComponent, _props)
            } else {
              throw new Error('react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop')
            }
          }

          return this.props.children
        }

        return ErrorBoundary
      })(React__namespace.Component)

      function withErrorBoundary(Component, errorBoundaryProps) {
        var Wrapped = function Wrapped(props) {
          return /*#__PURE__*/ React__namespace.createElement(ErrorBoundary, errorBoundaryProps, /*#__PURE__*/ React__namespace.createElement(Component, props))
        } // Format for display in DevTools

        var name = Component.displayName || Component.name || 'Unknown'
        Wrapped.displayName = 'withErrorBoundary(' + name + ')'
        return Wrapped
      }

      function useErrorHandler(givenError) {
        var _React$useState = React__namespace.useState(null),
          error = _React$useState[0],
          setError = _React$useState[1]

        if (givenError != null) throw givenError
        if (error != null) throw error
        return setError
      }
      /*
	  eslint
	    @typescript-eslint/sort-type-union-intersection-members: "off",
	    @typescript-eslint/no-throw-literal: "off",
	    @typescript-eslint/prefer-nullish-coalescing: "off"
	  */

      exports.ErrorBoundary = ErrorBoundary
      exports.useErrorHandler = useErrorHandler
      exports.withErrorBoundary = withErrorBoundary

      Object.defineProperty(exports, '__esModule', { value: true })
    })
  })(reactErrorBoundary_umd, reactErrorBoundary_umd.exports)

  /**
   * Checks if `value` is the
   * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
   * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is an object, else `false`.
   * @example
   *
   * _.isObject({});
   * // => true
   *
   * _.isObject([1, 2, 3]);
   * // => true
   *
   * _.isObject(_.noop);
   * // => true
   *
   * _.isObject(null);
   * // => false
   */

  function isObject$2(value) {
    var type = typeof value
    return value != null && (type == 'object' || type == 'function')
  }

  var isObject_1 = isObject$2

  /** Detect free variable `global` from Node.js. */

  var freeGlobal$1 = typeof commonjsGlobal == 'object' && commonjsGlobal && commonjsGlobal.Object === Object && commonjsGlobal

  var _freeGlobal = freeGlobal$1

  var freeGlobal = _freeGlobal

  /** Detect free variable `self`. */
  var freeSelf = typeof self == 'object' && self && self.Object === Object && self

  /** Used as a reference to the global object. */
  var root$2 = freeGlobal || freeSelf || Function('return this')()

  var _root = root$2

  var root$1 = _root

  /**
   * Gets the timestamp of the number of milliseconds that have elapsed since
   * the Unix epoch (1 January 1970 00:00:00 UTC).
   *
   * @static
   * @memberOf _
   * @since 2.4.0
   * @category Date
   * @returns {number} Returns the timestamp.
   * @example
   *
   * _.defer(function(stamp) {
   *   console.log(_.now() - stamp);
   * }, _.now());
   * // => Logs the number of milliseconds it took for the deferred invocation.
   */
  var now$1 = function () {
    return root$1.Date.now()
  }

  var now_1 = now$1

  /** Used to match a single whitespace character. */

  var reWhitespace = /\s/

  /**
   * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace
   * character of `string`.
   *
   * @private
   * @param {string} string The string to inspect.
   * @returns {number} Returns the index of the last non-whitespace character.
   */
  function trimmedEndIndex$1(string) {
    var index = string.length

    while (index-- && reWhitespace.test(string.charAt(index))) {}
    return index
  }

  var _trimmedEndIndex = trimmedEndIndex$1

  var trimmedEndIndex = _trimmedEndIndex

  /** Used to match leading whitespace. */
  var reTrimStart = /^\s+/

  /**
   * The base implementation of `_.trim`.
   *
   * @private
   * @param {string} string The string to trim.
   * @returns {string} Returns the trimmed string.
   */
  function baseTrim$1(string) {
    return string ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '') : string
  }

  var _baseTrim = baseTrim$1

  var root = _root

  /** Built-in value references. */
  var Symbol$5 = root.Symbol

  var _Symbol = Symbol$5

  var Symbol$4 = _Symbol

  /** Used for built-in method references. */
  var objectProto$1 = Object.prototype

  /** Used to check objects for own properties. */
  var hasOwnProperty = objectProto$1.hasOwnProperty

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var nativeObjectToString$1 = objectProto$1.toString

  /** Built-in value references. */
  var symToStringTag$1 = Symbol$4 ? Symbol$4.toStringTag : undefined

  /**
   * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the raw `toStringTag`.
   */
  function getRawTag$1(value) {
    var isOwn = hasOwnProperty.call(value, symToStringTag$1),
      tag = value[symToStringTag$1]

    try {
      value[symToStringTag$1] = undefined
      var unmasked = true
    } catch (e) {}

    var result = nativeObjectToString$1.call(value)
    if (unmasked) {
      if (isOwn) {
        value[symToStringTag$1] = tag
      } else {
        delete value[symToStringTag$1]
      }
    }
    return result
  }

  var _getRawTag = getRawTag$1

  /** Used for built-in method references. */

  var objectProto = Object.prototype

  /**
   * Used to resolve the
   * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
   * of values.
   */
  var nativeObjectToString = objectProto.toString

  /**
   * Converts `value` to a string using `Object.prototype.toString`.
   *
   * @private
   * @param {*} value The value to convert.
   * @returns {string} Returns the converted string.
   */
  function objectToString$1(value) {
    return nativeObjectToString.call(value)
  }

  var _objectToString = objectToString$1

  var Symbol$3 = _Symbol,
    getRawTag = _getRawTag,
    objectToString = _objectToString

  /** `Object#toString` result references. */
  var nullTag = '[object Null]',
    undefinedTag = '[object Undefined]'

  /** Built-in value references. */
  var symToStringTag = Symbol$3 ? Symbol$3.toStringTag : undefined

  /**
   * The base implementation of `getTag` without fallbacks for buggy environments.
   *
   * @private
   * @param {*} value The value to query.
   * @returns {string} Returns the `toStringTag`.
   */
  function baseGetTag$1(value) {
    if (value == null) {
      return value === undefined ? undefinedTag : nullTag
    }
    return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value)
  }

  var _baseGetTag = baseGetTag$1

  /**
   * Checks if `value` is object-like. A value is object-like if it's not `null`
   * and has a `typeof` result of "object".
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
   * @example
   *
   * _.isObjectLike({});
   * // => true
   *
   * _.isObjectLike([1, 2, 3]);
   * // => true
   *
   * _.isObjectLike(_.noop);
   * // => false
   *
   * _.isObjectLike(null);
   * // => false
   */

  function isObjectLike$1(value) {
    return value != null && typeof value == 'object'
  }

  var isObjectLike_1 = isObjectLike$1

  var baseGetTag = _baseGetTag,
    isObjectLike = isObjectLike_1

  /** `Object#toString` result references. */
  var symbolTag = '[object Symbol]'

  /**
   * Checks if `value` is classified as a `Symbol` primitive or object.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to check.
   * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
   * @example
   *
   * _.isSymbol(Symbol.iterator);
   * // => true
   *
   * _.isSymbol('abc');
   * // => false
   */
  function isSymbol$1(value) {
    return typeof value == 'symbol' || (isObjectLike(value) && baseGetTag(value) == symbolTag)
  }

  var isSymbol_1 = isSymbol$1

  var baseTrim = _baseTrim,
    isObject$1 = isObject_1,
    isSymbol = isSymbol_1

  /** Used as references for various `Number` constants. */
  var NAN = 0 / 0

  /** Used to detect bad signed hexadecimal string values. */
  var reIsBadHex = /^[-+]0x[0-9a-f]+$/i

  /** Used to detect binary string values. */
  var reIsBinary = /^0b[01]+$/i

  /** Used to detect octal string values. */
  var reIsOctal = /^0o[0-7]+$/i

  /** Built-in method references without a dependency on `root`. */
  var freeParseInt = parseInt

  /**
   * Converts `value` to a number.
   *
   * @static
   * @memberOf _
   * @since 4.0.0
   * @category Lang
   * @param {*} value The value to process.
   * @returns {number} Returns the number.
   * @example
   *
   * _.toNumber(3.2);
   * // => 3.2
   *
   * _.toNumber(Number.MIN_VALUE);
   * // => 5e-324
   *
   * _.toNumber(Infinity);
   * // => Infinity
   *
   * _.toNumber('3.2');
   * // => 3.2
   */
  function toNumber$1(value) {
    if (typeof value == 'number') {
      return value
    }
    if (isSymbol(value)) {
      return NAN
    }
    if (isObject$1(value)) {
      var other = typeof value.valueOf == 'function' ? value.valueOf() : value
      value = isObject$1(other) ? other + '' : other
    }
    if (typeof value != 'string') {
      return value === 0 ? value : +value
    }
    value = baseTrim(value)
    var isBinary = reIsBinary.test(value)
    return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value
  }

  var toNumber_1 = toNumber$1

  var isObject = isObject_1,
    now = now_1,
    toNumber = toNumber_1

  /** Error message constants. */
  var FUNC_ERROR_TEXT = 'Expected a function'

  /* Built-in method references for those with the same name as other `lodash` methods. */
  var nativeMax = Math.max,
    nativeMin = Math.min

  /**
   * Creates a debounced function that delays invoking `func` until after `wait`
   * milliseconds have elapsed since the last time the debounced function was
   * invoked. The debounced function comes with a `cancel` method to cancel
   * delayed `func` invocations and a `flush` method to immediately invoke them.
   * Provide `options` to indicate whether `func` should be invoked on the
   * leading and/or trailing edge of the `wait` timeout. The `func` is invoked
   * with the last arguments provided to the debounced function. Subsequent
   * calls to the debounced function return the result of the last `func`
   * invocation.
   *
   * **Note:** If `leading` and `trailing` options are `true`, `func` is
   * invoked on the trailing edge of the timeout only if the debounced function
   * is invoked more than once during the `wait` timeout.
   *
   * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred
   * until to the next tick, similar to `setTimeout` with a timeout of `0`.
   *
   * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)
   * for details over the differences between `_.debounce` and `_.throttle`.
   *
   * @static
   * @memberOf _
   * @since 0.1.0
   * @category Function
   * @param {Function} func The function to debounce.
   * @param {number} [wait=0] The number of milliseconds to delay.
   * @param {Object} [options={}] The options object.
   * @param {boolean} [options.leading=false]
   *  Specify invoking on the leading edge of the timeout.
   * @param {number} [options.maxWait]
   *  The maximum time `func` is allowed to be delayed before it's invoked.
   * @param {boolean} [options.trailing=true]
   *  Specify invoking on the trailing edge of the timeout.
   * @returns {Function} Returns the new debounced function.
   * @example
   *
   * // Avoid costly calculations while the window size is in flux.
   * jQuery(window).on('resize', _.debounce(calculateLayout, 150));
   *
   * // Invoke `sendMail` when clicked, debouncing subsequent calls.
   * jQuery(element).on('click', _.debounce(sendMail, 300, {
   *   'leading': true,
   *   'trailing': false
   * }));
   *
   * // Ensure `batchLog` is invoked once after 1 second of debounced calls.
   * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });
   * var source = new EventSource('/stream');
   * jQuery(source).on('message', debounced);
   *
   * // Cancel the trailing debounced invocation.
   * jQuery(window).on('popstate', debounced.cancel);
   */
  function debounce(func, wait, options) {
    var lastArgs,
      lastThis,
      maxWait,
      result,
      timerId,
      lastCallTime,
      lastInvokeTime = 0,
      leading = false,
      maxing = false,
      trailing = true

    if (typeof func != 'function') {
      throw new TypeError(FUNC_ERROR_TEXT)
    }
    wait = toNumber(wait) || 0
    if (isObject(options)) {
      leading = !!options.leading
      maxing = 'maxWait' in options
      maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait
      trailing = 'trailing' in options ? !!options.trailing : trailing
    }

    function invokeFunc(time) {
      var args = lastArgs,
        thisArg = lastThis

      lastArgs = lastThis = undefined
      lastInvokeTime = time
      result = func.apply(thisArg, args)
      return result
    }

    function leadingEdge(time) {
      // Reset any `maxWait` timer.
      lastInvokeTime = time
      // Start the timer for the trailing edge.
      timerId = setTimeout(timerExpired, wait)
      // Invoke the leading edge.
      return leading ? invokeFunc(time) : result
    }

    function remainingWait(time) {
      var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime,
        timeWaiting = wait - timeSinceLastCall

      return maxing ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting
    }

    function shouldInvoke(time) {
      var timeSinceLastCall = time - lastCallTime,
        timeSinceLastInvoke = time - lastInvokeTime

      // Either this is the first call, activity has stopped and we're at the
      // trailing edge, the system time has gone backwards and we're treating
      // it as the trailing edge, or we've hit the `maxWait` limit.
      return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || (maxing && timeSinceLastInvoke >= maxWait)
    }

    function timerExpired() {
      var time = now()
      if (shouldInvoke(time)) {
        return trailingEdge(time)
      }
      // Restart the timer.
      timerId = setTimeout(timerExpired, remainingWait(time))
    }

    function trailingEdge(time) {
      timerId = undefined

      // Only invoke if we have `lastArgs` which means `func` has been
      // debounced at least once.
      if (trailing && lastArgs) {
        return invokeFunc(time)
      }
      lastArgs = lastThis = undefined
      return result
    }

    function cancel() {
      if (timerId !== undefined) {
        clearTimeout(timerId)
      }
      lastInvokeTime = 0
      lastArgs = lastCallTime = lastThis = timerId = undefined
    }

    function flush() {
      return timerId === undefined ? result : trailingEdge(now())
    }

    function debounced() {
      var time = now(),
        isInvoking = shouldInvoke(time)

      lastArgs = arguments
      lastThis = this
      lastCallTime = time

      if (isInvoking) {
        if (timerId === undefined) {
          return leadingEdge(lastCallTime)
        }
        if (maxing) {
          // Handle invocations in a tight loop.
          clearTimeout(timerId)
          timerId = setTimeout(timerExpired, wait)
          return invokeFunc(lastCallTime)
        }
      }
      if (timerId === undefined) {
        timerId = setTimeout(timerExpired, wait)
      }
      return result
    }
    debounced.cancel = cancel
    debounced.flush = flush
    return debounced
  }

  var debounce_1 = debounce

  /**
   * Button to cycle through states
   * Props:
   * @param {string} initialState  - e.g. "open"
   * @param {function} onStatusChange - function to call (will send (rowID, newState)))
   * @param {number} rowID - rowID of the row
   * @param {object} style - style object
   * @param {boolean} showText - whether to show the text of the state underneath the icon (default: false)
   * @param {boolean} dropdown - whether to show the dropdown of all the choices (or simply cycle thru them) - (default:true)
   * @param {number} delayOnSimpleClick - how long to wait before changing the state if the user clicks on the button (default: 3000) - should be longer than the delayOnDropdownClick because you want to wait to see if they will click more than once
   * @param {number} delayOnDropdownClick - how long to wait before changing the state if the user clicks on the dropdown (default: 500)
   *
   * Per Eduard, use the app "Glyphs Mini" to open the font
   */
  const states = [
    {
      type: 'open',
      icon: '*',
      class: 'noteplanstate',
    },
    {
      type: 'done',
      icon: 'a',
      class: 'noteplanstate',
    },
    {
      type: 'scheduled',
      icon: 'b',
      class: 'noteplanstate',
    },
    {
      type: 'cancelled',
      icon: 'c',
      class: 'noteplanstate',
    },
    {
      type: 'bullet',
      icon: '-',
      class: 'noteplanstate',
    },
    {
      type: 'checklist',
      icon: '+',
      class: 'noteplanstate',
    },
    {
      type: 'checklistDone',
      icon: 'd',
      class: 'noteplanstate',
    },
    {
      type: 'checklistCancelled',
      icon: 'e',
      class: 'noteplanstate',
    },
    {
      type: 'checklistScheduled',
      icon: 'f',
      class: 'noteplanstate',
    },
  ]
  const StatusButton = ({ initialState, onStatusChange, rowID, style, showText, dropdown = true, delayOnSimpleClick = 3000, delayOnDropdownClick = 300 }) => {
    // let upper = letter.toUpperCase();

    const [currentState, setCurrentState] = useState(states.find((s) => s.type === initialState))
    if (!currentState) {
      throw `StatusButton: No state found for row:${rowID} ${initialState}`
    }
    const handleClick = (event, rowIndex, newState) => {
      const wasSimpleClick = Boolean(!newState) // simeple click if just clicking on the state. not using the dropdown
      console.log(`StatusButton: handleClick: wasSimpleClick=${wasSimpleClick || ''} rowID=${rowID || ''}, newState=${newState || ''}`, rowID, newState)
      let nextIndex
      if (wasSimpleClick) {
        nextIndex = (states.indexOf(currentState) + 1) % states.length
      } else {
        nextIndex = states.findIndex((s) => s.type === newState)
      }
      console.log(`StatusButton: handleClick: rowID=${rowID}, setting state from ${currentState.type} to: ${states[nextIndex].type}`)
      setCurrentState(states[nextIndex])
      // onStatusChange: rowID, newState, highlight, delay

      onStatusChange(rowID, states[nextIndex].type, wasSimpleClick ? false : true, wasSimpleClick ? delayOnSimpleClick : delayOnDropdownClick) // if was a simple click, wait to see if they click again, but if not,
      event.preventDefault() // cancel the click
    }

    const withHover = /*#__PURE__*/ React.createElement(
      'div',
      {
        className: 'w3-dropdown-hover statusbutton-displayed',
        style: style,
      },
      /*#__PURE__*/ React.createElement(
        'div',
        {
          className: `${currentState.class} statusbutton-collapsed`,
          style: style,
          onClick: handleClick,
        },
        currentState.icon,
      ),
      /*#__PURE__*/ React.createElement(
        'div',
        {
          className: 'w3-dropdown-content w3-bar-block w3-border pointer',
          style: style,
        },
        states
          .filter((o) => o.type !== currentState.type)
          .map((s, i) =>
            /*#__PURE__*/ React.createElement(
              'a',
              {
                href: '',
                className: 'w3-bar-item statusbutton-bar pointer',
                key: i,
              },
              /*#__PURE__*/ React.createElement(
                'div',
                {
                  onClick: (e) => handleClick(e, rowID, s.type),
                },
                /*#__PURE__*/ React.createElement(
                  'span',
                  {
                    className: `${currentState.class} statusbutton-icon pointer`,
                    style: style,
                  },
                  s.icon,
                ),
                /*#__PURE__*/ React.createElement(
                  'span',
                  {
                    className: 'statusbutton-text pointer',
                    style: style,
                  },
                  s.type,
                ),
              ),
            ),
          ),
      ),
    )
    const withoutHover = /*#__PURE__*/ React.createElement(
      'div',
      {
        className: 'statusbutton w3-cell-middle',
        onClick: (e) => handleClick(e),
        style: style,
      },
      /*#__PURE__*/ React.createElement(
        'div',
        {
          className: currentState.class,
        },
        currentState.icon,
      ),
      showText &&
        /*#__PURE__*/ React.createElement(
          'div',
          {
            className: 'statusbutton-text',
          },
          currentState.type,
        ),
    )
    return dropdown ? withHover : withoutHover
  }

  function _extends() {
    _extends = Object.assign
      ? Object.assign.bind()
      : function (target) {
          for (var i = 1; i < arguments.length; i++) {
            var source = arguments[i]
            for (var key in source) {
              if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key]
              }
            }
          }
          return target
        }
    return _extends.apply(this, arguments)
  }

  /**
   * Basic button using w3.css
   * @param {*} props
   * @returns a simple w3 styled button
   */
  function Button(props) {
    const className = props.className ?? 'w3-btn w3-white w3-border w3-border-blue w3-round'
    return /*#__PURE__*/ React.createElement(
      'button',
      _extends(
        {
          className: className,
        },
        props,
      ),
      props.children,
    )
  }

  /* global ThemedSelect React */

  // REACT DATA TABLE COMPONENT:
  // https://react-data-table-component.netlify.app/?path=/docs/api-props--page
  // https://www.npmjs.com/package/react-data-table-component/v/6.3.5
  // RDC styles: https://github.com/jbetancur/react-data-table-component/blob/master/src/DataTable/styles.ts
  // Tweaking the styles: https://react-data-table-component.netlify.app/?path=/docs/api-custom-themes--page
  // DETAILS: https://github.com/jbetancur/react-data-table-component/blob/master/src/DataTable/styles.ts

  /**
   * Root element for the Plugin's React Tree
   * @param {any} data
   * @param {any} sendToPlugin - function you can use to send data back to the plugin ['returnType',data]
   */
  function WebView$1({ data, sendToPlugin, dataChanged, cbChanged }) {
    /**
     * **************************************************
     * resources:
     * click to highlight and select a whole row: https://codesandbox.io/s/react-data-table-row-select-color-example-ppbc5
     */
    const { columns, overdueParas, title, dropdownOptionsAll, dropdownOptionsLine, contextButtons, returnPluginCommand, autoSelectNext = true } = data
    console.log(`WebView refreshing; did data change? ${dataChanged} ${cbChanged}`, data)
    React__default['default'].useCallback(() => {
      if (!autoSelectNext) return
      dataTableData.map((d) => {
        //FIXME: do something with .isSelected here and call it from somewhere
        return {
          ...d,
          isSelected: newState,
        }
      })
    }, [])

    /**
     * Hydrate the data with a key 'id', if the data did not come in with one
     */
    const overdueParasWithKey = overdueParas.map((p, i) => {
      return {
        ...p,
        id: typeof p.id !== 'undefined' ? p.id : i,
        originalRawContent: p.rawContent,
      }
    })
    const [dataTableData, setDataTableData] = React__default['default'].useState(overdueParasWithKey)
    React__default['default'].useState([])

    // this function has to be up here so it be called in the columns code later
    const onDropdownItemSelected = (row, event) => {
      console.log(`onDropdownItemSelected:`, row, event)
    }
    React$1.useEffect(() => {
      console.log(`EFFECT dataTableData changed - dataTableData[0].omit=${dataTableData[0].omit}`, dataTableData)
    }, [dataTableData])

    // you can send the columns you want in the props, or use the default columns below
    const columnsWithFallback = columns ?? [
      {
        name: 'Type',
        selectorName: 'overdueStatus',
        // selector: (row) => row.type,
        sortable: true,
        width: '80px',
      },
      {
        name: '',
        selectorName: 'type',
        /* omit: true for now, lets not show the status column */
        // selector: (row) => row.type,
        sortable: true,
        width: '50px',
        cell: (row) =>
          /*#__PURE__*/ React__default['default'].createElement(StatusButton, {
            rowID: row.id,
            initialState: row.type,
            onStatusChange: handleTaskStatusChange,
            style: {
              color: `${NP_THEME.base.textColor} !important`,
            },
          }),
      },
      {
        name: 'Content',
        selector: (row) => row.content,
        sortable: true,
        grow: 3,
        wrap: true,
      },
      {
        name: 'Note Title',
        omit: true /* for now, lets not show the column */,
        selectorName: 'title',
        // selector: (row) => row.title,
        sortable: true,
      },
      {
        name: 'Filename',
        omit: true /* for now, lets not show the column */,
        selectorName: 'filename',
        // selector: (row) => row.title,
        sortable: true,
      },
    ]
    // if we pass in column names, we can't pass through the selector function, so we need to calculate it here
    const colsWithSelectorNameMap = columnsWithFallback.map((c) => ({
      ...c,
      selector: c.selector ?? ((row) => row[c.selectorName || c.name]),
      grow: c.grow ?? 1,
    }))
    const mainTableColumns = React__default['default'].useMemo(
      () => [
        // selector: (row) => row.filename,
        ...colsWithSelectorNameMap,
        {
          name: 'Action',
          cell: (row) =>
            row.isSelected
              ? ''
              : /*#__PURE__*/ React__default['default'].createElement(ThemedSelect, {
                  options: dropdownOptionsLine,
                  onSelect: (e) => onDropdownItemSelected,
                  onChange: () => console.log(`onchange ${row.id} `),
                }),
          allowOverflow: true,
          grow: 2,
        },
        /*
	  Add a button :)
	  {
	  name: 'Poster Button',
	  button: true,
	  cell: () => <Button>Something</Button>,
	  },
	  */
      ],
      [],
    )
    const rescheduleComponent = (row) =>
      /*#__PURE__*/ React__default['default'].createElement(ThemedSelect, {
        options: dropdownOptionsLine,
        onSelect: (e) => onDropdownItemSelected,
        id: 'multi',
        onChange: () => console.log(`onchange multi`),
      })

    /**
     * Update edited content field - this comes from the field itself
     */
    const handleEditableContentChange = React__default['default'].useCallback(({ id, field, value }) => {
      console.log(`contentUpdated (actual edited paragraph.onInput) id=${id}, field=${field}, value=${value}`)
      const updatedData = dataTableData.map((item) => {
        if (item.id !== id) {
          return item
        }
        return {
          ...item,
          [field]: value,
        }
      })
      postChangesAfterDebounce(
        'paragraphUpdate',
        {
          rows: [updatedData[id]],
          field,
        },
        3000,
      )
    }, [])

    /**
     * The wrapper got a change event. Not sure we need this one, but TBD
     * @param {*} value - is the field value of the edited cell, but we need more info
     */
    const handleEditableWrapperChange = (value) => {
      console.log(`handleEditableWrapperChange (EditableElement onChange) value=${JSON.stringify(value)}`)
      // setValue(value);
    }

    /**
     * Convenience map function to
     * Change a line's data in the table and return the entire updated dataTable object
     * @param {number} rowID - the ID of the row to change
     * @param {any} valuesToChange - an object of rows and fields to change
     */
    React__default['default'].useCallback(
      (rowID, valuesToChange) => {
        if (isNaN(rowID)) return dataTableData
        console.log(`getUpdatedRowData ${dataTableData[0].omit} ${dataTableData[1].omit} ${dataTableData[2].omit} ${dataTableData[3].omit}`)
        return dataTableData.map((item) => {
          if (item.id !== rowID) {
            return item
          }
          return {
            ...item,
            ...valuesToChange,
          }
        })
      },
      [dataTableData],
    )

    /**
     * Debounce and after [3s] setTableData and send changes to NotePlan
     * @param {string} type - type of change (for processing on the NotePlan side)
     * @param {object} newTableData - the new table data that will be saved here after debounce
     * @param {object} objectToSend - object that will be sent to NotePlan, e.g. { rows: updatedData[id], field}
     */
    // const postChangesAfterDebounceMessedUp = (type, newTableData, objectToSend, delayMS = 1000) => {
    //   console.log(`postChangesAfterDebounce: ${type} ${JSON.stringify(objectToSend, null, 2)} delayMS=${delayMS}`, objectToSend)
    //   const r = React.useCallback(
    //     debounce((type, newTableData, objectToSend, sendToPlugin, setDataTableData) => {
    //       console.log(`(back after debounce of ${delayMS}ms) Post changes to NotePlan: ${type} ${JSON.stringify(objectToSend, null, 2)}`, objectToSend)
    //       console.log(`postChangesAfterDebounce newTableData`, newTableData)
    //       setDataTableData((prev) => {
    //         const newState = [...prev]
    //         sendToPlugin.rows?.forEach((row) => {
    //           newState[row.id] = row
    //         })
    //         return newState
    //       })
    //       // console.log(`Post changes to NotePlan: ${JSON.stringify(value, null, 2)} ${new Date().toString}`, value)
    //       sendToPlugin([type, objectToSend])
    //     }, delayMS),
    //     [dataTableData],
    //   ) // calling debounce returns the function. we then need to call that function with data to get it to run
    //   return r(type, newTableData, objectToSend, sendToPlugin, setDataTableData) // passing sendToPlugin because it's out of scope in the callback otherwise
    // }

    /**
     * Debounce and after [3s] setTableData and send changes to NotePlan
     * @param {string} type - type of change (for processing on the NotePlan side)
     * @param {object} objectToSend - object that will be sent to NotePlan, e.g. { rows: updatedData[id], field}
     * @param {number} delay - delay in ms before sending and writing to table (FIXME: this does not work)
     * NOTE: this field ^^^ will also be used to determine the updates to the table data after the debounce
     *
     */
    const postChangesAfterDebounce = ((type, objectToSend, delay = 2618) =>
      debounce_1((type, objectToSend) => {
        console.log(`(back after debounce of ${delay}ms) Post changes to NotePlan: ${type} ${JSON.stringify(objectToSend, null, 2)}`, objectToSend)
        setDataTableData((prev) => {
          const newState = [...prev]
          objectToSend.rows?.forEach((row) => {
            newState[row.id] = row
          })
          return newState
        })
        // console.log(`Post changes to NotePlan: ${JSON.stringify(value, null, 2)} ${new Date().toString}`, value)
        sendToPlugin([type, objectToSend])
      }, delay))()

    /**
     * Callback to handle a status change from a child
     * @param {*} rowID
     * @param {*} newStatus
     * @param {*} immediate
     * @param {*} delay - delay in ms before writing to table and sending to NotePlan
     */
    const handleTaskStatusChange = React__default['default'].useCallback(
      (rowID, newStatus, highlight = false, delay = 500) => {
        if (typeof rowID === 'number' && newStatus && dataTableData[rowID].type !== newStatus) {
          console.log(`WebView::handleTaskStatusChange rowID=${rowID}, newStatus=${newStatus} highlight=${String(highlight)} delay=${delay}`, newStatus)
          console.log(`getUpdatedRowData ${dataTableData[0].omit} ${dataTableData[1].omit} ${dataTableData[2].omit} ${dataTableData[3].omit}`)
          // const dataWithHighlight = getUpdatedRowData(rowID, { type: newStatus, omit: false, highlight: true })
          // const dataWithHighlight = dataTableData.map((item) => (item.id !== rowID ? item : { ...item, type: newStatus, omit: false, highlight: true }))
          // const dataWithOmittedRow = getUpdatedRowData(rowID, { type: newStatus, omit: true, highlight: false })
          const dataWithOmittedRow = dataTableData.map((item) =>
            item.id !== rowID
              ? item
              : {
                  ...item,
                  type: newStatus,
                  omit: true,
                  highlight: false,
                },
          )
          if (highlight) {
            // set a row to highlighted for a brief time before debounce takes it out (with .omit=true)
            // console.log(`handleTaskStatusChange setDataTableData(dataWithHighlight)`, dataWithHighlight)
            // console.log(`handleTaskStatusChange setDataTableData(dataWithOmittedRow)`, dataWithOmittedRow)
            setDataTableData((prev) =>
              prev.map((item) =>
                item.id !== rowID
                  ? item
                  : {
                      ...item,
                      type: newStatus,
                      omit: false,
                      highlight: true,
                    },
              ),
            ) //FIXME: is this ok inside a conditional?
          }

          console.log(`Calling debounce for 'paragraphUpdate' after delay=${delay}`)
          postChangesAfterDebounce(
            'paragraphUpdate',
            {
              rows: [dataWithOmittedRow[rowID]],
              field: 'type',
            },
            delay,
          )
        }
      },
      [dataTableData],
    )

    //TODO: move to a separate file
    // https://javascript.plainenglish.io/editable-html-in-react-6dd67dd7e302
    const EditableElement = (props) => {
      console.log(`EditableElement props=`, props)
      const { onChange } = props
      const element = React__default['default'].useRef()
      let elements = React__default['default'].Children.toArray(props.children)
      if (elements.length > 1) {
        throw Error("Can't have more than one child")
      }
      const onMouseUp = () => {
        const value = element.current?.value || element.current?.innerText
        onChange(value)
      }
      React$1.useEffect(() => {
        const value = element.current?.value || element.current?.innerText
        onChange(value)
      }, [])
      elements = /*#__PURE__*/ React__default['default'].cloneElement(elements[0], {
        contentEditable: true,
        suppressContentEditableWarning: true,
        ref: element,
        onKeyUp: onMouseUp,
      })
      console.log(`EditableElement elements=`, elements)
      return elements
    }

    // Wnen the user clicks the down arrow, this component is rendered
    const ExpandedComponent = ({ data: row, handler }) => {
      console.log(`ExpandedComponent row=${JSON.stringify(row)}`)
      return /*#__PURE__*/ React__default['default'].createElement(
        'div',
        {
          className: 'expanded-row',
        },
        /*#__PURE__*/ React__default['default'].createElement(
          'div',
          {
            className: 'w3-cell-row',
          },
          /*#__PURE__*/ React__default['default'].createElement(
            'div',
            {
              className: 'w3-cell-middle',
            },
            /*#__PURE__*/ React__default['default'].createElement(MultiSetBar, {
              contextButtons: contextButtons,
              handler: handler,
              rescheduleComponent: rescheduleComponent,
              buttonType: 'context',
            }),
          ),
        ),
        /*#__PURE__*/ React__default['default'].createElement(
          'div',
          {
            className: 'w3-cell-row',
          },
          /*#__PURE__*/ React__default['default'].createElement(
            'div',
            {
              className: 'w3-cell spacer',
              style: {
                minWidth: '8px',
              },
            },
            '\xA0',
          ),
          /*#__PURE__*/ React__default['default'].createElement(
            'div',
            {
              className: 'w3-cell-middle',
            },
            'Edit:',
          ),
          /*#__PURE__*/ React__default['default'].createElement(
            'div',
            {
              className: 'w3-cell',
            },
            /*#__PURE__*/ React__default['default'].createElement(
              EditableElement,
              {
                onChange: handleEditableWrapperChange,
              },
              /*#__PURE__*/ React__default['default'].createElement(
                'p',
                {
                  key: row.id,
                  field: 'content',
                  /* contentEditable={true} */ onInput: (e) =>
                    handleEditableContentChange({
                      id: row.id,
                      field: 'rawContent',
                      value: e.currentTarget.innerHTML,
                    }),
                  style: {
                    maxWidth: '100vw',
                    paddingLeft: 30,
                    paddingRight: 50,
                  },
                  onBlur: () => {},
                },
                row.rawContent,
              ),
            ),
          ),
        ),
      )
    }

    /**
     * (state-setting helper function) for onSelectionCheck and the multi-select checkboxes
     * given a list of selected rows, update the data table to reflect the selection
     * this is called when the user checks or unchecks a row's multi-select checkbox
     * DBW: has dependency tracking
     * @param {Array} selectedRows
     */
    const updateSelectedItems = React__default['default'].useCallback(
      (selectedRows) => {
        if (selectedRows !== undefined) {
          // check if this has already been done (to avoid infinite loop in React Render)
          let madeChanges = false
          const isSelectedMap = dataTableData.map((item) => selectedRows.find((r) => r.id === item.id) !== undefined)
          const newData = dataTableData.map((item) => {
            if (Boolean(item.isSelected) !== Boolean(isSelectedMap[item.id])) {
              madeChanges = true
            }
            return {
              ...item,
              isSelected: isSelectedMap[item.id],
            }
          })
          if (madeChanges) {
            console.log(`updateSelectedItems something changed selectedRows = ${JSON.stringify(selectedRows, null, 2)}`, selectedRows)
            setDataTableData((prev) => newData)
          }
        }
      },
      [dataTableData],
    )

    /**
     * (handler) user checks or unchecks a row's multi-select checkbox
     * DBW: has dependency tracking
     * @param {Array} selectedRows
     */
    const onSelectionCheck = React__default['default'].useCallback(
      ({ allSelected, selectedCount, selectedRows }) => {
        // console.log(`onSelectionCheck selectedCount=${selectedCount} selectedRows=`, selectedRows)
        updateSelectedItems(selectedRows)
      },
      [dataTableData],
    )

    /**
     * (handler) for onRowSingleClick
     * given a row single-clicked, update the data table to reflect the selection
     * no state-checking going on here because a tap/toggle always will make a change
     * DBW: has dependency tracking
     * @param {Array} selectedRows
     */
    const onRowSingleClick = React__default['default'].useCallback(
      (row) => {
        console.log(`onRowSingleClick row`, row)
        // const newData = dataTableData.map((item) => ({ ...item, isSelected: row.id === item.id ? !item.isSelected : item.isSelected }))
        // only allow one expanded at a time
        setDataTableData((prev) =>
          prev.map((item) => ({
            ...item,
            isExpanded: row.id === item.id ? !item.isExpanded : false,
          })),
        )
      },
      [dataTableData],
    )
    const onRowDoubleClick = (row, event) => {
      console.log(`onRowDoubleClick -- for now doing nothing, just expanding`, row, event)
    }

    /*
	    Selects
	    NOTE: menuPortalTarget={document.body} is required to get the dropdown to expand outside of the div
	   */
    const SelectDateForMultiple = (handler) => {
      return /*#__PURE__*/ React__default['default'].createElement(ThemedSelect, {
        options: dropdownOptionsAll,
        onSelect: onDropdownItemSelected,
        /* onChange={onDropdownItemSelected} */ onChange: (value) => {
          handler(value)
        },
      })
    }
    /*#__PURE__*/ React__default['default'].createElement(ThemedSelect, {
      options: dropdownOptionsLine,
      onSelect: onDropdownItemSelected,
      onChange: onDropdownItemSelected,
    })

    // columns:
    //    cell: row => <CustomTitle row={row} />
    /*
	  const CustomTitle = ({ row }) => (
	  9	<div>
	  10		{}
	  11		<div>{row.title}</div>
	  12		<div>
	  13			<div
	  14				data-tag="allowRowEvents"
	  15				style={{ color: 'grey', overflow: 'hidden', whiteSpace: 'wrap', textOverflow: 'ellipses' }}
	  16			>
	  17				{}
	  18				{row.plot}
	  19			</div>
	  20		</div>
	  21	</div>
	  22);
	  */

    //   const RescheduleLineSelect = ({ row }) => <Select options={dropdownOptionsLine} onSelect={onDropdownItemSelected} />

    const keyListener = React__default['default'].useCallback((event) => {
      const handleKeyDown = (event) => {
        console.log('keydown event', event)
        if (event.key === 'Escape') {
          handler('escape')
        }
      }
      window.addEventListener('keydown', handleKeyDown)
      return () => {
        window.removeEventListener('keydown', handleKeyDown)
      }
    }, [])
    const MultiSetBar = (props) => {
      const { contextButtons, handler, rescheduleComponent, buttonType } = props
      const paddingBetweenElements = '5px'
      const buttonContainerStyle =
        buttonType === 'multi'
          ? {
              flexGrow: 1,
            }
          : {
              paddingLeft: '85px',
            } // for single, add padding to the left b/c there is no reschedule component
      React$1.useEffect(keyListener, [])
      return /*#__PURE__*/ React__default['default'].createElement(
        'div',
        {
          id: 'multisetbar-container',
          className: 'w3-panel w3-card',
          style: {
            paddingTop: '8px',
            paddingBottom: '8px',
            margin: 'inherit',
          },
        },
        /*#__PURE__*/ React__default['default'].createElement(
          'div',
          {
            style: buttonContainerStyle,
            className: 'w3-cell-row',
          },
          contextButtons?.map((button, i) =>
            /*#__PURE__*/ React__default['default'].createElement(
              'div',
              {
                style: {
                  flexGrow: 1,
                  paddingLeft: paddingBetweenElements,
                },
                className: 'w3-cell',
                key: i,
              },
              /*#__PURE__*/ React__default['default'].createElement(
                Button,
                {
                  key: `button${i}`,
                  onClick: () => handler(`${buttonType}-button`, i),
                  style: {
                    fontSize: '0.8rem',
                  },
                },
                button.text,
              ),
            ),
          ),
          buttonType === 'multi' &&
            /*#__PURE__*/ React__default['default'].createElement(
              'div',
              {
                style: {
                  flexGrow: 3,
                  paddingLeft: paddingBetweenElements,
                  minWidth: '250px',
                },
                className: 'w3-cell',
              },
              rescheduleComponent,
            ),
        ),
      )
    }
    const getSelectedItems = React__default['default'].useCallback((isMulti = true) => dataTableData.filter((r) => (isMulti ? r.isSelected : r.isExpanded)), [dataTableData])
    const multiSetHandler = React__default['default'].useCallback(
      (event, info) => {
        console.log(`multiSetHandler event=${JSON.stringify(event)} info=${JSON.stringify(info)}`, event)
        const isDateSelect = event?.label?.length > 0
        const buttonType = /(.*?)-button/.exec(event)?.[1]
        const buttonClicked = buttonType ? info : false
        let action = ''
        if (isDateSelect) {
          // setMultiDateSelected(event) // {label: "set to xxx 2021-01-01", value: "2021-01-01"}
          action = event.value
        } else if (buttonClicked !== false) {
          console.log(`multiSetHandler buttonType=${buttonType} buttonClicked=${buttonClicked}`, buttonClicked)
          action = contextButtons[buttonClicked].action
        }
        const selectedRows = getSelectedItems(buttonType === 'multi')
        if (action !== '-----' && selectedRows.length > 0) {
          const dataToSend = {
            choice: action,
            rows: selectedRows,
          }
          console.log(`multiSetHandler dataToSend=${JSON.stringify(dataToSend, null, 2)}`, dataToSend)
          sendToPlugin(['actionDropdown', dataToSend])
          setDataTableData((prev) => prev.filter((item) => !item.isSelected)) // clear the selected rows
        } else {
          console.log(`multiSetHandler: no action or no selected rows (could be 2nd call to handler)`)
        }
        // const SHOULD_CONFIRM = false
        // if (!SHOULD_CONFIRM || window.confirm(`Are you sure you want to hide:\r ${userSelectedRows.map((r) => r.content)}?`)) {
        //   setToggleCleared(!toggleCleared)
        //   const newData = dataTableData.filter((item) => !userSelectedRows.includes(item))
        //   setDataTableData(newData)
        // }
      },
      [dataTableData],
    )
    const multiSelectContextComponent = React__default['default'].useMemo(() => {
      console.log(`multiSelectContextComponent refreshing (dataTableData changed)`)
      return /*#__PURE__*/ React__default['default'].createElement(MultiSetBar, {
        rescheduleComponent: SelectDateForMultiple(multiSetHandler),
        handler: multiSetHandler,
        contextButtons: contextButtons,
        buttonType: 'multi',
      })
    }, [dataTableData])

    /* NP_THEME
	    "base": {
	        "backgroundColor": "#1D1E1F",
	        "textColor": "#DAE3E8",
	        "h1": "#CC6666",
	        "h2": "#E9C062",
	        "h3": "#E9C062",
	        "h4": "#E9C062",
	        "tintColor": "#E9C0A2",
	        "altColor": "#2E2F30"
	    }
	  */

    // USE THIS REF:  https://github.com/jbetancur/react-data-table-component/blob/master/src/DataTable/styles.ts

    // definied in the rollup export
    createDataTableTheme(
      'np-theme',
      {
        text: {
          primary: '#268bd2',
          secondary: '#2aa198',
        },
        background: {
          default: NP_THEME.base.backgroundColor,
        },
        context: {
          background: NP_THEME.base.h2,
          text: NP_THEME.base.backgroundColor,
        },
        divider: {
          default: '#073642',
        },
        action: {
          button: 'rgba(0,0,0,.54)',
          hover: 'rgba(0,0,0,.08)',
          disabled: 'rgba(0,0,0,.12)',
        },
      },
      'dark',
    )
    const customTableStyles = {
      table: {
        style: {
          maxWidth: '97vw',
          backgroundColor: NP_THEME.base.backgroundColor,
          marginBottom: '60px', // make sure we can see last row under pagination
        },
      },

      header: {
        style: {
          paddingTop: '10px',
          maxWidth: '97vw',
          backgroundColor: NP_THEME.base.altColor,
          color: NP_THEME.base.textColor,
        },
      },
      pagination: {
        style: {
          maxWidth: '100vw',
          position: 'fixed',
          left: 0,
          bottom: 0,
          backgroundColor: NP_THEME.base.altColor,
          color: NP_THEME.base.textColor,
        },
      },
      rows: {
        style: {
          minHeight: '64px',
          // override the row height
          backgroundColor: NP_THEME.base.backgroundColor,
          color: NP_THEME.base.textColor,
          border: `1px solid ${chroma(NP_THEME.base.backgroundColor).brighten().css()}`,
        },
        stripedStyle: {
          color: NP_THEME.base.textColor,
          backgroundColor: NP_THEME.base.altColor,
        },
      },
      headCells: {
        style: {
          paddingLeft: '8px',
          // override the cell padding for head cells
          paddingRight: '8px',
          backgroundColor: NP_THEME.base.backgroundColor,
          color: NP_THEME.base.textColor,
        },
      },
      cells: {
        style: {
          paddingLeft: '8px',
          // override the cell padding for data cells
          paddingRight: '8px',
        },
      },
      expanderCell: {
        style: {
          backgroundColor: 'transparent' /* FIXME: this will find the cells but won't fix the white box, need to find the theme that's setting the white underneath */,
        },
      },

      expanderRow: {
        style: {
          backgroundColor: 'lightgray',
          color: 'black',
        },
      },
      expanderButton: {
        style: {
          backgroundColor: 'transparent',
          color: NP_THEME.base.textColor,
          fill: NP_THEME.base.textColor,
        },
      },
    }
    const conditionalRowStyles = React__default['default'].useMemo(
      () => [
        {
          when: (row) => row.isSelected,
          style: {
            backgroundColor: chroma('#ccc').css() /* NP_THEME.base.h1, // 'Khaki', */,
            color: 'black',
          },
        },
        {
          when: (row) => row.highlight,
          style: {
            backgroundColor: chroma('PaleGreen').alpha(0.5).css() /* NP_THEME.base.h1, // 'Khaki', */,
            color: 'black',
          },
        },
        {
          when: (row) => row.priority < 3,
          classNames: ['luke', 'leia'],
          //You can apply classNames instead or in addition to style:
          style: {
            backgroundColor: 'green',
            color: 'white',
            '&:hover': {
              cursor: 'pointer',
            },
          },
        },
        // You can also pass a callback to style for additional customization
        {
          when: (row) => row.priority < 400,
          style: (row) => ({
            backgroundColor: row.isSpecial ? 'pink' : 'inerit',
          }),
        },
      ],
      [],
    )
    const displayRows = dataTableData.filter((row) => !row.omit)
    return /*#__PURE__*/ React__default['default'].createElement(
      React__default['default'].Fragment,
      null,
      /*#__PURE__*/ React__default['default'].createElement(
        'div',
        {
          style: {
            maxWidth: '100vw',
            width: '100vw',
          },
        },
        /*#__PURE__*/ React__default['default'].createElement(DataTable, {
          title: title,
          fixedHeader: true,
          fixedHeaderScrollHeight: '100vh' /* "calc(100vh - 200px)" */,
          striped: true,
          highlightOnHover: true,
          overflowY: false,
          columns: mainTableColumns,
          data: displayRows /* FIXME: this should be displayRows but that doesn't work */,
          selectableRows: true,
          onSelectedRowsChange: onSelectionCheck,
          selectableRowSelected: (row) => row.isSelected,
          /* selectableRowsSingle */ contextActions: multiSelectContextComponent,
          onRowClicked: onRowSingleClick,
          onRowDoubleClick: onRowDoubleClick,
          /* clearuserSelectedRows={toggleCleared} */ expandableRows: true,
          expandableRowExpanded: (row) => row.isExpanded,
          expandableRowsComponent: ExpandedComponent,
          expandableRowDisabled: (row) => row.isSelected /* TODO: figure out how to know if we should show the row expander */,
          expandonRowDoubleClick: true,
          expandableRowsComponentProps: {
            handler: multiSetHandler,
          },
          conditionalRowStyles: conditionalRowStyles,
          customStyles: customTableStyles,
          pagination: true,
          paginationPerPage: 20,
          paginationRowsPerPageOptions: [10, 20, 30, 40, 50, 100],
          theme: 'np-theme',
          /* dense={() => dataTableData.length > 10} */
          /* selectableRowsComponent={Checkbox} */
        }),
      ),
    )
  }

  const ErrorFallback$1 = ({ error, resetErrorBoundary }) => {
    return /*#__PURE__*/ React.createElement(
      'div',
      {
        role: 'alert',
      },
      /*#__PURE__*/ React.createElement('h1', null, 'Something went wrong in React:'),
      /*#__PURE__*/ React.createElement('pre', null, error.message),
      /*#__PURE__*/ React.createElement(
        'button',
        {
          onClick: resetErrorBoundary,
        },
        'Try again',
      ),
    )
  }

  /* global Select */

  // TODO: use style classes from @jgclark CSS embedded in the HTML

  /* NOTES:
	  // Styles: https://react-select.com/styles
	  // overriding the whole theme: https://react-select.com/styles#overriding-the-theme
	  chroma: https://gka.github.io/chroma.js/
	*/

  /* NP_THEME
	    "base": {
	        "backgroundColor": "#1D1E1F",
	        "textColor": "#DAE3E8",
	        "h1": "#CC6666",
	        "h2": "#E9C062",
	        "h3": "#E9C062",
	        "h4": "#E9C062",
	        "tintColor": "#E9C0A2",
	        "altColor": "#2E2F30"
	    }
	*/
  // This worked but was basic so I am replacing it with below. delete this when it all works.
  // const customStyles = {
  //     container: (provided) => ({
  //       ...provided,
  //       width: '100%',
  //     }),
  //     option: (provided) => ({
  //       ...provided,
  //       color: 'black',
  //     }),
  //     control: (provided) => ({
  //       ...provided,
  //       color: 'black',
  //     }),
  //     singleValue: (provided) => ({
  //       ...provided,
  //       color: 'black',
  //     }),
  //   }

  /*
	 *
	 Option styling... simplifying for now, but ultimately we can go back and customize like this:
	  https://react-select.com/styles (see "Customized Styles for a Single Select")

	   option: (styles, { data, isDisabled, isFocused, isSelected }) => {
	    const color = chroma(data.color);
	    return {
	      ...styles,
	      backgroundColor: isDisabled
	        ? undefined
	        : isSelected
	        ? data.color
	        : isFocused
	        ? color.alpha(0.1).css()
	        : undefined,
	      color: isDisabled
	        ? '#ccc'
	        : isSelected
	        ? chroma.contrast(color, 'white') > 2
	          ? 'white'
	          : 'black'
	        : data.color,
	      cursor: isDisabled ? 'not-allowed' : 'default',

	      ':active': {
	        ...styles[':active'],
	        backgroundColor: !isDisabled
	          ? isSelected
	            ? data.color
	            : color.alpha(0.3).css()
	          : undefined,
	      },
	    };

	 */

  // NOTE: This theme calculating is not working by itself, so most of it is ignored and using the specific item overrides below.
  // Maybe come back to this theme stuff later, but I'm not sure it's worth it.
  const primary = {
    primary: NP_THEME.base.textColor,
  }
  ;[25, 50, 75].reduce((acc, opacity) => {
    acc[`primary${opacity}`] = chroma(primary.primary)
      .alpha(opacity / 100)
      .css()
    return acc
  }, primary)
  const neutralScale = chroma.scale([NP_THEME.base.backgroundColor, NP_THEME.base.altColor]).mode('lch').colors(11)
  ;[0, 5, 10, 20, 30, 40, 50, 60, 70, 80, 90].reduce((acc, scale, i) => {
    acc[`neutral${scale}`] = chroma(neutralScale[i]).css()
    return acc
  }, {})

  /* the dot is the little coloured circle next to the selected value */
  const dot = (color = 'transparent') => ({
    alignItems: 'center',
    display: 'flex',
    ':before': {
      backgroundColor: color,
      borderRadius: 10,
      content: '" "',
      display: 'block',
      marginRight: 8,
      height: 10,
      width: 10,
    },
  })

  /* React Select's inner components
	    clearIndicator
	    container - size of the control, but colors don't seem to do anything
	    control - color of the entire select box before dropped down
	    dropdownIndicator
	    group
	    groupHeading
	    indicatorsContainer
	    indicatorSeparator
	    input
	    loadingIndicator
	    loadingMessage
	    menu
	    menuList
	    menuPortal
	    multiValue
	    multiValueLabel
	    multiValueRemove
	    noOptionsMessage
	    option -- the options in the dropdown, background and text color
	    placeholder -- just the text and part of the background of the control on load - does not contain the padding
	    singleValue - the selected text and background of part of the control after selection
	    valueContainer  -- the left 7/8 of the selected item in the control 
	*/
  const colourStyles = {
    /* size of the control, but colors don't seem to do anything */
    container: (styles) => ({
      ...styles,
      width: '100%',
      backgroundColor: NP_THEME.base.backgroundColor,
      color: NP_THEME.base.textColor,
      borderRadius: 5,
    }),
    /* color of the entire select box before dropped down */
    control: (styles) => ({
      ...styles,
      backgroundColor: NP_THEME.base.backgroundColor ?? 'white',
      color: NP_THEME.base.textColor ?? 'black',
      /* border around the dropdown */
      borderColor: chroma('white').alpha(0.25).css(),
    }),
    /* seems to be part of the placeholder and also after selection, the following styles are applied */
    /* strange that sometimes the dot shows up after selection and sometimes it doesn't */
    input: (styles) => ({
      ...styles,
      color: NP_THEME.base.textColor,
    }),
    /* just the text and part of the background of the control on load - does not contain the padding */
    placeholder: (styles) => ({
      ...styles,
      ...dot(NP_THEME.base.tintColor),
      color: NP_THEME.base.textColor,
      fontSize: '0.8rem',
    }),
    /* singleValue is the selected value */
    singleValue: (styles, { data }) => ({
      ...styles,
      color: NP_THEME.base.textColor,
      ...dot(NP_THEME.base.tintColor),
    }),
    // tester: (styles) => ({ ...styles, backgroundColor: 'green', color: 'red' }),
    /* the options in the dropdown, background and text color */
    // option: (styles) => ({ ...styles, backgroundColor: NP_THEME.base.backgroundColor, color: NP_THEME.base.textColor ?? 'black' }),
    option: (styles, { data, isDisabled, isFocused, isSelected }) => {
      // console.log('option', styles, data, isDisabled, isFocused, isSelected)
      const bgColor = chroma(NP_THEME.base.backgroundColor)
      return {
        ...styles,
        // backgroundColor: isDisabled ? undefined : isSelected ? bgColor.css() : isFocused ? bgColor.alpha(0.1).css() : bgColor.css(),
        backgroundColor: bgColor.css(),
        fontSize: '0.8rem',
        color: isDisabled ? '#ccc' : isSelected ? (chroma.contrast(bgColor, 'white') > 2 ? 'white' : 'black') : NP_THEME.base.textColor,
        cursor: isDisabled ? 'not-allowed' : 'default',
        ':hover': {
          ...styles[':hover'],
          backgroundColor: NP_THEME.base.altColor,
          // backgroundColor: !isDisabled ? (isSelected ? bgColor.lighten().css() : bgColor.alpha(0.3).css()) : undefined,
        },

        ':active': {
          ...styles[':active'],
          backgroundColor: !isDisabled ? (isSelected ? bgColor.css() : bgColor.alpha(0.3).css()) : undefined,
        },
      }
    },
  }
  function ThemedSelect$1(props) {
    const { options, onSelect, onChange } = props
    return /*#__PURE__*/ React.createElement(Select, {
      options: options,
      onSelect: onSelect /* theme={theme} */,
      styles: colourStyles,
      menuPortalTarget: document.body,
      autosize: true,
      onChange: onChange,
    })
  }

  var build = {}

  var ansiStyles = { exports: {} }

  ;(function (module) {
    const ANSI_BACKGROUND_OFFSET = 10

    const wrapAnsi256 =
      (offset = 0) =>
      (code) =>
        `\u001B[${38 + offset};5;${code}m`

    const wrapAnsi16m =
      (offset = 0) =>
      (red, green, blue) =>
        `\u001B[${38 + offset};2;${red};${green};${blue}m`

    function assembleStyles() {
      const codes = new Map()
      const styles = {
        modifier: {
          reset: [0, 0],
          // 21 isn't widely supported and 22 does the same thing
          bold: [1, 22],
          dim: [2, 22],
          italic: [3, 23],
          underline: [4, 24],
          overline: [53, 55],
          inverse: [7, 27],
          hidden: [8, 28],
          strikethrough: [9, 29],
        },
        color: {
          black: [30, 39],
          red: [31, 39],
          green: [32, 39],
          yellow: [33, 39],
          blue: [34, 39],
          magenta: [35, 39],
          cyan: [36, 39],
          white: [37, 39],

          // Bright color
          blackBright: [90, 39],
          redBright: [91, 39],
          greenBright: [92, 39],
          yellowBright: [93, 39],
          blueBright: [94, 39],
          magentaBright: [95, 39],
          cyanBright: [96, 39],
          whiteBright: [97, 39],
        },
        bgColor: {
          bgBlack: [40, 49],
          bgRed: [41, 49],
          bgGreen: [42, 49],
          bgYellow: [43, 49],
          bgBlue: [44, 49],
          bgMagenta: [45, 49],
          bgCyan: [46, 49],
          bgWhite: [47, 49],

          // Bright color
          bgBlackBright: [100, 49],
          bgRedBright: [101, 49],
          bgGreenBright: [102, 49],
          bgYellowBright: [103, 49],
          bgBlueBright: [104, 49],
          bgMagentaBright: [105, 49],
          bgCyanBright: [106, 49],
          bgWhiteBright: [107, 49],
        },
      }

      // Alias bright black as gray (and grey)
      styles.color.gray = styles.color.blackBright
      styles.bgColor.bgGray = styles.bgColor.bgBlackBright
      styles.color.grey = styles.color.blackBright
      styles.bgColor.bgGrey = styles.bgColor.bgBlackBright

      for (const [groupName, group] of Object.entries(styles)) {
        for (const [styleName, style] of Object.entries(group)) {
          styles[styleName] = {
            open: `\u001B[${style[0]}m`,
            close: `\u001B[${style[1]}m`,
          }

          group[styleName] = styles[styleName]

          codes.set(style[0], style[1])
        }

        Object.defineProperty(styles, groupName, {
          value: group,
          enumerable: false,
        })
      }

      Object.defineProperty(styles, 'codes', {
        value: codes,
        enumerable: false,
      })

      styles.color.close = '\u001B[39m'
      styles.bgColor.close = '\u001B[49m'

      styles.color.ansi256 = wrapAnsi256()
      styles.color.ansi16m = wrapAnsi16m()
      styles.bgColor.ansi256 = wrapAnsi256(ANSI_BACKGROUND_OFFSET)
      styles.bgColor.ansi16m = wrapAnsi16m(ANSI_BACKGROUND_OFFSET)

      // From https://github.com/Qix-/color-convert/blob/3f0e0d4e92e235796ccb17f6e85c72094a651f49/conversions.js
      Object.defineProperties(styles, {
        rgbToAnsi256: {
          value: (red, green, blue) => {
            // We use the extended greyscale palette here, with the exception of
            // black and white. normal palette only has 4 greyscale shades.
            if (red === green && green === blue) {
              if (red < 8) {
                return 16
              }

              if (red > 248) {
                return 231
              }

              return Math.round(((red - 8) / 247) * 24) + 232
            }

            return 16 + 36 * Math.round((red / 255) * 5) + 6 * Math.round((green / 255) * 5) + Math.round((blue / 255) * 5)
          },
          enumerable: false,
        },
        hexToRgb: {
          value: (hex) => {
            const matches = /(?<colorString>[a-f\d]{6}|[a-f\d]{3})/i.exec(hex.toString(16))
            if (!matches) {
              return [0, 0, 0]
            }

            let { colorString } = matches.groups

            if (colorString.length === 3) {
              colorString = colorString
                .split('')
                .map((character) => character + character)
                .join('')
            }

            const integer = Number.parseInt(colorString, 16)

            return [(integer >> 16) & 0xff, (integer >> 8) & 0xff, integer & 0xff]
          },
          enumerable: false,
        },
        hexToAnsi256: {
          value: (hex) => styles.rgbToAnsi256(...styles.hexToRgb(hex)),
          enumerable: false,
        },
      })

      return styles
    }

    // Make the export immutable
    Object.defineProperty(module, 'exports', {
      enumerable: true,
      get: assembleStyles,
    })
  })(ansiStyles)

  var collections = {}

  Object.defineProperty(collections, '__esModule', {
    value: true,
  })
  collections.printIteratorEntries = printIteratorEntries
  collections.printIteratorValues = printIteratorValues
  collections.printListItems = printListItems
  collections.printObjectProperties = printObjectProperties

  /**
   * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   *
   */
  const getKeysOfEnumerableProperties = (object, compareKeys) => {
    const keys = Object.keys(object).sort(compareKeys)

    if (Object.getOwnPropertySymbols) {
      Object.getOwnPropertySymbols(object).forEach((symbol) => {
        if (Object.getOwnPropertyDescriptor(object, symbol).enumerable) {
          keys.push(symbol)
        }
      })
    }

    return keys
  }
  /**
   * Return entries (for example, of a map)
   * with spacing, indentation, and comma
   * without surrounding punctuation (for example, braces)
   */

  function printIteratorEntries(
    iterator,
    config,
    indentation,
    depth,
    refs,
    printer, // Too bad, so sad that separator for ECMAScript Map has been ' => '
    // What a distracting diff if you change a data structure to/from
    // ECMAScript Object or Immutable.Map/OrderedMap which use the default.
    separator = ': ',
  ) {
    let result = ''
    let current = iterator.next()

    if (!current.done) {
      result += config.spacingOuter
      const indentationNext = indentation + config.indent

      while (!current.done) {
        const name = printer(current.value[0], config, indentationNext, depth, refs)
        const value = printer(current.value[1], config, indentationNext, depth, refs)
        result += indentationNext + name + separator + value
        current = iterator.next()

        if (!current.done) {
          result += ',' + config.spacingInner
        } else if (!config.min) {
          result += ','
        }
      }

      result += config.spacingOuter + indentation
    }

    return result
  }
  /**
   * Return values (for example, of a set)
   * with spacing, indentation, and comma
   * without surrounding punctuation (braces or brackets)
   */

  function printIteratorValues(iterator, config, indentation, depth, refs, printer) {
    let result = ''
    let current = iterator.next()

    if (!current.done) {
      result += config.spacingOuter
      const indentationNext = indentation + config.indent

      while (!current.done) {
        result += indentationNext + printer(current.value, config, indentationNext, depth, refs)
        current = iterator.next()

        if (!current.done) {
          result += ',' + config.spacingInner
        } else if (!config.min) {
          result += ','
        }
      }

      result += config.spacingOuter + indentation
    }

    return result
  }
  /**
   * Return items (for example, of an array)
   * with spacing, indentation, and comma
   * without surrounding punctuation (for example, brackets)
   **/

  function printListItems(list, config, indentation, depth, refs, printer) {
    let result = ''

    if (list.length) {
      result += config.spacingOuter
      const indentationNext = indentation + config.indent

      for (let i = 0; i < list.length; i++) {
        result += indentationNext

        if (i in list) {
          result += printer(list[i], config, indentationNext, depth, refs)
        }

        if (i < list.length - 1) {
          result += ',' + config.spacingInner
        } else if (!config.min) {
          result += ','
        }
      }

      result += config.spacingOuter + indentation
    }

    return result
  }
  /**
   * Return properties of an object
   * with spacing, indentation, and comma
   * without surrounding punctuation (for example, braces)
   */

  function printObjectProperties(val, config, indentation, depth, refs, printer) {
    let result = ''
    const keys = getKeysOfEnumerableProperties(val, config.compareKeys)

    if (keys.length) {
      result += config.spacingOuter
      const indentationNext = indentation + config.indent

      for (let i = 0; i < keys.length; i++) {
        const key = keys[i]
        const name = printer(key, config, indentationNext, depth, refs)
        const value = printer(val[key], config, indentationNext, depth, refs)
        result += indentationNext + name + ': ' + value

        if (i < keys.length - 1) {
          result += ',' + config.spacingInner
        } else if (!config.min) {
          result += ','
        }
      }

      result += config.spacingOuter + indentation
    }

    return result
  }

  var AsymmetricMatcher = {}

  Object.defineProperty(AsymmetricMatcher, '__esModule', {
    value: true,
  })
  AsymmetricMatcher.test = AsymmetricMatcher.serialize = AsymmetricMatcher.default = void 0

  var _collections$3 = collections

  var global$2 = (function () {
    if (typeof globalThis !== 'undefined') {
      return globalThis
    } else if (typeof global$2 !== 'undefined') {
      return global$2
    } else if (typeof self !== 'undefined') {
      return self
    } else if (typeof window !== 'undefined') {
      return window
    } else {
      return Function('return this')()
    }
  })()

  var Symbol$2 = global$2['jest-symbol-do-not-touch'] || global$2.Symbol
  const asymmetricMatcher = typeof Symbol$2 === 'function' && Symbol$2.for ? Symbol$2.for('jest.asymmetricMatcher') : 0x1357a5
  const SPACE$2 = ' '

  const serialize$6 = (val, config, indentation, depth, refs, printer) => {
    const stringedValue = val.toString()

    if (stringedValue === 'ArrayContaining' || stringedValue === 'ArrayNotContaining') {
      if (++depth > config.maxDepth) {
        return '[' + stringedValue + ']'
      }

      return stringedValue + SPACE$2 + '[' + (0, _collections$3.printListItems)(val.sample, config, indentation, depth, refs, printer) + ']'
    }

    if (stringedValue === 'ObjectContaining' || stringedValue === 'ObjectNotContaining') {
      if (++depth > config.maxDepth) {
        return '[' + stringedValue + ']'
      }

      return stringedValue + SPACE$2 + '{' + (0, _collections$3.printObjectProperties)(val.sample, config, indentation, depth, refs, printer) + '}'
    }

    if (stringedValue === 'StringMatching' || stringedValue === 'StringNotMatching') {
      return stringedValue + SPACE$2 + printer(val.sample, config, indentation, depth, refs)
    }

    if (stringedValue === 'StringContaining' || stringedValue === 'StringNotContaining') {
      return stringedValue + SPACE$2 + printer(val.sample, config, indentation, depth, refs)
    }

    return val.toAsymmetricMatcher()
  }

  AsymmetricMatcher.serialize = serialize$6

  const test$6 = (val) => val && val.$$typeof === asymmetricMatcher

  AsymmetricMatcher.test = test$6
  const plugin$6 = {
    serialize: serialize$6,
    test: test$6,
  }
  var _default$7 = plugin$6
  AsymmetricMatcher.default = _default$7

  var ConvertAnsi = {}

  var ansiRegex = ({ onlyFirst = false } = {}) => {
    const pattern = [
      '[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]+)*|[a-zA-Z\\d]+(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)',
      '(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))',
    ].join('|')

    return new RegExp(pattern, onlyFirst ? undefined : 'g')
  }

  Object.defineProperty(ConvertAnsi, '__esModule', {
    value: true,
  })
  ConvertAnsi.test = ConvertAnsi.serialize = ConvertAnsi.default = void 0

  var _ansiRegex = _interopRequireDefault$2(ansiRegex)

  var _ansiStyles$1 = _interopRequireDefault$2(ansiStyles.exports)

  function _interopRequireDefault$2(obj) {
    return obj && obj.__esModule ? obj : { default: obj }
  }

  /**
   * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  const toHumanReadableAnsi = (text) =>
    text.replace((0, _ansiRegex.default)(), (match) => {
      switch (match) {
        case _ansiStyles$1.default.red.close:
        case _ansiStyles$1.default.green.close:
        case _ansiStyles$1.default.cyan.close:
        case _ansiStyles$1.default.gray.close:
        case _ansiStyles$1.default.white.close:
        case _ansiStyles$1.default.yellow.close:
        case _ansiStyles$1.default.bgRed.close:
        case _ansiStyles$1.default.bgGreen.close:
        case _ansiStyles$1.default.bgYellow.close:
        case _ansiStyles$1.default.inverse.close:
        case _ansiStyles$1.default.dim.close:
        case _ansiStyles$1.default.bold.close:
        case _ansiStyles$1.default.reset.open:
        case _ansiStyles$1.default.reset.close:
          return '</>'

        case _ansiStyles$1.default.red.open:
          return '<red>'

        case _ansiStyles$1.default.green.open:
          return '<green>'

        case _ansiStyles$1.default.cyan.open:
          return '<cyan>'

        case _ansiStyles$1.default.gray.open:
          return '<gray>'

        case _ansiStyles$1.default.white.open:
          return '<white>'

        case _ansiStyles$1.default.yellow.open:
          return '<yellow>'

        case _ansiStyles$1.default.bgRed.open:
          return '<bgRed>'

        case _ansiStyles$1.default.bgGreen.open:
          return '<bgGreen>'

        case _ansiStyles$1.default.bgYellow.open:
          return '<bgYellow>'

        case _ansiStyles$1.default.inverse.open:
          return '<inverse>'

        case _ansiStyles$1.default.dim.open:
          return '<dim>'

        case _ansiStyles$1.default.bold.open:
          return '<bold>'

        default:
          return ''
      }
    })

  const test$5 = (val) => typeof val === 'string' && !!val.match((0, _ansiRegex.default)())

  ConvertAnsi.test = test$5

  const serialize$5 = (val, config, indentation, depth, refs, printer) => printer(toHumanReadableAnsi(val), config, indentation, depth, refs)

  ConvertAnsi.serialize = serialize$5
  const plugin$5 = {
    serialize: serialize$5,
    test: test$5,
  }
  var _default$6 = plugin$5
  ConvertAnsi.default = _default$6

  var DOMCollection = {}

  Object.defineProperty(DOMCollection, '__esModule', {
    value: true,
  })
  DOMCollection.test = DOMCollection.serialize = DOMCollection.default = void 0

  var _collections$2 = collections

  /**
   * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  /* eslint-disable local/ban-types-eventually */
  const SPACE$1 = ' '
  const OBJECT_NAMES = ['DOMStringMap', 'NamedNodeMap']
  const ARRAY_REGEXP = /^(HTML\w*Collection|NodeList)$/

  const testName = (name) => OBJECT_NAMES.indexOf(name) !== -1 || ARRAY_REGEXP.test(name)

  const test$4 = (val) => val && val.constructor && !!val.constructor.name && testName(val.constructor.name)

  DOMCollection.test = test$4

  const isNamedNodeMap = (collection) => collection.constructor.name === 'NamedNodeMap'

  const serialize$4 = (collection, config, indentation, depth, refs, printer) => {
    const name = collection.constructor.name

    if (++depth > config.maxDepth) {
      return '[' + name + ']'
    }

    return (
      (config.min ? '' : name + SPACE$1) +
      (OBJECT_NAMES.indexOf(name) !== -1
        ? '{' +
          (0, _collections$2.printObjectProperties)(
            isNamedNodeMap(collection)
              ? Array.from(collection).reduce((props, attribute) => {
                  props[attribute.name] = attribute.value
                  return props
                }, {})
              : { ...collection },
            config,
            indentation,
            depth,
            refs,
            printer,
          ) +
          '}'
        : '[' + (0, _collections$2.printListItems)(Array.from(collection), config, indentation, depth, refs, printer) + ']')
    )
  }

  DOMCollection.serialize = serialize$4
  const plugin$4 = {
    serialize: serialize$4,
    test: test$4,
  }
  var _default$5 = plugin$4
  DOMCollection.default = _default$5

  var DOMElement = {}

  var markup = {}

  var escapeHTML$1 = {}

  Object.defineProperty(escapeHTML$1, '__esModule', {
    value: true,
  })
  escapeHTML$1.default = escapeHTML

  /**
   * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  function escapeHTML(str) {
    return str.replace(/</g, '&lt;').replace(/>/g, '&gt;')
  }

  Object.defineProperty(markup, '__esModule', {
    value: true,
  })
  markup.printText = markup.printProps = markup.printElementAsLeaf = markup.printElement = markup.printComment = markup.printChildren = void 0

  var _escapeHTML = _interopRequireDefault$1(escapeHTML$1)

  function _interopRequireDefault$1(obj) {
    return obj && obj.__esModule ? obj : { default: obj }
  }

  /**
   * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  // Return empty string if keys is empty.
  const printProps = (keys, props, config, indentation, depth, refs, printer) => {
    const indentationNext = indentation + config.indent
    const colors = config.colors
    return keys
      .map((key) => {
        const value = props[key]
        let printed = printer(value, config, indentationNext, depth, refs)

        if (typeof value !== 'string') {
          if (printed.indexOf('\n') !== -1) {
            printed = config.spacingOuter + indentationNext + printed + config.spacingOuter + indentation
          }

          printed = '{' + printed + '}'
        }

        return config.spacingInner + indentation + colors.prop.open + key + colors.prop.close + '=' + colors.value.open + printed + colors.value.close
      })
      .join('')
  } // Return empty string if children is empty.

  markup.printProps = printProps

  const printChildren = (children, config, indentation, depth, refs, printer) =>
    children.map((child) => config.spacingOuter + indentation + (typeof child === 'string' ? printText(child, config) : printer(child, config, indentation, depth, refs))).join('')

  markup.printChildren = printChildren

  const printText = (text, config) => {
    const contentColor = config.colors.content
    return contentColor.open + (0, _escapeHTML.default)(text) + contentColor.close
  }

  markup.printText = printText

  const printComment = (comment, config) => {
    const commentColor = config.colors.comment
    return commentColor.open + '<!--' + (0, _escapeHTML.default)(comment) + '-->' + commentColor.close
  } // Separate the functions to format props, children, and element,
  // so a plugin could override a particular function, if needed.
  // Too bad, so sad: the traditional (but unnecessary) space
  // in a self-closing tagColor requires a second test of printedProps.

  markup.printComment = printComment

  const printElement = (type, printedProps, printedChildren, config, indentation) => {
    const tagColor = config.colors.tag
    return (
      tagColor.open +
      '<' +
      type +
      (printedProps && tagColor.close + printedProps + config.spacingOuter + indentation + tagColor.open) +
      (printedChildren
        ? '>' + tagColor.close + printedChildren + config.spacingOuter + indentation + tagColor.open + '</' + type
        : (printedProps && !config.min ? '' : ' ') + '/') +
      '>' +
      tagColor.close
    )
  }

  markup.printElement = printElement

  const printElementAsLeaf = (type, config) => {
    const tagColor = config.colors.tag
    return tagColor.open + '<' + type + tagColor.close + ' …' + tagColor.open + ' />' + tagColor.close
  }

  markup.printElementAsLeaf = printElementAsLeaf

  Object.defineProperty(DOMElement, '__esModule', {
    value: true,
  })
  DOMElement.test = DOMElement.serialize = DOMElement.default = void 0

  var _markup$2 = markup

  /**
   * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  const ELEMENT_NODE = 1
  const TEXT_NODE = 3
  const COMMENT_NODE = 8
  const FRAGMENT_NODE = 11
  const ELEMENT_REGEXP = /^((HTML|SVG)\w*)?Element$/

  const testHasAttribute = (val) => {
    try {
      return typeof val.hasAttribute === 'function' && val.hasAttribute('is')
    } catch {
      return false
    }
  }

  const testNode = (val) => {
    const constructorName = val.constructor.name
    const { nodeType, tagName } = val
    const isCustomElement = (typeof tagName === 'string' && tagName.includes('-')) || testHasAttribute(val)
    return (
      (nodeType === ELEMENT_NODE && (ELEMENT_REGEXP.test(constructorName) || isCustomElement)) ||
      (nodeType === TEXT_NODE && constructorName === 'Text') ||
      (nodeType === COMMENT_NODE && constructorName === 'Comment') ||
      (nodeType === FRAGMENT_NODE && constructorName === 'DocumentFragment')
    )
  }

  const test$3 = (val) => {
    var _val$constructor

    return (
      (val === null || val === void 0 ? void 0 : (_val$constructor = val.constructor) === null || _val$constructor === void 0 ? void 0 : _val$constructor.name) && testNode(val)
    )
  }

  DOMElement.test = test$3

  function nodeIsText(node) {
    return node.nodeType === TEXT_NODE
  }

  function nodeIsComment(node) {
    return node.nodeType === COMMENT_NODE
  }

  function nodeIsFragment(node) {
    return node.nodeType === FRAGMENT_NODE
  }

  const serialize$3 = (node, config, indentation, depth, refs, printer) => {
    if (nodeIsText(node)) {
      return (0, _markup$2.printText)(node.data, config)
    }

    if (nodeIsComment(node)) {
      return (0, _markup$2.printComment)(node.data, config)
    }

    const type = nodeIsFragment(node) ? 'DocumentFragment' : node.tagName.toLowerCase()

    if (++depth > config.maxDepth) {
      return (0, _markup$2.printElementAsLeaf)(type, config)
    }

    return (0, _markup$2.printElement)(
      type,
      (0, _markup$2.printProps)(
        nodeIsFragment(node)
          ? []
          : Array.from(node.attributes)
              .map((attr) => attr.name)
              .sort(),
        nodeIsFragment(node)
          ? {}
          : Array.from(node.attributes).reduce((props, attribute) => {
              props[attribute.name] = attribute.value
              return props
            }, {}),
        config,
        indentation + config.indent,
        depth,
        refs,
        printer,
      ),
      (0, _markup$2.printChildren)(Array.prototype.slice.call(node.childNodes || node.children), config, indentation + config.indent, depth, refs, printer),
      config,
      indentation,
    )
  }

  DOMElement.serialize = serialize$3
  const plugin$3 = {
    serialize: serialize$3,
    test: test$3,
  }
  var _default$4 = plugin$3
  DOMElement.default = _default$4

  var Immutable = {}

  Object.defineProperty(Immutable, '__esModule', {
    value: true,
  })
  Immutable.test = Immutable.serialize = Immutable.default = void 0

  var _collections$1 = collections

  /**
   * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  // SENTINEL constants are from https://github.com/facebook/immutable-js
  const IS_ITERABLE_SENTINEL = '@@__IMMUTABLE_ITERABLE__@@'
  const IS_LIST_SENTINEL = '@@__IMMUTABLE_LIST__@@'
  const IS_KEYED_SENTINEL = '@@__IMMUTABLE_KEYED__@@'
  const IS_MAP_SENTINEL = '@@__IMMUTABLE_MAP__@@'
  const IS_ORDERED_SENTINEL = '@@__IMMUTABLE_ORDERED__@@'
  const IS_RECORD_SENTINEL = '@@__IMMUTABLE_RECORD__@@' // immutable v4

  const IS_SEQ_SENTINEL = '@@__IMMUTABLE_SEQ__@@'
  const IS_SET_SENTINEL = '@@__IMMUTABLE_SET__@@'
  const IS_STACK_SENTINEL = '@@__IMMUTABLE_STACK__@@'

  const getImmutableName = (name) => 'Immutable.' + name

  const printAsLeaf = (name) => '[' + name + ']'

  const SPACE = ' '
  const LAZY = '…' // Seq is lazy if it calls a method like filter

  const printImmutableEntries = (val, config, indentation, depth, refs, printer, type) =>
    ++depth > config.maxDepth
      ? printAsLeaf(getImmutableName(type))
      : getImmutableName(type) + SPACE + '{' + (0, _collections$1.printIteratorEntries)(val.entries(), config, indentation, depth, refs, printer) + '}' // Record has an entries method because it is a collection in immutable v3.
  // Return an iterator for Immutable Record from version v3 or v4.

  function getRecordEntries(val) {
    let i = 0
    return {
      next() {
        if (i < val._keys.length) {
          const key = val._keys[i++]
          return {
            done: false,
            value: [key, val.get(key)],
          }
        }

        return {
          done: true,
          value: undefined,
        }
      },
    }
  }

  const printImmutableRecord = (val, config, indentation, depth, refs, printer) => {
    // _name property is defined only for an Immutable Record instance
    // which was constructed with a second optional descriptive name arg
    const name = getImmutableName(val._name || 'Record')
    return ++depth > config.maxDepth
      ? printAsLeaf(name)
      : name + SPACE + '{' + (0, _collections$1.printIteratorEntries)(getRecordEntries(val), config, indentation, depth, refs, printer) + '}'
  }

  const printImmutableSeq = (val, config, indentation, depth, refs, printer) => {
    const name = getImmutableName('Seq')

    if (++depth > config.maxDepth) {
      return printAsLeaf(name)
    }

    if (val[IS_KEYED_SENTINEL]) {
      return (
        name +
        SPACE +
        '{' + // from Immutable collection of entries or from ECMAScript object
        (val._iter || val._object ? (0, _collections$1.printIteratorEntries)(val.entries(), config, indentation, depth, refs, printer) : LAZY) +
        '}'
      )
    }

    return (
      name +
      SPACE +
      '[' +
      (val._iter || // from Immutable collection of values
      val._array || // from ECMAScript array
      val._collection || // from ECMAScript collection in immutable v4
      val._iterable // from ECMAScript collection in immutable v3
        ? (0, _collections$1.printIteratorValues)(val.values(), config, indentation, depth, refs, printer)
        : LAZY) +
      ']'
    )
  }

  const printImmutableValues = (val, config, indentation, depth, refs, printer, type) =>
    ++depth > config.maxDepth
      ? printAsLeaf(getImmutableName(type))
      : getImmutableName(type) + SPACE + '[' + (0, _collections$1.printIteratorValues)(val.values(), config, indentation, depth, refs, printer) + ']'

  const serialize$2 = (val, config, indentation, depth, refs, printer) => {
    if (val[IS_MAP_SENTINEL]) {
      return printImmutableEntries(val, config, indentation, depth, refs, printer, val[IS_ORDERED_SENTINEL] ? 'OrderedMap' : 'Map')
    }

    if (val[IS_LIST_SENTINEL]) {
      return printImmutableValues(val, config, indentation, depth, refs, printer, 'List')
    }

    if (val[IS_SET_SENTINEL]) {
      return printImmutableValues(val, config, indentation, depth, refs, printer, val[IS_ORDERED_SENTINEL] ? 'OrderedSet' : 'Set')
    }

    if (val[IS_STACK_SENTINEL]) {
      return printImmutableValues(val, config, indentation, depth, refs, printer, 'Stack')
    }

    if (val[IS_SEQ_SENTINEL]) {
      return printImmutableSeq(val, config, indentation, depth, refs, printer)
    } // For compatibility with immutable v3 and v4, let record be the default.

    return printImmutableRecord(val, config, indentation, depth, refs, printer)
  } // Explicitly comparing sentinel properties to true avoids false positive
  // when mock identity-obj-proxy returns the key as the value for any key.

  Immutable.serialize = serialize$2

  const test$2 = (val) => val && (val[IS_ITERABLE_SENTINEL] === true || val[IS_RECORD_SENTINEL] === true)

  Immutable.test = test$2
  const plugin$2 = {
    serialize: serialize$2,
    test: test$2,
  }
  var _default$3 = plugin$2
  Immutable.default = _default$3

  var ReactElement = {}

  Object.defineProperty(ReactElement, '__esModule', {
    value: true,
  })
  ReactElement.test = ReactElement.serialize = ReactElement.default = void 0

  var ReactIs = _interopRequireWildcard(reactIs$2.exports)

  var _markup$1 = markup

  function _getRequireWildcardCache(nodeInterop) {
    if (typeof WeakMap !== 'function') return null
    var cacheBabelInterop = new WeakMap()
    var cacheNodeInterop = new WeakMap()
    return (_getRequireWildcardCache = function (nodeInterop) {
      return nodeInterop ? cacheNodeInterop : cacheBabelInterop
    })(nodeInterop)
  }

  function _interopRequireWildcard(obj, nodeInterop) {
    if (!nodeInterop && obj && obj.__esModule) {
      return obj
    }
    if (obj === null || (typeof obj !== 'object' && typeof obj !== 'function')) {
      return { default: obj }
    }
    var cache = _getRequireWildcardCache(nodeInterop)
    if (cache && cache.has(obj)) {
      return cache.get(obj)
    }
    var newObj = {}
    var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor
    for (var key in obj) {
      if (key !== 'default' && Object.prototype.hasOwnProperty.call(obj, key)) {
        var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null
        if (desc && (desc.get || desc.set)) {
          Object.defineProperty(newObj, key, desc)
        } else {
          newObj[key] = obj[key]
        }
      }
    }
    newObj.default = obj
    if (cache) {
      cache.set(obj, newObj)
    }
    return newObj
  }

  /**
   * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */
  // Given element.props.children, or subtree during recursive traversal,
  // return flattened array of children.
  const getChildren = (arg, children = []) => {
    if (Array.isArray(arg)) {
      arg.forEach((item) => {
        getChildren(item, children)
      })
    } else if (arg != null && arg !== false) {
      children.push(arg)
    }

    return children
  }

  const getType = (element) => {
    const type = element.type

    if (typeof type === 'string') {
      return type
    }

    if (typeof type === 'function') {
      return type.displayName || type.name || 'Unknown'
    }

    if (ReactIs.isFragment(element)) {
      return 'React.Fragment'
    }

    if (ReactIs.isSuspense(element)) {
      return 'React.Suspense'
    }

    if (typeof type === 'object' && type !== null) {
      if (ReactIs.isContextProvider(element)) {
        return 'Context.Provider'
      }

      if (ReactIs.isContextConsumer(element)) {
        return 'Context.Consumer'
      }

      if (ReactIs.isForwardRef(element)) {
        if (type.displayName) {
          return type.displayName
        }

        const functionName = type.render.displayName || type.render.name || ''
        return functionName !== '' ? 'ForwardRef(' + functionName + ')' : 'ForwardRef'
      }

      if (ReactIs.isMemo(element)) {
        const functionName = type.displayName || type.type.displayName || type.type.name || ''
        return functionName !== '' ? 'Memo(' + functionName + ')' : 'Memo'
      }
    }

    return 'UNDEFINED'
  }

  const getPropKeys$1 = (element) => {
    const { props } = element
    return Object.keys(props)
      .filter((key) => key !== 'children' && props[key] !== undefined)
      .sort()
  }

  const serialize$1 = (element, config, indentation, depth, refs, printer) =>
    ++depth > config.maxDepth
      ? (0, _markup$1.printElementAsLeaf)(getType(element), config)
      : (0, _markup$1.printElement)(
          getType(element),
          (0, _markup$1.printProps)(getPropKeys$1(element), element.props, config, indentation + config.indent, depth, refs, printer),
          (0, _markup$1.printChildren)(getChildren(element.props.children), config, indentation + config.indent, depth, refs, printer),
          config,
          indentation,
        )

  ReactElement.serialize = serialize$1

  const test$1 = (val) => val != null && ReactIs.isElement(val)

  ReactElement.test = test$1
  const plugin$1 = {
    serialize: serialize$1,
    test: test$1,
  }
  var _default$2 = plugin$1
  ReactElement.default = _default$2

  var ReactTestComponent = {}

  Object.defineProperty(ReactTestComponent, '__esModule', {
    value: true,
  })
  ReactTestComponent.test = ReactTestComponent.serialize = ReactTestComponent.default = void 0

  var _markup = markup

  var global$1 = (function () {
    if (typeof globalThis !== 'undefined') {
      return globalThis
    } else if (typeof global$1 !== 'undefined') {
      return global$1
    } else if (typeof self !== 'undefined') {
      return self
    } else if (typeof window !== 'undefined') {
      return window
    } else {
      return Function('return this')()
    }
  })()

  var Symbol$1 = global$1['jest-symbol-do-not-touch'] || global$1.Symbol
  const testSymbol = typeof Symbol$1 === 'function' && Symbol$1.for ? Symbol$1.for('react.test.json') : 0xea71357

  const getPropKeys = (object) => {
    const { props } = object
    return props
      ? Object.keys(props)
          .filter((key) => props[key] !== undefined)
          .sort()
      : []
  }

  const serialize = (object, config, indentation, depth, refs, printer) =>
    ++depth > config.maxDepth
      ? (0, _markup.printElementAsLeaf)(object.type, config)
      : (0, _markup.printElement)(
          object.type,
          object.props ? (0, _markup.printProps)(getPropKeys(object), object.props, config, indentation + config.indent, depth, refs, printer) : '',
          object.children ? (0, _markup.printChildren)(object.children, config, indentation + config.indent, depth, refs, printer) : '',
          config,
          indentation,
        )

  ReactTestComponent.serialize = serialize

  const test = (val) => val && val.$$typeof === testSymbol

  ReactTestComponent.test = test
  const plugin = {
    serialize,
    test,
  }
  var _default$1 = plugin
  ReactTestComponent.default = _default$1

  Object.defineProperty(build, '__esModule', {
    value: true,
  })
  build.default = build.DEFAULT_OPTIONS = void 0
  var format_1 = (build.format = format)
  build.plugins = void 0

  var _ansiStyles = _interopRequireDefault(ansiStyles.exports)

  var _collections = collections

  var _AsymmetricMatcher = _interopRequireDefault(AsymmetricMatcher)

  var _ConvertAnsi = _interopRequireDefault(ConvertAnsi)

  var _DOMCollection = _interopRequireDefault(DOMCollection)

  var _DOMElement = _interopRequireDefault(DOMElement)

  var _Immutable = _interopRequireDefault(Immutable)

  var _ReactElement = _interopRequireDefault(ReactElement)

  var _ReactTestComponent = _interopRequireDefault(ReactTestComponent)

  function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : { default: obj }
  }

  /**
   * Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved.
   *
   * This source code is licensed under the MIT license found in the
   * LICENSE file in the root directory of this source tree.
   */

  /* eslint-disable local/ban-types-eventually */
  const toString = Object.prototype.toString
  const toISOString = Date.prototype.toISOString
  const errorToString = Error.prototype.toString
  const regExpToString = RegExp.prototype.toString
  /**
   * Explicitly comparing typeof constructor to function avoids undefined as name
   * when mock identity-obj-proxy returns the key as the value for any key.
   */

  const getConstructorName = (val) => (typeof val.constructor === 'function' && val.constructor.name) || 'Object'
  /* global window */

  /** Is val is equal to global window object? Works even if it does not exist :) */

  const isWindow = (val) => typeof window !== 'undefined' && val === window

  const SYMBOL_REGEXP = /^Symbol\((.*)\)(.*)$/
  const NEWLINE_REGEXP = /\n/gi

  class PrettyFormatPluginError extends Error {
    constructor(message, stack) {
      super(message)
      this.stack = stack
      this.name = this.constructor.name
    }
  }

  function isToStringedArrayType(toStringed) {
    return (
      toStringed === '[object Array]' ||
      toStringed === '[object ArrayBuffer]' ||
      toStringed === '[object DataView]' ||
      toStringed === '[object Float32Array]' ||
      toStringed === '[object Float64Array]' ||
      toStringed === '[object Int8Array]' ||
      toStringed === '[object Int16Array]' ||
      toStringed === '[object Int32Array]' ||
      toStringed === '[object Uint8Array]' ||
      toStringed === '[object Uint8ClampedArray]' ||
      toStringed === '[object Uint16Array]' ||
      toStringed === '[object Uint32Array]'
    )
  }

  function printNumber(val) {
    return Object.is(val, -0) ? '-0' : String(val)
  }

  function printBigInt(val) {
    return String(`${val}n`)
  }

  function printFunction(val, printFunctionName) {
    if (!printFunctionName) {
      return '[Function]'
    }

    return '[Function ' + (val.name || 'anonymous') + ']'
  }

  function printSymbol(val) {
    return String(val).replace(SYMBOL_REGEXP, 'Symbol($1)')
  }

  function printError(val) {
    return '[' + errorToString.call(val) + ']'
  }
  /**
   * The first port of call for printing an object, handles most of the
   * data-types in JS.
   */

  function printBasicValue(val, printFunctionName, escapeRegex, escapeString) {
    if (val === true || val === false) {
      return '' + val
    }

    if (val === undefined) {
      return 'undefined'
    }

    if (val === null) {
      return 'null'
    }

    const typeOf = typeof val

    if (typeOf === 'number') {
      return printNumber(val)
    }

    if (typeOf === 'bigint') {
      return printBigInt(val)
    }

    if (typeOf === 'string') {
      if (escapeString) {
        return '"' + val.replace(/"|\\/g, '\\$&') + '"'
      }

      return '"' + val + '"'
    }

    if (typeOf === 'function') {
      return printFunction(val, printFunctionName)
    }

    if (typeOf === 'symbol') {
      return printSymbol(val)
    }

    const toStringed = toString.call(val)

    if (toStringed === '[object WeakMap]') {
      return 'WeakMap {}'
    }

    if (toStringed === '[object WeakSet]') {
      return 'WeakSet {}'
    }

    if (toStringed === '[object Function]' || toStringed === '[object GeneratorFunction]') {
      return printFunction(val, printFunctionName)
    }

    if (toStringed === '[object Symbol]') {
      return printSymbol(val)
    }

    if (toStringed === '[object Date]') {
      return isNaN(+val) ? 'Date { NaN }' : toISOString.call(val)
    }

    if (toStringed === '[object Error]') {
      return printError(val)
    }

    if (toStringed === '[object RegExp]') {
      if (escapeRegex) {
        // https://github.com/benjamingr/RegExp.escape/blob/main/polyfill.js
        return regExpToString.call(val).replace(/[\\^$*+?.()|[\]{}]/g, '\\$&')
      }

      return regExpToString.call(val)
    }

    if (val instanceof Error) {
      return printError(val)
    }

    return null
  }
  /**
   * Handles more complex objects ( such as objects with circular references.
   * maps and sets etc )
   */

  function printComplexValue(val, config, indentation, depth, refs, hasCalledToJSON) {
    if (refs.indexOf(val) !== -1) {
      return '[Circular]'
    }

    refs = refs.slice()
    refs.push(val)
    const hitMaxDepth = ++depth > config.maxDepth
    const min = config.min

    if (config.callToJSON && !hitMaxDepth && val.toJSON && typeof val.toJSON === 'function' && !hasCalledToJSON) {
      return printer(val.toJSON(), config, indentation, depth, refs, true)
    }

    const toStringed = toString.call(val)

    if (toStringed === '[object Arguments]') {
      return hitMaxDepth ? '[Arguments]' : (min ? '' : 'Arguments ') + '[' + (0, _collections.printListItems)(val, config, indentation, depth, refs, printer) + ']'
    }

    if (isToStringedArrayType(toStringed)) {
      return hitMaxDepth
        ? '[' + val.constructor.name + ']'
        : (min ? '' : !config.printBasicPrototype && val.constructor.name === 'Array' ? '' : val.constructor.name + ' ') +
            '[' +
            (0, _collections.printListItems)(val, config, indentation, depth, refs, printer) +
            ']'
    }

    if (toStringed === '[object Map]') {
      return hitMaxDepth ? '[Map]' : 'Map {' + (0, _collections.printIteratorEntries)(val.entries(), config, indentation, depth, refs, printer, ' => ') + '}'
    }

    if (toStringed === '[object Set]') {
      return hitMaxDepth ? '[Set]' : 'Set {' + (0, _collections.printIteratorValues)(val.values(), config, indentation, depth, refs, printer) + '}'
    } // Avoid failure to serialize global window object in jsdom test environment.
    // For example, not even relevant if window is prop of React element.

    return hitMaxDepth || isWindow(val)
      ? '[' + getConstructorName(val) + ']'
      : (min ? '' : !config.printBasicPrototype && getConstructorName(val) === 'Object' ? '' : getConstructorName(val) + ' ') +
          '{' +
          (0, _collections.printObjectProperties)(val, config, indentation, depth, refs, printer) +
          '}'
  }

  function isNewPlugin(plugin) {
    return plugin.serialize != null
  }

  function printPlugin(plugin, val, config, indentation, depth, refs) {
    let printed

    try {
      printed = isNewPlugin(plugin)
        ? plugin.serialize(val, config, indentation, depth, refs, printer)
        : plugin.print(
            val,
            (valChild) => printer(valChild, config, indentation, depth, refs),
            (str) => {
              const indentationNext = indentation + config.indent
              return indentationNext + str.replace(NEWLINE_REGEXP, '\n' + indentationNext)
            },
            {
              edgeSpacing: config.spacingOuter,
              min: config.min,
              spacing: config.spacingInner,
            },
            config.colors,
          )
    } catch (error) {
      throw new PrettyFormatPluginError(error.message, error.stack)
    }

    if (typeof printed !== 'string') {
      throw new Error(`pretty-format: Plugin must return type "string" but instead returned "${typeof printed}".`)
    }

    return printed
  }

  function findPlugin(plugins, val) {
    for (let p = 0; p < plugins.length; p++) {
      try {
        if (plugins[p].test(val)) {
          return plugins[p]
        }
      } catch (error) {
        throw new PrettyFormatPluginError(error.message, error.stack)
      }
    }

    return null
  }

  function printer(val, config, indentation, depth, refs, hasCalledToJSON) {
    const plugin = findPlugin(config.plugins, val)

    if (plugin !== null) {
      return printPlugin(plugin, val, config, indentation, depth, refs)
    }

    const basicResult = printBasicValue(val, config.printFunctionName, config.escapeRegex, config.escapeString)

    if (basicResult !== null) {
      return basicResult
    }

    return printComplexValue(val, config, indentation, depth, refs, hasCalledToJSON)
  }

  const DEFAULT_THEME = {
    comment: 'gray',
    content: 'reset',
    prop: 'yellow',
    tag: 'cyan',
    value: 'green',
  }
  const DEFAULT_THEME_KEYS = Object.keys(DEFAULT_THEME)
  const DEFAULT_OPTIONS = {
    callToJSON: true,
    compareKeys: undefined,
    escapeRegex: false,
    escapeString: true,
    highlight: false,
    indent: 2,
    maxDepth: Infinity,
    min: false,
    plugins: [],
    printBasicPrototype: true,
    printFunctionName: true,
    theme: DEFAULT_THEME,
  }
  build.DEFAULT_OPTIONS = DEFAULT_OPTIONS

  function validateOptions(options) {
    Object.keys(options).forEach((key) => {
      if (!DEFAULT_OPTIONS.hasOwnProperty(key)) {
        throw new Error(`pretty-format: Unknown option "${key}".`)
      }
    })

    if (options.min && options.indent !== undefined && options.indent !== 0) {
      throw new Error('pretty-format: Options "min" and "indent" cannot be used together.')
    }

    if (options.theme !== undefined) {
      if (options.theme === null) {
        throw new Error('pretty-format: Option "theme" must not be null.')
      }

      if (typeof options.theme !== 'object') {
        throw new Error(`pretty-format: Option "theme" must be of type "object" but instead received "${typeof options.theme}".`)
      }
    }
  }

  const getColorsHighlight = (options) =>
    DEFAULT_THEME_KEYS.reduce((colors, key) => {
      const value = options.theme && options.theme[key] !== undefined ? options.theme[key] : DEFAULT_THEME[key]
      const color = value && _ansiStyles.default[value]

      if (color && typeof color.close === 'string' && typeof color.open === 'string') {
        colors[key] = color
      } else {
        throw new Error(`pretty-format: Option "theme" has a key "${key}" whose value "${value}" is undefined in ansi-styles.`)
      }

      return colors
    }, Object.create(null))

  const getColorsEmpty = () =>
    DEFAULT_THEME_KEYS.reduce((colors, key) => {
      colors[key] = {
        close: '',
        open: '',
      }
      return colors
    }, Object.create(null))

  const getPrintFunctionName = (options) => (options && options.printFunctionName !== undefined ? options.printFunctionName : DEFAULT_OPTIONS.printFunctionName)

  const getEscapeRegex = (options) => (options && options.escapeRegex !== undefined ? options.escapeRegex : DEFAULT_OPTIONS.escapeRegex)

  const getEscapeString = (options) => (options && options.escapeString !== undefined ? options.escapeString : DEFAULT_OPTIONS.escapeString)

  const getConfig = (options) => {
    var _options$printBasicPr

    return {
      callToJSON: options && options.callToJSON !== undefined ? options.callToJSON : DEFAULT_OPTIONS.callToJSON,
      colors: options && options.highlight ? getColorsHighlight(options) : getColorsEmpty(),
      compareKeys: options && typeof options.compareKeys === 'function' ? options.compareKeys : DEFAULT_OPTIONS.compareKeys,
      escapeRegex: getEscapeRegex(options),
      escapeString: getEscapeString(options),
      indent: options && options.min ? '' : createIndent(options && options.indent !== undefined ? options.indent : DEFAULT_OPTIONS.indent),
      maxDepth: options && options.maxDepth !== undefined ? options.maxDepth : DEFAULT_OPTIONS.maxDepth,
      min: options && options.min !== undefined ? options.min : DEFAULT_OPTIONS.min,
      plugins: options && options.plugins !== undefined ? options.plugins : DEFAULT_OPTIONS.plugins,
      printBasicPrototype:
        (_options$printBasicPr = options === null || options === void 0 ? void 0 : options.printBasicPrototype) !== null && _options$printBasicPr !== void 0
          ? _options$printBasicPr
          : true,
      printFunctionName: getPrintFunctionName(options),
      spacingInner: options && options.min ? ' ' : '\n',
      spacingOuter: options && options.min ? '' : '\n',
    }
  }

  function createIndent(indent) {
    return new Array(indent + 1).join(' ')
  }
  /**
   * Returns a presentation string of your `val` object
   * @param val any potential JavaScript object
   * @param options Custom settings
   */

  function format(val, options) {
    if (options) {
      validateOptions(options)

      if (options.plugins) {
        const plugin = findPlugin(options.plugins, val)

        if (plugin !== null) {
          return printPlugin(plugin, val, getConfig(options), '', 0, [])
        }
      }
    }

    const basicResult = printBasicValue(val, getPrintFunctionName(options), getEscapeRegex(options), getEscapeString(options))

    if (basicResult !== null) {
      return basicResult
    }

    return printComplexValue(val, getConfig(options), '', 0, [])
  }

  const plugins = {
    AsymmetricMatcher: _AsymmetricMatcher.default,
    ConvertAnsi: _ConvertAnsi.default,
    DOMCollection: _DOMCollection.default,
    DOMElement: _DOMElement.default,
    Immutable: _Immutable.default,
    ReactElement: _ReactElement.default,
    ReactTestComponent: _ReactTestComponent.default,
  }
  build.plugins = plugins
  var _default = format
  build.default = _default

  // This is the root component of the React app
  function Root() {
    if (!console['error']) console['error'] = console.log

    // the globalSharedData object is passed at window load time from the plugin, so you can use it for initial state
    // globalSharedData = { data: {}, returnPluginCommand: {command: "", id: ""}
    console.log('_Root init: globalSharedData', globalSharedData)
    if (typeof globalSharedData === 'undefined' || !globalSharedData) console.log('Root: globalSharedData is undefined', globalSharedData)
    const { lastUpdated = null, returnPluginCommand = {}, debug = false, ENV_MODE } = globalSharedData // this is the global data
    const data = globalSharedData
    if (typeof globalSharedData === 'undefined') throw globalSharedData
    if (typeof globalSharedData.lastUpdated === 'undefined') throw `Root: globalSharedData.lastUpdated is undefined`

    /**
     * send runplugin command to NotePlan to process data
     * returnPluginCommand var with {command && id} should be sent in the initial data payload in HTML
     * @param {Array<any>} args to send to NotePlan (typically an array with two items: ["actionName",{an object payload, e.g. row, field, value}])
     * @example sendToPlugin({ choice: action, rows: selectedRows })
     *
     */
    const sendToPlugin = React.useCallback((args) => {
      const returnPluginCommand = globalSharedData.returnPluginCommand || 'undefined'
      if (returnPluginCommand === 'undefined' || !returnPluginCommand?.command || !returnPluginCommand?.id)
        throw 'returnPluginCommand variable is not passed correctly to set up comms bridge. Check your data object which you are sending to invoke React'
      if (!returnPluginCommand?.command) throw 'returnPluginCommand.cmd is not defined in the intial data passed to the plugin'
      if (!returnPluginCommand?.id) throw 'returnPluginCommand.id is not defined in the intial data passed to the plugin'
      const { command, id } = returnPluginCommand // this comes from the initial data passed to the plugin
      runPluginCommand(command, id, args)
    }, [])
    const [npData, setNPData] = React.useState(data) // set it from initial data
    const [lastUpdatedState, setLastUpdatedState] = React.useState(lastUpdated) // set it from initial data
    const [warning, setWarning] = React.useState({
      warn: false,
      msg: '',
      color: 'w3-pale-red',
    })

    // delete dataFromPlugin.startupData // remove the startupData from the object so we don't get confused. state is handled by React

    useEffect(() => {
      // This is effectively a reducer we will use to process messages from the plugin
      // do not change this function name
      function onMessageFromPlugin(event) {
        const { origin, source, ports, data } = event
        if (event?.data && typeof event.data === 'string' && !event.data.startsWith('setImmediate$')) {
          console.log(`onMessageFromPlugin: origin=${format_1(origin)} source=${format_1(source)} ports=${format_1(ports)} data=${format_1(data)}`)
          JSON.stringify(event, null, 4)
          try {
            const { type, payload } = event.data // remember: event is on prototype and not JSON.stringify-able
            if (!type) throw (`onMessageFromPlugin: event.data.type is undefined`, event.data)
            if (!payload) throw (`onMessageFromPlugin: event.data.payload is undefined`, event.data)
            if (type && payload) {
              console.log(`onMessageFromPlugin: ${JSON.stringify(event.data)}`)
              // Spread existing state into new object to keep it immutable
              // TODO: ideally, you would use a reducer here
              console.log(`Root2: lastUpdated=${JSON.stringify(lastUpdated)}`)
              console.log(`root payload.lastUpdated`, payload.lastUpdated)
              setLastUpdatedState((prevData) => ({
                ...prevData,
                ...payload.lastUpdated,
              }))
              console.log(`onMessageFromPlugin Action type: ${type || ''}`)
              switch (type) {
                case 'SET_TITLE':
                  // Note this works because we are using payload.title in npData
                  document.title = payload.title
                  break
                case 'SET_DATA':
                  console.log('SET_DATA before')
                  setNPData((prevData) => ({
                    ...prevData,
                    ...payload.data,
                  }))
                  console.log('SET_DATA after')
                  break
                case 'SHOW_BANNER':
                  const warnObj = {
                    warn: true,
                    msg: payload.msg,
                    color: payload.color ?? 'w3-pale-red',
                    border: payload.border ?? 'w3-border-red',
                  }
                  console.log(`onMessageFromPlugin: SHOW_BANNER: sending: ${JSON.stringify(warnObj)}`)
                  setWarning(warnObj)
                  console.log(`onMessageFromPlugin: SHOW_BANNER: sent: ${JSON.stringify(warnObj)}`)
                  break
                default:
                  break
              }
            } else {
              console.log(`onMessageFromPlugin: called but event.data.type and/or event.data.payload is undefined`, event)
            }
          } catch (error) {
            console.log('onMessageFromPlugin: error=' + JSON.stringify(error))
          }
        }
      }
      // the name of this function is important. it corresponds with the Bridge call in the HTMLView
      // I don't recommend changing this function name here or in the bridge
      window.addEventListener('message', onMessageFromPlugin)
      return () => window.removeEventListener('message', onMessageFromPlugin)
    }, [])
    const doSomething = () => {
      console.log(`_Root: doSomething`)
      // send some info to the plugin
      // first param is the action type and the rest are data (can be any form you want)
      data.foo = 'bar'
      sendMessageToPlugin(['commsBridgeTest', 'green', 'tea'])
    }
    const hideBanner = () => {
      setWarning({
        warn: false,
        msg: '',
        color: 'w3-pale-red',
      })
    }

    /**
     * **************************************************
     */

    //  <h1>{npData.title}</h1>

    const MemoizedWebView = React.memo(WebView) // React tries to re-render the WebView every time the Root component re-renders. This is a performance optimization.

    const myErrorLogger = (error, info) => {
      console.log(`ErrorBoundary got error: error=\n${JSON.stringify(error)},\ninfo=${JSON.stringify(info)}`)
    }
    console.log(`Root: setting data markers`)
    const origData = data
    const origSendToPlugin = sendToPlugin

    /**
     * Profiling React Components
     * @param {*} id
     * @param {*} phase
     * @param {*} actualDuration
     * @param {*} baseDuration
     * @param {*} startTime
     * @param {*} commitTime
     */
    function onRender(id, phase, actualDuration, baseDuration, startTime, commitTime) {
      // Aggregate or log render timings...
      console.log(
        `===================\nPROFILING:${id} phase=${phase} actualDuration=${actualDuration} baseDuration=${baseDuration} startTime=${startTime} commitTime=${commitTime}\n===================\n`,
      )
    }
    return /*#__PURE__*/ React.createElement(
      ErrorBoundary,
      {
        FallbackComponent: ErrorFallback,
        onReset: () => {},
        onError: myErrorLogger,
      },
      /*#__PURE__*/ React.createElement(
        React.StrictMode,
        null,
        /*#__PURE__*/ React.createElement(
          'div',
          {
            className: 'Root',
          },
          /*#__PURE__*/ React.createElement(MessageBanner, {
            warn: warning.warn,
            msg: warning.msg,
            color: warning.color,
            border: warning.border,
            hide: hideBanner,
          }),
          ENV_MODE === 'development'
            ? /*#__PURE__*/ React.createElement(
                React.Profiler,
                {
                  id: 'MemoizedWebView',
                  onRender: onRender,
                },
                /*#__PURE__*/ React.createElement(MemoizedWebView, {
                  data: data,
                  sendToPlugin: sendToPlugin,
                  dataChanged: data !== origData,
                  cbChanged: origSendToPlugin !== sendToPlugin,
                }),
              )
            : /*#__PURE__*/ React.createElement(MemoizedWebView, {
                data: data,
                sendToPlugin: sendToPlugin,
                dataChanged: data === origData,
                cbChanged: origSendToPlugin === sendToPlugin,
              }),
          debug &&
            /*#__PURE__*/ React.createElement(
              React.Fragment,
              null,
              /*#__PURE__*/ React.createElement(
                'div',
                {
                  onClick: doSomething,
                },
                'Test Communication Bridge',
              ),
              /*#__PURE__*/ React.createElement(
                'div',
                {
                  onClick: () => runPluginCommand('onMessageFromHTMLView', 'dwertheimer.React', ['ranAPluginCommand', 'green', 'tea']),
                },
                'Test Generic RunPlugin Command (onMessageFromHTMLView,dwertheimer.React)',
              ),
              /*#__PURE__*/ React.createElement(
                'div',
                null,
                /*#__PURE__*/ React.createElement(
                  'i',
                  {
                    style: {
                      fontSize: '12px',
                    },
                  },
                  'Last Update: ',
                  lastUpdatedState.msg,
                  ' (',
                  lastUpdatedState.date,
                  ')',
                ),
                /*#__PURE__*/ React.createElement(
                  'div',
                  {
                    className: 'monospaceData',
                  },
                  'globalSharedData: ',
                  JSON.stringify(data, null, 2),
                ),
                /*#__PURE__*/ React.createElement(
                  'div',
                  {
                    className: 'monospaceData',
                  },
                  'npData: ',
                  JSON.stringify(npData, null, 2),
                ),
              ),
            ),
        ),
      ),
    )
  }

  /**
   * Warning/message banner at top of page
   * Send a SHOW_BANNER message from the plugin with the following payload:
   * @param { warn, msg, color, border, hide } props
   * @returns
   */
  function MessageBanner(props) {
    if (!props.warn) {
      return null
    }
    // onclick="this.parentElement.style.display='none'" class="w3-button w3-display-topright"
    console.log(`MessageBanner: props=${JSON.stringify(props)}`)
    const className = `w3-panel w3-display-container ${props.border ? 'w3-leftbar' : ''} ${props.border ?? 'w3-border-red'} ${props.color ?? 'w3-pale-red'}`
    window.scrollTo(0, 0)
    return /*#__PURE__*/ React.createElement(
      React.StrictMode,
      null,
      /*#__PURE__*/ React.createElement(
        'div',
        {
          className: className,
        },
        /*#__PURE__*/ React.createElement(
          'span',
          {
            onClick: () => props.hide(),
            className: 'w3-button w3-display-right',
          },
          'X',
        ),
        /*#__PURE__*/ React.createElement('p', null, props.msg),
      ),
    )
  }

  Object.defineProperty(exports, 'CSSProperties', {
    enumerable: true,
    get: function () {
      return React$1.CSSProperties
    },
  })
  exports.AsyncSelect = AsyncSelect
  exports.Creatable = CreatableSelect
  exports.DataTable = DataTable
  exports.ErrorBoundary = reactErrorBoundary_umd.exports.ErrorBoundary
  exports.ErrorFallback = ErrorFallback$1
  exports.Root = Root
  exports.Select = Select
  exports.StatusButton = StatusButton
  exports.ThemedSelect = ThemedSelect$1
  exports.WebView = WebView$1
  exports.chroma = chroma
  exports.createDataTableTheme = index_cjs.createTheme
  exports.debounce = lodash_debounce
  exports.makeAnimated = index
  exports.styled = He$2
  exports.useCreatable = useCreatable

  Object.defineProperty(exports, '__esModule', { value: true })

  return exports
})({}, react)
Object.assign(typeof globalThis == 'undefined' ? this : globalThis, jsxBundle)
