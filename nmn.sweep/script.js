var exports=function(e){"use strict";function t(e){return{year:e.getFullYear(),month:e.getMonth()+1,date:e.getDate()}}function a(e){const{year:a,month:n,date:o}=t(e);return"".concat(a,"-").concat(n<10?"0":"").concat(n,"-").concat(o<10?"0":"").concat(o)}function n(e){const{year:a,month:n,date:o}=t(e);return"".concat(a).concat(n<10?"0":"").concat(n).concat(o<10?"0":"").concat(o)}async function o(e,t,a){var n,o;const{index:l}=await CommandBar.showOptions(t.map((e=>e.label)),e);return null!==(n=null===(o=t[l])||void 0===o?void 0:o.value)&&void 0!==n?n:a}async function l(e,t="OK"){await CommandBar.showOptions([t],e)}async function i(e,t=!0,n="0000-00-00",i=!0){const r=e.paragraphs,c=a(new Date),s=r.filter((e=>"open"==e.type&&null!=e.date&&a(e.date)<c&&a(e.date)>=n)),d=s.length;if(d>0){let n=!0;const l=1!=d?"tasks":"task";if(t){var u;Editor.openNoteByFilename(e.filename);const t="🔗 Yes, reschedule (update '>date') ".concat(d," ").concat(l," to today");n=await o("🧹 Ready to sweep '".concat(null!==(u=e.title)&&void 0!==u?u:"Untitled","'?"),[{label:t,value:!0},{label:"❌ Skip this note",value:!1}],!1)}n&&s.forEach((t=>{if("open"===t.type&&null!=t.date){const n=a(t.date);t.content=t.content.replace(n,c),Editor.filename==e.filename?Editor.updateParagraph(t):e.updateParagraph(t)}}))}else i&&t&&await l("Everything is already up to date here!")}async function r(e,t=!0,n=!0){const l=e.paragraphs,i=[],r=[],s=["open","title"],d=["open"],u=["scheduled","cancelled","done"],p=["title","empty"];let m=null;l.forEach((e=>{u.includes(e.type)||(d.includes(e.type)&&0===e.indents&&(m=e),p.includes(e.type)&&0===e.indents&&(m=null),(s.includes(e.type)||(e.indents>0||"empty"===e.type)&&null!=m)&&(i.push(e),["title","empty"].includes(e.type)||r.push(e)))}));const h=new Date,y=DataStore.calendarNoteByDate(h);if(null==y)return;const f=i.filter((e=>"open"===e.type)).length;if(f>0){let n="move";if(t&&(Editor.openNoteByFilename(e.filename),n=await o("🧹 Ready to sweep?",[{label:"✂️ Move (cut & paste) ".concat(f," task(s) to today"),value:"move"},{label:"🗓 Reschedule (copy) ".concat(f," task(s) to today"),value:"reschedule"},{label:"❌ Cancel",value:!1}],!1)),"move"===n&&(y.paragraphs=[...y.paragraphs,...i],r.forEach((t=>{Editor.filename===e.filename?Editor.removeParagraph(t):e.removeParagraph(t)}))),"reschedule"===n){const t=e.date,n=null!=t?" <".concat(a(t)):"",o=i.map((e=>{const t=e.duplicate();return"open"===e.type&&(t.content=c(t.content)+n),t}));y.paragraphs=[...y.paragraphs,...o],r.forEach((t=>{t.type="scheduled",t.content="".concat(c(t.content)," >").concat(a(h)),Editor.filename==e.filename?Editor.updateParagraph(t):e.updateParagraph(t)}))}}else n&&t&&await CommandBar.showInput("There are no open tasks to move in this note.","OK, I'll open another date.")}function c(e){return e.replace(/<\d{4}-\d{2}-\d{2}/g,"").replace(/>\d{4}-\d{2}-\d{2}/g,"").trim()}const s=[{label:"7 days",value:{num:7,unit:"day"}},{label:"14 days",value:{num:14,unit:"day"}},{label:"21 days",value:{num:21,unit:"day"}},{label:"1 month",value:{num:1,unit:"month"}},{label:"3 months",value:{num:3,unit:"month"}},{label:"6 months",value:{num:6,unit:"month"}},{label:"1 year",value:{num:1,unit:"year"}},{label:"❌ Cancel",value:{num:0,unit:"day"}}],d={unit:"day",num:0};return e.sweepAll=async function(){const{unit:e,num:t}=await o("🧹 Reschedule tasks to today of the last...",s,d);if(0===t)return void await l("Cancelled! No changes made.");const c=Calendar.addUnitToDate(new Date,e,-t),u=n(Calendar.addUnitToDate(new Date,e,-t));if(0==(await CommandBar.showOptions(["✅ OK","❌ Skip"],"📙 Processing with your Project Notes first...")).index)for(const e of DataStore.projectNotes)await i(e,!0,a(c),!1);if(0===(await CommandBar.showOptions(["✅ OK","❌ Skip"],"🗓 Now processing your Daily Notes...")).index){const e=n(new Date),t=DataStore.calendarNotes.filter((t=>t.filename<e&&t.filename>=u));for(const e of t)await r(e,!0,!1)}await l("All Done!")},e.sweepFile=async function(){const e=Editor.type,t=Editor.note;if(null!=t){if("Calendar"===e){const e=n(new Date)+"."+DataStore.defaultFileExtension;return Editor.filename==e?void await CommandBar.showInput("Open a different note than today","OK"):await r(t)}return await i(t)}},Object.defineProperty(e,"__esModule",{value:!0}),e}({});Object.assign(globalThis,exports);
